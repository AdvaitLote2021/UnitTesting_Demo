<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="CloneToSameOpp" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="project" elementType="Argument">
            <stringProp name="Argument.name">project</stringProp>
            <stringProp name="Argument.value">GE_CloneToSameOpp_01</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="suite" elementType="Argument">
            <stringProp name="Argument.name">suite</stringProp>
            <stringProp name="Argument.value">smokeTest</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rId" elementType="Argument">
            <stringProp name="Argument.name">rId</stringProp>
            <stringProp name="Argument.value">${__P(runId)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="p_ErrorLogPath" elementType="Argument">
            <stringProp name="Argument.name">p_ErrorLogPath</stringProp>
            <stringProp name="Argument.value">${__P(errorPath)}//ErrorLog_CloneToSameOpp_${__time(YMD,)}.csv</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">C://apache-jmeter-5.4.1//apache-jmeter-5.4.1//bin//GE_SmokeTest_Results//errorLogs//GE_CloneToSameOppErrorPath.csv</stringProp>
          </elementProp>
          <elementProp name="p_ServerName1" elementType="Argument">
            <stringProp name="Argument.name">p_ServerName1</stringProp>
            <stringProp name="Argument.value">gehealthcare-amer--summer.my.salesforce.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_ServerName2" elementType="Argument">
            <stringProp name="Argument.name">p_ServerName2</stringProp>
            <stringProp name="Argument.value">test.salesforce.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_ServerName3" elementType="Argument">
            <stringProp name="Argument.name">p_ServerName3</stringProp>
            <stringProp name="Argument.value">c.salesforce.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_ServerName4" elementType="Argument">
            <stringProp name="Argument.name">p_ServerName4</stringProp>
            <stringProp name="Argument.value">gehealthcare-amer--summer--c.visualforce.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_ServerName5" elementType="Argument">
            <stringProp name="Argument.name">p_ServerName5</stringProp>
            <stringProp name="Argument.value">gehealthcare-amer--summer.lightning.force.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_ServerName6" elementType="Argument">
            <stringProp name="Argument.name">p_ServerName6</stringProp>
            <stringProp name="Argument.value">gehealthcare-amer--summer--c.documentforce.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_ServerName7" elementType="Argument">
            <stringProp name="Argument.name">p_ServerName7</stringProp>
            <stringProp name="Argument.value">gehealthcare-amer--summer--apttus-config2.visualforce.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_ServerName8" elementType="Argument">
            <stringProp name="Argument.name">p_ServerName8</stringProp>
            <stringProp name="Argument.value">static.lightning.force.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_indexPath" elementType="Argument">
            <stringProp name="Argument.name">p_indexPath</stringProp>
            <stringProp name="Argument.value">${__P(indexPath)}//GE_CloneToSameOpp_01_RunId.csv</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">static.lightning.force.com  C:\apache-jmeter-5.4.1\apache-jmeter-5.4.1\bin\GE_CloneToSameOpp_01_RunId.csv</stringProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">true</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list">
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">https://gehealthcare-amer--summer.lightning.force.com/cometd/</stringProp>
            <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
            <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
            <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
          </elementProp>
        </collectionProp>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config - RunId" enabled="true">
        <stringProp name="filename">C:/apache-jmeter-5.4.1/apache-jmeter-5.4.1/bin/GE_CloneToSameOpp_01_RunId.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">rId</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config - UserDetails" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">C:/apache-jmeter-5.4.1/apache-jmeter-5.4.1/bin/GE_CloneToSameOpp_userDetails.csv</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">p_LoginId,p_Password,p_UserName,p_QuoteNumber,p_OriginalOppName,p_AccountName,p_UserNameModified</stringProp>
      </CSVDataSet>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="GE_CloneToSameOpp" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="GE_CloneToSameOpp_01_Launch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-66" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_QCQQ" enabled="true">
              <stringProp name="TestPlan.comments">zhEtehnlN6B</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_QCQQ</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;QCQQ&quot; value=&quot;(.*?)&quot; /&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_QCQQNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1089261495">value=&quot;Log In to Sandbox&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Transaction - GE_CloneToSameOpp_01_Launch
API - Launch/-66
Assertion_NotFound</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDateTime;

String time=LocalDateTime.now();

String output = prev.getResponseDataAsString();

String responseCode=prev.getResponseCode();

String requestHeaders=prev.getRequestHeaders();

String responseHeaders=prev.getResponseHeaders();

String requestInfo=prev.getSamplerData();

String api_name = prev.toString();

String c_QCQQ=vars.get(&quot;c_QCQQ&quot;);

String FailureMessage = &quot;&quot;;

if(c_QCQQ.equals(&quot;NotFound&quot;))
{
	AssertionResult.setFailure(true);
	FailureMessage += &quot;c_QCQQ : NotFound\t&quot;;
	FailureMessage += &quot;Incorrect Response Data&quot;;
 	FileWriter f= new FileWriter(&quot;${p_ErrorLogPath}&quot;,true);
	BufferedWriter b= new BufferedWriter(f);
	b.write(&quot;_______________________________Non-200 Code Returned_________________________________&quot;);
	b.newLine();
	b.write(&quot;For User : &quot;+vars.get(&quot;p_UserNameModified&quot;));
	b.newLine();
	b.write(&quot;FailureMessage: &quot;+FailureMessage);
	b.newLine();
	b.write(&quot;Transaction Name : &quot;+api_name);
	b.newLine();
	b.write(&quot;SampleInfo &quot;+requestInfo);
	b.newLine();
	b.write(&quot;requestHeaders &quot;+requestHeaders);
	b.newLine();
	b.write(&quot;responseHeaders &quot;+responseHeaders);
	b.newLine();
	b.write(&quot;\t/api/negotiate/register,&quot; + time + &quot;,&quot; + &quot; Response Code:&quot; + responseCode + &quot;,&quot; + &quot;Response: &quot; + output);
	b.newLine();
	b.write(&quot;________________________________________________________________&quot;);
	b.newLine();
	b.flush();
	b.close();
 }
</stringProp>
              <stringProp name="scriptLanguage">java</stringProp>
            </JSR223Assertion>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">def temp = Integer.parseInt(vars.get(&quot;rId&quot;))
temp = temp+1
vars.put(&quot;rId&quot;,String.valueOf(temp))</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">FileWriter f = new FileWriter(&quot;${p_indexPath}&quot;,false)
BufferedWriter b = new BufferedWriter(f)
b.write(&quot;${rId}&quot;)
b.flush()
b.close()</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/marketing/survey/survey1/1384-71" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/marketing/survey/survey1/1384</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/marketing/survey/survey4/1384-74" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/marketing/survey/survey4/1384</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/login/sessionserver212.html-80" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName2}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/login/sessionserver212.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/login-messages/promos.html-84" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName3}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/login-messages/promos.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/enterprise/salesforce/prod/6140/v14/oneTrust/consent/742a15b9-6aa4-4c2f-99c1-ad4ca220cf96/742a15b9-6aa4-4c2f-99c1-ad4ca220cf96.json-101" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">a.sfdcstatic.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/enterprise/salesforce/prod/6140/v14/oneTrust/consent/742a15b9-6aa4-4c2f-99c1-ad4ca220cf96/742a15b9-6aa4-4c2f-99c1-ad4ca220cf96.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName3}/login-messages/promos.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName3}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/login-messages/promos/_jcr_content.personalization.pagemetadata.json-110" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/login-messages/promos/_jcr_content.personalization.pagemetadata.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName3}/login-messages/promos.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName3}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/enterprise/salesforce/prod/6140/v14/oneTrust/consent/742a15b9-6aa4-4c2f-99c1-ad4ca220cf96/e876bf1a-d16a-4d93-86f9-c927df47cfe1/en.json-118" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">a.sfdcstatic.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/enterprise/salesforce/prod/6140/v14/oneTrust/consent/742a15b9-6aa4-4c2f-99c1-ad4ca220cf96/e876bf1a-d16a-4d93-86f9-c927df47cfe1/en.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName3}/login-messages/promos.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName3}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/enterprise/salesforce/prod/6140/v14/oneTrust/scripttemplates/6.14.0/assets/otCenterRounded.json-123" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">a.sfdcstatic.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/enterprise/salesforce/prod/6140/v14/oneTrust/scripttemplates/6.14.0/assets/otCenterRounded.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName3}/login-messages/promos.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName3}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/enterprise/salesforce/prod/6140/v14/oneTrust/scripttemplates/6.14.0/assets/v2/otPcTab.json-124" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">a.sfdcstatic.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/enterprise/salesforce/prod/6140/v14/oneTrust/scripttemplates/6.14.0/assets/v2/otPcTab.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName3}/login-messages/promos.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName3}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="GE_CloneToSameOpp_02_Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-134" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="un" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">un</stringProp>
                  <stringProp name="Argument.value">${p_LoginId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="width" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">width</stringProp>
                  <stringProp name="Argument.value">1280</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="height" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">height</stringProp>
                  <stringProp name="Argument.value">720</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hasRememberUn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hasRememberUn</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="startURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">startURL</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="loginURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">loginURL</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="loginType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">loginType</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="useSecure" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">useSecure</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="local" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">local</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lt</stringProp>
                  <stringProp name="Argument.value">standard</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="qs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">qs</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="locale" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">locale</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="oauth_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">oauth_token</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="oauth_callback" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">oauth_callback</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="login" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">login</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="serverid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">serverid</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="QCQQ" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">QCQQ</stringProp>
                  <stringProp name="Argument.value">${c_QCQQ}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="display" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">display</stringProp>
                  <stringProp name="Argument.value">page</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">${p_LoginId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ExtraLog" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ExtraLog</stringProp>
                  <stringProp name="Argument.value">%5B%7B%22width%22:1280%7D,%7B%22height%22:720%7D,%7B%22language%22:%22en-US%22%7D,%7B%22offset%22:-5.5%7D,%7B%22scripts%22:%5B%7B%22size%22:249,%22summary%22:%22if%20(self%20==%20top)%20%7Bdocument.documentElement.style.v%22%7D,%7B%22size%22:586,%22summary%22:%22var%20SFDCSessionVars=%7B%5C%22server%5C%22:%5C%22https:%5C%5C/%5C%5C/test.sale%22%7D,%7B%22url%22:%22https://${p_ServerName1}/jslibrary/SfdcSessionBase208.js%22%7D,%7B%22url%22:%22https://${p_ServerName1}/jslibrary/LoginHint208.js%22%7D,%7B%22size%22:26,%22summary%22:%22LoginHint.hideLoginForm();%22%7D,%7B%22size%22:36,%22summary%22:%22LoginHint.getSavedIdentities(false);%22%7D,%7B%22url%22:%22https://${p_ServerName1}/jslibrary/baselogin.js%22%7D,%7B%22url%22:%22https://${p_ServerName1}/marketing/survey/survey1/1384%22%7D,%7B%22url%22:%22https://${p_ServerName1}/marketing/survey/survey4/1384%22%7D,%7B%22size%22:451,%22summary%22:%22function%20handleLogin()%7Bdocument.login.un.value=doc%22%7D%5D%7D,%7B%22scriptCount%22:10%7D,%7B%22iframes%22:%5B%22https://${p_ServerName3}/login-messages/promos.html%22,%22https://${p_ServerName2}/login/sessionserver212.html%22%5D%7D,%7B%22iframeCount%22:2%7D,%7B%22referrer%22:%22NO_REFERRER%22%7D%5D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Fingerprint" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Fingerprint</stringProp>
                  <stringProp name="Argument.value">%7B%22platform%22:%22Win32%22,%22window%22:%22695x1295%22,%22screen%22:%22720x1280%22,%22color%22:%2224-24%22,%22timezoneOffset%22:%22-330%22,%22canvas%22:%22429185730%22,%22sessionStorage%22:%22true%22,%22LocalStorage%22:%22true%22,%22indexDB%22:%22true%22,%22webSockets%22:%22true%22,%22plugins%22:%22%22,%22drm%22:1,%22languages%22:%5B%22en-US%22,%22en%22%5D,%22fonts%22:%22%22,%22codecs%22:%22gMGIqqqgRqoCqH4=%22,%22mediaDevices%22:%22videoinput::sRJtwqhib3BFQfYszoiwmKUlLoqCNdZvYvIZqYl+9Sk=%5Cnaudioinput::knnj6P1qEHq9R/WFUvHwZrWn/A+qPhuQ3RcQekykppc=%5Cnaudioinput::gW0fruXweXa1lnYoYqG0bgYWUOZkI/vPzjjeUr9Lbcc=%5Cn%22%7D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pw</stringProp>
                  <stringProp name="Argument.value">${p_Password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/secur/frontdoor.jsp-135" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">00D7d0000077kVG!ARsAQH1G6KH4u9rnmuIiGd7ECT6bpJppMLhUkrnChMfU3YnOpfmWgJATsZ9f1F8tWBk4YqPlNJoDPfBLedz.t4cD6ozOgAZw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="apv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">apv</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="allp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">allp</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cshc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cshc</stringProp>
                  <stringProp name="Argument.value">a00000KWuPEd0000077kVG</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="display" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">display</stringProp>
                  <stringProp name="Argument.value">page</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/secur/frontdoor.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/secur/myDomainDoor-136" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="oid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">oid</stringProp>
                  <stringProp name="Argument.value">00D7d0000077kVG</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="retURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">retURL</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName6}/secur/contentDoor?startURL=https%3A%2F%2F${p_ServerName1}%2Fhome%2Fhome.jsp&amp;sid=00D7d0000077kVG%21ARsAQC_oSjx2OGqBptWi39ZoDaFoUv3sWZ0WXsINGW5t1hUToEKjGeniMU8RbWpzR310TGU0gYr4dVUFDH7ZR6YV4WaqxLbO&amp;skipRedirect=1&amp;lm=eyJlbmMiOiJBMjU2R0NNIiwiYXVkIjoiMDBEN2QwMDAwMDc3a1ZHIiwia2lkIjoie1widFwiOlwiMDBEN2QwMDAwMDc3a1ZHXCIsXCJ2XCI6XCIwMkcwYzAwMDAwMGtRdHVcIixcImFcIjpcImNvbnRlbnRkb29ydXNlcnRyYW5zaWVudGtleWVuY3J5cHRcIixcInVcIjpcIjAwNTNhMDAwMDBLV3VQRVwifSIsImNyaXQiOlsiaWF0Il0sImlhdCI6MTYzMzA2Mjg3OTc5MywiZXhwIjowfQ%3D%3D..d_QmJNS3CrKui5Z1.o3fc9u3LjDS60v1pHq4nxQ%3D%3D.S7GRw_xA3AD_ptTY8BSRaA%3D%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">cs192.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/secur/myDomainDoor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/secur/contentDoor-137" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">startURL</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName1}/home/home.jsp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">00D7d0000077kVG!ARsAQC_oSjx2OGqBptWi39ZoDaFoUv3sWZ0WXsINGW5t1hUToEKjGeniMU8RbWpzR310TGU0gYr4dVUFDH7ZR6YV4WaqxLbO</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="skipRedirect" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">skipRedirect</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lm</stringProp>
                  <stringProp name="Argument.value">eyJlbmMiOiJBMjU2R0NNIiwiYXVkIjoiMDBEN2QwMDAwMDc3a1ZHIiwia2lkIjoie1widFwiOlwiMDBEN2QwMDAwMDc3a1ZHXCIsXCJ2XCI6XCIwMkcwYzAwMDAwMGtRdHVcIixcImFcIjpcImNvbnRlbnRkb29ydXNlcnRyYW5zaWVudGtleWVuY3J5cHRcIixcInVcIjpcIjAwNTNhMDAwMDBLV3VQRVwifSIsImNyaXQiOlsiaWF0Il0sImlhdCI6MTYzMzA2Mjg3OTc5MywiZXhwIjowfQ==..d_QmJNS3CrKui5Z1.o3fc9u3LjDS60v1pHq4nxQ==.S7GRw_xA3AD_ptTY8BSRaA==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName6}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/secur/contentDoor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/home/home.jsp-140" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/home/home.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName6}/secur/contentDoor?startURL=https%3A%2F%2F${p_ServerName1}%2Fhome%2Fhome.jsp&amp;sid=00D7d0000077kVG%21ARsAQC_oSjx2OGqBptWi39ZoDaFoUv3sWZ0WXsINGW5t1hUToEKjGeniMU8RbWpzR310TGU0gYr4dVUFDH7ZR6YV4WaqxLbO&amp;skipRedirect=1&amp;lm=eyJlbmMiOiJBMjU2R0NNIiwiYXVkIjoiMDBEN2QwMDAwMDc3a1ZHIiwia2lkIjoie1widFwiOlwiMDBEN2QwMDAwMDc3a1ZHXCIsXCJ2XCI6XCIwMkcwYzAwMDAwMGtRdHVcIixcImFcIjpcImNvbnRlbnRkb29ydXNlcnRyYW5zaWVudGtleWVuY3J5cHRcIixcInVcIjpcIjAwNTNhMDAwMDBLV3VQRVwifSIsImNyaXQiOlsiaWF0Il0sImlhdCI6MTYzMzA2Mjg3OTc5MywiZXhwIjowfQ%3D%3D..d_QmJNS3CrKui5Z1.o3fc9u3LjDS60v1pHq4nxQ%3D%3D.S7GRw_xA3AD_ptTY8BSRaA%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_clkRecordId" enabled="true">
              <stringProp name="TestPlan.comments">0057d000004y0jw  &lt;div class=&quot;userBlock&quot; data-hovid=&quot;(.*?)&quot;&gt;(.*?) alt=&quot;User: Cachewarmer ULS USCAN&quot; </stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_clkRecordId</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;div class=&quot;userBlock&quot; data-hovid=&quot;(.*?)&quot;&gt;(.*?)alt=&quot;User: ${p_UserNameModified}&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_clkRecordIdNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_oid" enabled="false">
              <stringProp name="TestPlan.comments">00D7d0000077kVG</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_oid</stringProp>
              <stringProp name="RegexExtractor.regex">,&quot;oid&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_oidNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1830613076">title=&quot;Account Plans Tab&quot;&gt;Account Plans</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Transaction - GE_CloneToSameOpp_02_Login
API Name - /home/home.jsp-140
Assertion_NotFound</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDateTime;

String time=LocalDateTime.now();

String output = prev.getResponseDataAsString();

String responseCode=prev.getResponseCode();

String requestHeaders=prev.getRequestHeaders();

String responseHeaders=prev.getResponseHeaders();

String requestInfo=prev.getSamplerData();

String api_name = prev.toString();

String c_clkRecordId=vars.get(&quot;c_clkRecordId&quot;);

String FailureMessage = &quot;&quot;;

if((c_clkRecordId.equals(&quot;NotFound&quot;)))
{
	AssertionResult.setFailure(true);
	if(c_clkRecordId.equals(&quot;NotFound&quot;))
		FailureMessage += &quot;c_clkRecordId : NotFound\t&quot;;
	FailureMessage += &quot;Incorrect Response Data&quot;;
 	FileWriter f= new FileWriter(&quot;${p_ErrorLogPath}&quot;,true);
	BufferedWriter b= new BufferedWriter(f);
	b.write(&quot;_______________________________Non-200 Code Returned_________________________________&quot;);
	b.newLine();
	b.write(&quot;For User : &quot;+vars.get(&quot;p_UserNameModified&quot;));
	b.newLine();
	b.write(&quot;FailureMessage: &quot;+FailureMessage);
	b.newLine();
	b.write(&quot;Transaction Name : &quot;+api_name);
	b.newLine();
	b.write(&quot;SampleInfo &quot;+requestInfo);
	b.newLine();
	b.write(&quot;requestHeaders &quot;+requestHeaders);
	b.newLine();
	b.write(&quot;responseHeaders &quot;+responseHeaders);
	b.newLine();
	b.write(&quot;\t/api/negotiate/register,&quot; + time + &quot;,&quot; + &quot; Response Code:&quot; + responseCode + &quot;,&quot; + &quot;Response: &quot; + output);
	b.newLine();
	b.write(&quot;________________________________________________________________&quot;);
	b.newLine();
	b.flush();
	b.close();
 }</stringProp>
              <stringProp name="scriptLanguage">java</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/servlet/servlet.ImageServer-185" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">015a0000003E09Q</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="oid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">oid</stringProp>
                  <stringProp name="Argument.value">00D7d0000077kVG</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lastMod" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lastMod</stringProp>
                  <stringProp name="Argument.value">1400837960000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName6}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/servlet/servlet.ImageServer</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/profilephoto/005/T-183" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName6}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/profilephoto/005/T</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/servlet/servlet.ChartServer-186" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rsid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rsid</stringProp>
                  <stringProp name="Argument.value">0FL7d000000oRes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ruid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ruid</stringProp>
                  <stringProp name="Argument.value">005a000000BBVk5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="did" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">did</stringProp>
                  <stringProp name="Argument.value">01Za00000016yhP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fs</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tfg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tfg</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tfs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tfs</stringProp>
                  <stringProp name="Argument.value">-16777216</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="explode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">explode</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">col_line</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cs</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="title" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">title</stringProp>
                  <stringProp name="Argument.value">Login Rate in Last 7 Days</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="eh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eh</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="compo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">compo</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fg</stringProp>
                  <stringProp name="Argument.value">-16777216</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bg1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bg1</stringProp>
                  <stringProp name="Argument.value">-2236963</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bg2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bg2</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bgdir" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bgdir</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dl1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dl1</stringProp>
                  <stringProp name="Argument.value">Regional Functional Role</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dl2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dl2</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">l</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sax" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sax</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Yman" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Yman</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">nc</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="actUrl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">actUrl</stringProp>
                  <stringProp name="Argument.value">/00Oa0000008R2CH?dbw=1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sd</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="scv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">scv</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sct</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="spt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">spt</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bd</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cu</stringProp>
                  <stringProp name="Argument.value">CNY</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ab" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ab</stringProp>
                  <stringProp name="Argument.value">X</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="u" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">u</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vt</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ab2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ab2</stringProp>
                  <stringProp name="Argument.value">Y2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="u2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">u2</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vt2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vt2</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ab3" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ab3</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="u3" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">u3</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vt3" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vt3</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vl0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">vl0</stringProp>
                  <stringProp name="Argument.value">% of User Login Last 7 Days</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vl1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">vl1</stringProp>
                  <stringProp name="Argument.value">all full license - 记录计数</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="por" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">por</stringProp>
                  <stringProp name="Argument.value">250</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="spoc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">spoc</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="topn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">topn</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gm</stringProp>
                  <stringProp name="Argument.value">0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gc0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gc0</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gm0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gm0</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gc1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gc1</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gm1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gm1</stringProp>
                  <stringProp name="Argument.value">2.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gc2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gc2</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gm2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gm2</stringProp>
                  <stringProp name="Argument.value">3.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sona" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sona</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rco" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rco</stringProp>
                  <stringProp name="Argument.value">DASHBOARD_VIEW</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">00Oa0000008R2CH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="refreshts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">refreshts</stringProp>
                  <stringProp name="Argument.value">1629698364000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/servlet/servlet.ChartServer</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/home/home.jsp</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/HomePageNotificationBanner-207" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="autoMapValues" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">autoMapValues</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="inline" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inline</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="core.apexpages.framework.ApexViewServlet.getInlinedContentRequest" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">core.apexpages.framework.ApexViewServlet.getInlinedContentRequest</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sfdcIFrameOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sfdcIFrameOrigin</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName1}/home/home.jsp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sdfcIFrameOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sdfcIFrameOrigin</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName1}/home/home.jsp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/HomePageNotificationBanner</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/UserLinkPage2-206" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="autoMapValues" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">autoMapValues</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inline" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inline</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="core.apexpages.framework.ApexViewServlet.getInlinedContentRequest" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">core.apexpages.framework.ApexViewServlet.getInlinedContentRequest</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sfdcIFrameOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sfdcIFrameOrigin</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName1}/home/home.jsp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sdfcIFrameOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sdfcIFrameOrigin</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName1}/home/home.jsp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/UserLinkPage2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/visualforce/session-218" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName4}/apex/HomePageNotificationBanner?autoMapValues=1&amp;inline=1&amp;core.apexpages.framework.ApexViewServlet.getInlinedContentRequest=1&amp;sfdcIFrameOrigin=https%3A%2F%2F${p_ServerName1}%2Fhome%2Fhome.jsp&amp;sdfcIFrameOrigin=https%3A%2F%2F${p_ServerName1}%2Fhome%2Fhome.jsp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sfdcIFrameOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sfdcIFrameOrigin</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName1}/home/home.jsp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/visualforce/session</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/visualforce/session-219" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName4}/apex/UserLinkPage2?autoMapValues=1&amp;inline=1&amp;core.apexpages.framework.ApexViewServlet.getInlinedContentRequest=1&amp;sfdcIFrameOrigin=https%3A%2F%2F${p_ServerName1}%2Fhome%2Fhome.jsp&amp;sdfcIFrameOrigin=https%3A%2F%2F${p_ServerName1}%2Fhome%2Fhome.jsp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sfdcIFrameOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sfdcIFrameOrigin</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName1}/home/home.jsp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/visualforce/session</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/servlet/servlet.ChartServer-220" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rsid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rsid</stringProp>
                  <stringProp name="Argument.value">0FL7d000000oRer</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ruid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ruid</stringProp>
                  <stringProp name="Argument.value">005a000000BBVk5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="did" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">did</stringProp>
                  <stringProp name="Argument.value">01Za00000016yhP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fs</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tfg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tfg</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tfs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tfs</stringProp>
                  <stringProp name="Argument.value">-16777216</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="explode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">explode</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">column</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cs</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="title" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">title</stringProp>
                  <stringProp name="Argument.value">Oppty Created per Sales User-30D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eh</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="compo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">compo</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fg</stringProp>
                  <stringProp name="Argument.value">-16777216</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bg1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bg1</stringProp>
                  <stringProp name="Argument.value">-2236963</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bg2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bg2</stringProp>
                  <stringProp name="Argument.value">-2236963</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bgdir" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bgdir</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dl1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dl1</stringProp>
                  <stringProp name="Argument.value">Territory: P&amp;L</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dl2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dl2</stringProp>
                  <stringProp name="Argument.value">Territory: LCT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">l</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sax" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sax</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Yman" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Yman</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">nc</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="actUrl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">actUrl</stringProp>
                  <stringProp name="Argument.value">/00Oa0000008QwuP?dbw=1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sd</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="scv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">scv</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sct</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="spt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">spt</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bd</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cu</stringProp>
                  <stringProp name="Argument.value">USD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ab" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ab</stringProp>
                  <stringProp name="Argument.value">X</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="u" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">u</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vt</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ab2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ab2</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="u2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">u2</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vt2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vt2</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vl0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">vl0</stringProp>
                  <stringProp name="Argument.value">Avg Opp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="por" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">por</stringProp>
                  <stringProp name="Argument.value">250</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="spoc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">spoc</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="topn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">topn</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gc0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gc0</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gc1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gc1</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gc2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gc2</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sona" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sona</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rco" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rco</stringProp>
                  <stringProp name="Argument.value">DASHBOARD_VIEW</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">00Oa0000008QwuP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="refreshts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">refreshts</stringProp>
                  <stringProp name="Argument.value">1629698340000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/servlet/servlet.ChartServer</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/home/home.jsp</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/visualforce/recsession-224" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">00D7d0000077kVG!ARsAQKQrvrrbNkSGP.DAuQ7eNvur4OXVUJYJ1I.dHlIJix5_rjli_u_F.v42EzBwuLa59c3sGoDT26SBgRev7v0.BufiHV8e</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">7d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cshc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cshc</stringProp>
                  <stringProp name="Argument.value">a00000KWuPEd0000077kVG</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="retURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">retURL</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName4}/apex/HomePageNotificationBanner?autoMapValues=1&amp;inline=1&amp;core.apexpages.framework.ApexViewServlet.getInlinedContentRequest=1&amp;sfdcIFrameOrigin=https%3A%2F%2F${p_ServerName1}%2Fhome%2Fhome.jsp&amp;sdfcIFrameOrigin=https%3A%2F%2F${p_ServerName1}%2Fhome%2Fhome.jsp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/visualforce/recsession</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/img/cursors/col-expand.cur-223" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/img/cursors/col-expand.cur</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/sCSS/53.0/sprites/1627628858000/Theme3/default/base/common.css</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/visualforce/recsession-228" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">00D7d0000077kVG!ARsAQKQrvrrbNkSGP.DAuQ7eNvur4OXVUJYJ1I.dHlIJix5_rjli_u_F.v42EzBwuLa59c3sGoDT26SBgRev7v0.BufiHV8e</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">7d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cshc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cshc</stringProp>
                  <stringProp name="Argument.value">a00000KWuPEd0000077kVG</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="retURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">retURL</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName4}/apex/UserLinkPage2?autoMapValues=1&amp;inline=1&amp;core.apexpages.framework.ApexViewServlet.getInlinedContentRequest=1&amp;sfdcIFrameOrigin=https%3A%2F%2F${p_ServerName1}%2Fhome%2Fhome.jsp&amp;sdfcIFrameOrigin=https%3A%2F%2F${p_ServerName1}%2Fhome%2Fhome.jsp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/visualforce/recsession</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/HomePageNotificationBanner-229" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="autoMapValues" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">autoMapValues</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inline" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inline</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="core.apexpages.framework.ApexViewServlet.getInlinedContentRequest" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">core.apexpages.framework.ApexViewServlet.getInlinedContentRequest</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sfdcIFrameOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sfdcIFrameOrigin</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName1}/home/home.jsp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sdfcIFrameOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sdfcIFrameOrigin</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName1}/home/home.jsp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/HomePageNotificationBanner</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/visualforce/session-232" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName4}/apex/UserLinkPage2?autoMapValues=1&amp;inline=1&amp;core.apexpages.framework.ApexViewServlet.getInlinedContentRequest=1&amp;sfdcIFrameOrigin=https%3A%2F%2F${p_ServerName1}%2Fhome%2Fhome.jsp&amp;sdfcIFrameOrigin=https%3A%2F%2F${p_ServerName1}%2Fhome%2Fhome.jsp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/visualforce/session</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/visualforce/recsession-270" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">00D7d0000077kVG!ARsAQKQrvrrbNkSGP.DAuQ7eNvur4OXVUJYJ1I.dHlIJix5_rjli_u_F.v42EzBwuLa59c3sGoDT26SBgRev7v0.BufiHV8e</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">7d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cshc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cshc</stringProp>
                  <stringProp name="Argument.value">a00000KWuPEd0000077kVG</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="retURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">retURL</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName4}/apex/UserLinkPage2?autoMapValues=1&amp;inline=1&amp;core.apexpages.framework.ApexViewServlet.getInlinedContentRequest=1&amp;sfdcIFrameOrigin=https%3A%2F%2F${p_ServerName1}%2Fhome%2Fhome.jsp&amp;sdfcIFrameOrigin=https%3A%2F%2F${p_ServerName1}%2Fhome%2Fhome.jsp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/visualforce/recsession</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/UserLinkPage2-272" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="autoMapValues" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">autoMapValues</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inline" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inline</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="core.apexpages.framework.ApexViewServlet.getInlinedContentRequest" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">core.apexpages.framework.ApexViewServlet.getInlinedContentRequest</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sfdcIFrameOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sfdcIFrameOrigin</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName1}/home/home.jsp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sdfcIFrameOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sdfcIFrameOrigin</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName1}/home/home.jsp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/UserLinkPage2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/setSFXCookie-275" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="value" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">value</stringProp>
                  <stringProp name="Argument.value">aloha</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">help.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/setSFXCookie</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/setSFXCookie-274" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="value" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">value</stringProp>
                  <stringProp name="Argument.value">aloha</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">help.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/setSFXCookie</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/s/login-276" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ec</stringProp>
                  <stringProp name="Argument.value">302</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">3y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="startURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">startURL</stringProp>
                  <stringProp name="Argument.value">/setSFXCookie?value=aloha</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">help.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/s/login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/s/login-277" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ec</stringProp>
                  <stringProp name="Argument.value">302</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">3y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="startURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">startURL</stringProp>
                  <stringProp name="Argument.value">/setSFXCookie?value=aloha</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">help.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/s/login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/s/login/-281" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ec</stringProp>
                  <stringProp name="Argument.value">302</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">3y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="startURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">startURL</stringProp>
                  <stringProp name="Argument.value">/setSFXCookie?value=aloha</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">help.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/s/login/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/s/login/-280" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ec</stringProp>
                  <stringProp name="Argument.value">302</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">3y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="startURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">startURL</stringProp>
                  <stringProp name="Argument.value">/setSFXCookie?value=aloha</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">help.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/s/login/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/s/login/-282" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="startURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">startURL</stringProp>
                  <stringProp name="Argument.value">/setSFXCookie?value=aloha</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ec</stringProp>
                  <stringProp name="Argument.value">302</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">3y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">help.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/s/login/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/s/login/-283" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="startURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">startURL</stringProp>
                  <stringProp name="Argument.value">/setSFXCookie?value=aloha</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ec</stringProp>
                  <stringProp name="Argument.value">302</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">3y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">help.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/s/login/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="GE_CloneToSameOpp_03_SearchSalesRep" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/_ui/search/ui/UnifiedSearchResults-284" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="searchType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchType</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="str" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">str</stringProp>
                  <stringProp name="Argument.value">${p_UserName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_ui/search/ui/UnifiedSearchResults</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/home/home.jsp</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_csrfToken" enabled="true">
              <stringProp name="TestPlan.comments">VmpFPSxNakF5TVMweE1DMHdORlF3TkRvek5UbzBOaTQyTURsYSxVd3hiY19BTjdBSE1GUnlUV1JCTmxCLFlqSmxNek16</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_csrfToken</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;ajaxServletCSRFToken&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_csrfTokenNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_queryGuid" enabled="true">
              <stringProp name="TestPlan.comments">-1myamzqltpc8m</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_queryGuid</stringProp>
              <stringProp name="RegexExtractor.regex">queryGuid: &apos;(.*?)&apos;, name: &apos;User&apos;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_queryGuidNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_clkIdHashId" enabled="true">
              <stringProp name="TestPlan.comments">e0f3bf9c9e2298359541d924611ed8dd</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_clkIdHashId</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;div class=&quot;displayName&quot; title=&quot;${p_UserNameModified}&quot;(.*?)data-seclkh=&quot;(.*?)&quot;(.*?)onclick=&quot;searchResultClick.mousedown</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default">c_clkIdHashIdNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1830613076">title=&quot;Account Plans Tab&quot;&gt;Account Plans</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Transaction - GE_CloneToSameOpp_03_SearchSalesRep
API Name -/_ui/search/ui/UnifiedSearchResults-284
Assertion_NotFound</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import java.time.LocalDateTime;

String time=LocalDateTime.now();

String output = prev.getResponseDataAsString();

String responseCode=prev.getResponseCode();

String requestHeaders=prev.getRequestHeaders();

String responseHeaders=prev.getResponseHeaders();

String requestInfo=prev.getSamplerData();

String api_name = prev.toString();

String c_queryGuid=vars.get(&quot;c_queryGuid&quot;);
String c_clkHashId=vars.get(&quot;c_clkIdHashId&quot;);

String FailureMessage = &quot;&quot;;

if((c_queryGuid.equals(&quot;NotFound&quot;)) || (c_clkHashId.equals(&quot;NotFound&quot;)))
{
	AssertionResult.setFailure(true);
	if(c_queryGuid.equals(&quot;NotFound&quot;))
		FailureMessage += &quot;c_queryGuid : NotFound\t&quot;;
	if(c_clkHashId.equals(&quot;NotFound&quot;))
		FailureMessage += &quot;c_clkHashId : NotFound\t&quot;;
	FailureMessage += &quot;Incorrect Response Data&quot;;
 	FileWriter f= new FileWriter(&quot;${p_ErrorLogPath}&quot;,true);
	BufferedWriter b= new BufferedWriter(f);
	b.write(&quot;_______________________________Non-200 Code Returned_________________________________&quot;);
	b.newLine();
	b.write(&quot;For User : &quot;+vars.get(&quot;p_UserNameModified&quot;));
	b.newLine();
	b.write(&quot;FailureMessage: &quot;+FailureMessage);
	b.newLine();
	b.write(&quot;Transaction Name : &quot;+api_name);
	b.newLine();
	b.write(&quot;SampleInfo &quot;+requestInfo);
	b.newLine();
	b.write(&quot;requestHeaders &quot;+requestHeaders);
	b.newLine();
	b.write(&quot;responseHeaders &quot;+responseHeaders);
	b.newLine();
	b.write(&quot;\t/api/negotiate/register,&quot; + time + &quot;,&quot; + &quot; Response Code:&quot; + responseCode + &quot;,&quot; + &quot;Response: &quot; + output);
	b.newLine();
	b.write(&quot;________________________________________________________________&quot;);
	b.newLine();
	b.flush();
	b.close();
 }


</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/setSFXCookie-313" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="value" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">value</stringProp>
                  <stringProp name="Argument.value">aloha</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">help.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/setSFXCookie</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/_ui/common/search/client/ui/ajax/UnifiedSearchAjaxServlet-311" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="searchCount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchCount</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cmdType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cmdType</stringProp>
                  <stringProp name="Argument.value">cmp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cmp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cmp</stringProp>
                  <stringProp name="Argument.value">summaryPartialResult</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="str" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">str</stringProp>
                  <stringProp name="Argument.value">${p_UserName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="initialViewMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">initialViewMode</stringProp>
                  <stringProp name="Argument.value">summary</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sen" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sen</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fpg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fpg</stringProp>
                  <stringProp name="Argument.value">${c_queryGuid}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_CONFIRMATIONTOKEN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_CONFIRMATIONTOKEN</stringProp>
                  <stringProp name="Argument.value">${c_csrfToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fen" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fen</stringProp>
                  <stringProp name="Argument.value">x00</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_ui/common/search/client/ui/ajax/UnifiedSearchAjaxServlet</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/_ui/search/ui/UnifiedSearchResults?searchType=2&amp;str=Cachewarmer+ULS+USCAN*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/s/login-314" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ec</stringProp>
                  <stringProp name="Argument.value">302</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">3y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="startURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">startURL</stringProp>
                  <stringProp name="Argument.value">/setSFXCookie?value=aloha</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">help.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/s/login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/_ui/common/search/client/ui/ajax/UnifiedSearchAjaxServlet-312" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="searchCount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchCount</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cmdType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cmdType</stringProp>
                  <stringProp name="Argument.value">cmp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cmp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cmp</stringProp>
                  <stringProp name="Argument.value">summaryPartialResult</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="str" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">str</stringProp>
                  <stringProp name="Argument.value">${p_UserName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="initialViewMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">initialViewMode</stringProp>
                  <stringProp name="Argument.value">summary</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sen" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sen</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fpg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fpg</stringProp>
                  <stringProp name="Argument.value">${c_queryGuid}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_CONFIRMATIONTOKEN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_CONFIRMATIONTOKEN</stringProp>
                  <stringProp name="Argument.value">${c_csrfToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fen" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fen</stringProp>
                  <stringProp name="Argument.value">x01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_ui/common/search/client/ui/ajax/UnifiedSearchAjaxServlet</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/_ui/search/ui/UnifiedSearchResults?searchType=2&amp;str=Cachewarmer+ULS+USCAN*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/s/login/-317" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ec</stringProp>
                  <stringProp name="Argument.value">302</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">3y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="startURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">startURL</stringProp>
                  <stringProp name="Argument.value">/setSFXCookie?value=aloha</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">help.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/s/login/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/_ui/common/request/servlet/JsLoggingServlet-315" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="logLines" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">logLines</stringProp>
                  <stringProp name="Argument.value">[{&quot;logName&quot;:&quot;alohaEpt&quot;,&quot;logLevel&quot;:&quot;INFO&quot;,&quot;logAttrs&quot;:{&quot;ept&quot;:17335,&quot;context&quot;:&quot;hasMotif setupTab searchResults UnifiedSearchResults  ext-gecko ext-gecko3 net-withGlobalHeader sfdcBody brandQuaternaryBgr&quot;,&quot;domContentLoaded&quot;:13065}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_ui/common/request/servlet/JsLoggingServlet</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/_ui/search/ui/UnifiedSearchResults?searchType=2&amp;str=Cachewarmer+ULS+USCAN*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/s/login/-318" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="startURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">startURL</stringProp>
                  <stringProp name="Argument.value">/setSFXCookie?value=aloha</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ec</stringProp>
                  <stringProp name="Argument.value">302</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">3y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">help.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/s/login/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/_/commcsp?disposition=enforce-319" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;csp-report&quot;:{&quot;blocked-uri&quot;:&quot;&quot;,&quot;document-uri&quot;:&quot;https://help.salesforce.com/s/login/?language=en_US&amp;startURL=%2FsetSFXCookie%3Fvalue%3Daloha&amp;ec=302&amp;inst=3y&quot;,&quot;original-policy&quot;:&quot;frame-ancestors &apos;self&apos;; report-uri https://help.salesforce.com/_/commcsp?disposition=enforce&quot;,&quot;referrer&quot;:&quot;&quot;,&quot;violated-directive&quot;:&quot;frame-ancestors&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">help.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_/commcsp?disposition=enforce</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/csp-report</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">report</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/_ui/search/logging/SearchClickLoggingServlet-320" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="searchType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchType</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="str" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">str</stringProp>
                  <stringProp name="Argument.value">${p_UserName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clkLogFlag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clkLogFlag</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clkRecordId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clkRecordId</stringProp>
                  <stringProp name="Argument.value">${c_clkRecordId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clkQueryGuid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clkQueryGuid</stringProp>
                  <stringProp name="Argument.value">${c_queryGuid}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clkCount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clkCount</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clkRank" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clkRank</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clkBucketRank" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clkBucketRank</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clkIdHash" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clkIdHash</stringProp>
                  <stringProp name="Argument.value">${c_clkIdHashId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clkNumResultsForEntityBeforeDb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clkNumResultsForEntityBeforeDb</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clkPageNum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clkPageNum</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clkNumResultsPerPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clkNumResultsPerPage</stringProp>
                  <stringProp name="Argument.value">25</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clkFilter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clkFilter</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clkSort" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clkSort</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clkIsTagging" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clkIsTagging</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clkEntityName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clkEntityName</stringProp>
                  <stringProp name="Argument.value">User</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="retURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">retURL</stringProp>
                  <stringProp name="Argument.value">/${c_clkRecordId}?srPos=0&amp;srKp=005</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_ui/search/logging/SearchClickLoggingServlet</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/_ui/search/ui/UnifiedSearchResults?searchType=2&amp;str=Cachewarmer+ULS+USCAN*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/0057d000004y0jw-321" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="srPos" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">srPos</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="srKp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">srKp</stringProp>
                  <stringProp name="Argument.value">005</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/${c_clkRecordId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/_ui/search/ui/UnifiedSearchResults?searchType=2&amp;str=Cachewarmer+ULS+USCAN*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/_ui/core/userprofile/UserProfilePage-322" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="u" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">u</stringProp>
                  <stringProp name="Argument.value">${c_clkRecordId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="srPos" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">srPos</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="srKp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">srKp</stringProp>
                  <stringProp name="Argument.value">005</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_ui/core/userprofile/UserProfilePage</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/${c_clkRecordId}?srPos=0&amp;srKp=005</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/_ui/common/request/servlet/JsLoggingServlet-336" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="logLines" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">logLines</stringProp>
                  <stringProp name="Argument.value">[{&quot;logName&quot;:&quot;alohaEpt&quot;,&quot;logLevel&quot;:&quot;INFO&quot;,&quot;logAttrs&quot;:{&quot;ept&quot;:9142,&quot;context&quot;:&quot;hasMotif userTab  UserProfilePage  ext-gecko ext-gecko3 net-withGlobalHeader sfdcBody brandQuaternaryBgr&quot;,&quot;domContentLoaded&quot;:4374}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_ui/common/request/servlet/JsLoggingServlet</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/_ui/core/userprofile/UserProfilePage?u=${c_clkRecordId}&amp;srPos=0&amp;srKp=005&amp;tab=sfdc.ProfilePlatformFeed</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="GE_CloneToSameOpp_04_ClickOnUserDetails" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/0057d000004y0jw-339" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="noredirect" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">noredirect</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isUserEntityOverride" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isUserEntityOverride</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/${c_clkRecordId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/_ui/core/userprofile/UserProfilePage?u=${c_clkRecordId}&amp;srPos=0&amp;srKp=005&amp;tab=sfdc.ProfilePlatformFeed</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1877949418">title=&quot;Login&quot;</stringProp>
                <stringProp name="2070322115">US Ultrasound Women</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Transaction - GE_CloneToSameOpp_04_ClickOnUserDetails
API Name - /0057d000004y0jw-339
Assertion_NotFound</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/emptyHtmlDoc.html-350" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/emptyHtmlDoc.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/${c_clkRecordId}?noredirect=1&amp;isUserEntityOverride=1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/setSFXCookie-360" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="value" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">value</stringProp>
                  <stringProp name="Argument.value">aloha</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">help.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/setSFXCookie</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/s/login-362" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ec</stringProp>
                  <stringProp name="Argument.value">302</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">3y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="startURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">startURL</stringProp>
                  <stringProp name="Argument.value">/setSFXCookie?value=aloha</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">help.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/s/login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/_ui/common/request/servlet/JsLoggingServlet-361" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="logLines" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">logLines</stringProp>
                  <stringProp name="Argument.value">[{&quot;logName&quot;:&quot;alohaEpt&quot;,&quot;logLevel&quot;:&quot;INFO&quot;,&quot;logAttrs&quot;:{&quot;ept&quot;:7054,&quot;context&quot;:&quot;hasMotif setupTab  detailPage  ext-gecko ext-gecko3 net-withGlobalHeader sfdcBody brandQuaternaryBgr&quot;,&quot;domContentLoaded&quot;:4355}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_ui/common/request/servlet/JsLoggingServlet</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/${c_clkRecordId}?noredirect=1&amp;isUserEntityOverride=1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/s/login/-363" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ec</stringProp>
                  <stringProp name="Argument.value">302</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">3y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="startURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">startURL</stringProp>
                  <stringProp name="Argument.value">/setSFXCookie?value=aloha</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">help.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/s/login/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/s/login/-364" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="startURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">startURL</stringProp>
                  <stringProp name="Argument.value">/setSFXCookie?value=aloha</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ec</stringProp>
                  <stringProp name="Argument.value">302</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">3y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">help.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/s/login/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="GE_CloneToSameOpp_05_ClickOnLoginBtn" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/servlet/servlet.su-369" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="oid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">oid</stringProp>
                  <stringProp name="Argument.value">00D7d0000077kVG</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="suorgadminid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">suorgadminid</stringProp>
                  <stringProp name="Argument.value">${c_clkRecordId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="retURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">retURL</stringProp>
                  <stringProp name="Argument.value">/${c_clkRecordId}?noredirect=1&amp;isUserEntityOverride=1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="targetURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">targetURL</stringProp>
                  <stringProp name="Argument.value">/home/home.jsp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/servlet/servlet.su</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/${c_clkRecordId}?noredirect=1&amp;isUserEntityOverride=1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/one/one.app-370" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/one/one.app</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/servlet/servlet.su?oid=00D7d0000077kVG&amp;suorgadminid=${c_clkRecordId}&amp;retURL=%2F${c_clkRecordId}%3Fnoredirect%3D1%26isUserEntityOverride%3D1&amp;targetURL=%2Fhome%2Fhome.jsp</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/one/one.app-371" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/one/one.app</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/visualforce/session-372" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName5}/one/one.app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/visualforce/session</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/visualforce/recsession-373" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">00D7d0000077kVG!ARsAQChyYCvpLI7teG0Ko20qmJVeYN3eWwFuXEIoSbiRW_nFig36azn1kZ7WWGxOI_tsvkUSz_rm6aVIXHe5XYZ3.6lorohm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">7d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cshc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cshc</stringProp>
                  <stringProp name="Argument.value">d000004y0jwd0000077kVG</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RSID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">RSID</stringProp>
                  <stringProp name="Argument.value">00D7d0000077kVG${c_clkRecordId}eyJlbmMiOiJBMjU2R0NNIiwiYXVkIjoiMDBEN2QwMDAwMDc3a1ZHIiwia2lkIjoie1widFwiOlwiMDBEN2QwMDAwMDc3a1ZHXCIsXCJ2XCI6XCIwMkcwYzAwMDAwMGtRdHVcIixcImFcIjpcInN1cnNpZGNvb2tpZWVuY3J5cHRcIixcInVcIjpcIjAwNTdkMDAwMDA0eTBqd1wifSIsImNyaXQiOlsiaWF0Il0sImlhdCI6MTYzMzA2MzAzNDY4NiwiZXhwIjowfQ==..hwLVI-LMJoSemrBn.yFZRrECqq4XMyJl23fxO917B59ixKK2Nj3jLEAE0RV_6JDBHpTiwNigMXX7yCstdcj2WCO1J8_wbCGmPPoPP-Y-oTJpK4_zaWY18MdF-CFzs5kU5wrWW6xsCFyBb_P25T09Yw_KnAlMLSUGr8B-5YD-rPpW_DM_1Y69zadr0CWRI1wxM4EPo6rYoRUToJGKnB_ika0oDvd2dlJQPntTMPOhoHZxcgtw7-iIHXAOQeDtXCLVuO5nqiUg=.iY0mGhgoQo1YHKWCg5nTzQ==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SUORG" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SUORG</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="retURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">retURL</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName5}/one/one.app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/visualforce/recsession</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/one/one.app-374" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/one/one.app</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_auraToken" enabled="true">
              <stringProp name="TestPlan.comments">eyJub25jZSI6IjJVNFN2NG9CSDlmRzd2ai1JSl9FM2UxTERWOHRwaUk3TlNqbVhEU0tWVlVcdTAwM2QiLCJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IntcInRcIjpcIjAwRFcwMDAwMDA4eVpwR1wiLFwidlwiOlwiMDJHVzAwMDAwMDAwbEpIXCIsXCJhXCI6XCJjYWltYW5zaWduZXJcIn0iLCJjcml0IjpbImlhdCJdLCJpYXQiOjE2MzMwNjMwNDU2ODEsImV4cCI6MH0=..mTAQML7fiKmEMT1Lvl_LOTEHbY7qCJdzwZCvBZLye48=</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_auraToken</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_auraTokenNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_fwuid" enabled="true">
              <stringProp name="TestPlan.comments">3KgU8YUg_vm2KM53ClSljQ</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_fwuid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;fwuid&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_fwuidNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_au" enabled="true">
              <stringProp name="TestPlan.comments">IX6sj7Huxp-51oU3fpP5cg</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_au</stringProp>
              <stringProp name="RegexExtractor.regex">&amp;_au=(.*?)&amp;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_auNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import java.time.LocalDateTime;

String time=LocalDateTime.now();

String output = prev.getResponseDataAsString();

String responseCode=prev.getResponseCode();

String requestHeaders=prev.getRequestHeaders();

String responseHeaders=prev.getResponseHeaders();

String requestInfo=prev.getSamplerData();

String api_name = prev.toString();

String c_auraToken=vars.get(&quot;c_auraToken&quot;);
String c_fwuid=vars.get(&quot;c_fwuid&quot;);
String c_au=vars.get(&quot;c_au&quot;);

String FailureMessage = &quot;&quot;;

if((c_auraToken.equals(&quot;NotFound&quot;)) || (c_fwuid.equals(&quot;NotFound&quot;)) || (c_au.equals(&quot;NotFound&quot;)))
{
	AssertionResult.setFailure(true);
	if(c_auraToken.equals(&quot;NotFound&quot;))
		FailureMessage += &quot;c_auraToken : NotFound\t&quot;;
	if(c_fwuid.equals(&quot;NotFound&quot;))
		FailureMessage += &quot;c_fwuid : NotFound\t&quot;;
	if(c_au.equals(&quot;NotFound&quot;))
	     FailureMessage+= &quot;c_au : NotFound\t&quot;;
	FailureMessage += &quot;Incorrect Response Data&quot;;
 	FileWriter f= new FileWriter(&quot;${p_ErrorLogPath}&quot;,true);
	BufferedWriter b= new BufferedWriter(f);
	b.write(&quot;_______________________________Non-200 Code Returned_________________________________&quot;);
	b.newLine();
	b.write(&quot;For User : &quot;+vars.get(&quot;p_UserName&quot;));
	b.newLine();
	b.write(&quot;FailureMessage: &quot;+FailureMessage);
	b.newLine();
	b.write(&quot;Transaction Name : &quot;+api_name);
	b.newLine();
	b.write(&quot;SampleInfo &quot;+requestInfo);
	b.newLine();
	b.write(&quot;requestHeaders &quot;+requestHeaders);
	b.newLine();
	b.write(&quot;responseHeaders &quot;+responseHeaders);
	b.newLine();
	b.write(&quot;\t/api/negotiate/register,&quot; + time + &quot;,&quot; + &quot; Response Code:&quot; + responseCode + &quot;,&quot; + &quot;Response: &quot; + output);
	b.newLine();
	b.write(&quot;________________________________________________________________&quot;);
	b.newLine();
	b.flush();
	b.close();
 }</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?preloadActions-377" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;app&quot;:&quot;one:one&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.one.controller.OneController/ACTION$getCurrentApp&quot;,&quot;params&quot;:{},&quot;id&quot;:&quot;0;p&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?preloadActions</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/one/one.app</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="624594448">Opportunity Global Search LWC</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Transaction - GE_GenerateCFD_05_ClickLoginButton
API Name - ClickLoginButton/aura?preloadActions-879
AssertionsNotFound</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=0&amp;ui-flexipage-components-page.FlexipageControllerV2.getPage=1-386" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;302;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.flexipage.components.page.FlexipageControllerV2/ACTION$getPage&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;flexiPageDeveloperName&quot;:&quot;USCAN_Sales_UtilityBar&quot;},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=0&amp;ui-flexipage-components-page.FlexipageControllerV2.getPage=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">291700000004721721</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/file-asset/Capture-388" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="width" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">width</stringProp>
                  <stringProp name="Argument.value">128</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="height" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">height</stringProp>
                  <stringProp name="Argument.value">128</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName6}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/file-asset/Capture</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain </stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=1&amp;ui-force-components-controllers-empApi.EmpApi.getEmpConfig=1&amp;ui-force-components-controllers-hostConfig.HostConfig.getConfigData=1&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1&amp;ui-global-components-one-favorites.Favorites.getFavorites=1&amp;ui-global-components-one-header.Header.getSettings=1&amp;ui-global-components-one-navigation.GlobalNavDropdown.getHasSeenAppNavDocked=1&amp;ui-global-components-one-systemMessage.SystemMessage.getSystemMessages=1&amp;ui-notifications-components-notifications-controller.Notifications.getInitializationValues=1&amp;ui-search-components-forcesearch-sgdp.PermsAndPrefsCache.getPermsAndPrefs=1-391" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;166;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.sgdp.PermsAndPrefsCacheController/ACTION$getPermsAndPrefs&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;173;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.systemMessage.SystemMessageController/ACTION$getSystemMessages&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;isExtensiveMessage&quot;:false}},{&quot;id&quot;:&quot;191;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.favorites.FavoritesController/ACTION$getFavorites&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true},{&quot;id&quot;:&quot;211;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.empApi.EmpApiController/ACTION$getEmpConfig&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;215;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.notifications.components.notifications.controller.NotificationsController/ACTION$getInitializationValues&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true},{&quot;id&quot;:&quot;218;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordDescriptor&quot;:&quot;${c_clkRecordId}AAA.undefined.null.null.null.Name,Id.VIEW.false.null.null.null&quot;}},{&quot;id&quot;:&quot;227;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.header.HeaderController/ACTION$getSettings&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;326;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.navigation.GlobalNavDropdownController/ACTION$getHasSeenAppNavDocked&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;334;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.hostConfig.HostConfigController/ACTION$getConfigData&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=1&amp;ui-force-components-controllers-empApi.EmpApi.getEmpConfig=1&amp;ui-force-components-controllers-hostConfig.HostConfig.getConfigData=1&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1&amp;ui-global-components-one-favorites.Favorites.getFavorites=1&amp;ui-global-components-one-header.Header.getSettings=1&amp;ui-global-components-one-navigation.GlobalNavDropdown.getHasSeenAppNavDocked=1&amp;ui-global-components-one-systemMessage.SystemMessage.getSystemMessages=1&amp;ui-notifications-components-notifications-controller.Notifications.getInitializationValues=1&amp;ui-search-components-forcesearch-sgdp.PermsAndPrefsCache.getPermsAndPrefs=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">29380000000dc3e6bc</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_nonceId" enabled="true">
              <stringProp name="TestPlan.comments">fe1aa6031d85c5a0d589acadf1a10e6d3d087bd7eb6b4ffa5a9d1ca212dfbdbe</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_nonceId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;nonce&quot;:&quot;(.*?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_nonceIdNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1076616692">&quot;message&quot;:&quot;Logged in as </stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Transaction - GE_GenerateCFD_05_ClickLoginButton
API Name -/aura?r=1&amp;ui-force-components-controllers-empApi.EmpApi.getEmpConfig=1&amp;ui-force-components-controllers-hostConfig.HostConfig.getConfigData=1&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1&amp;ui-global-components-one-favorites.Favorites.getFavorites=1&amp;ui-global-components-one-header.Header.getSettings=1&amp;ui-global-components-one-navigation.GlobalNavDropdown.getHasSeenAppNavDocked=1&amp;ui-global-components-one-systemMessage.SystemMessage.getSystemMessages=1&amp;ui-notifications-components-notifications-controller.Notifications.getInitializationValues=1&amp;ui-search-components-forcesearch-sgdp.PermsAndPrefsCache.getPermsAndPrefs=1 889
AssertionsNotFound</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=3&amp;ui-search-components-forcesearch-assistant.Assistant.getSearchUIServerConfigs=1-394" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;169;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.assistant.AssistantController/ACTION$getSearchUIServerConfigs&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=3&amp;ui-search-components-forcesearch-assistant.Assistant.getSearchUIServerConfigs=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">293870000003087d02</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/content/session-396" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName6}/file-asset/Capture?v=1&amp;width=128&amp;height=128</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/content/session</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=4&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getTabByNameAndApp=1-395" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;341;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getTabByNameAndApp&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;devName&quot;:&quot;standard-home&quot;,&quot;customApplicationId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=4&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getTabByNameAndApp=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">295590000004866e71</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=2&amp;ui-search-components-forcesearch-sgdp.ScopesCache.getScopeMaps=1-392" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;164;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.sgdp.ScopesCacheController/ACTION$getScopeMaps&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;scopeTypes&quot;:[&quot;SMART_SCOPE&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=2&amp;ui-search-components-forcesearch-sgdp.ScopesCache.getScopeMaps=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">293830000002ca49af</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cs192/auraCmpDef-393" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="flexipage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">flexipage</stringProp>
                  <stringProp name="Argument.value">componentDecorator,richText</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="force" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">force</stringProp>
                  <stringProp name="Argument.value">outputRichText,popOutManager,popOutManagerAura,popOutManagerInit,sforceConsoleEvent,urlUtils</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="laf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">laf</stringProp>
                  <stringProp name="Argument.value">windowMessageLib,windowMessengerAura,windowMessengerEvent</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="one" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">one</stringProp>
                  <stringProp name="Argument.value">utilityBarItem</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">-66928593</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName8}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cs192/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraCmpDef-397" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="forceSearch" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">forceSearch</stringProp>
                  <stringProp name="Argument.value">assistantDialogContainer</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lightning" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lightning</stringProp>
                  <stringProp name="Argument.value">iconSvgTemplatesUtility</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">LATEST-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/one/one.app</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=5&amp;ui-force-components-controllers-socialPhoto.SocialPhoto.resolvePhotos=1-398" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;444;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.socialPhoto.SocialPhotoController/ACTION$resolvePhotos&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;records&quot;:{&quot;${c_clkRecordId}AAA&quot;:{}},&quot;refreshCached&quot;:false},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=5&amp;ui-force-components-controllers-socialPhoto.SocialPhoto.resolvePhotos=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">32097000000460762e</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/content/recsession-400" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">00D7d0000077kVG!ARsAQLNNEzlUZc8IKrz9YBEJLmb.p_i78E0e7Jl1499NUlOxyT5wYeAuqEfD_krIJAlJJz4DdTREAU2ntntSDoaeajTSyzhT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">7d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cshc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cshc</stringProp>
                  <stringProp name="Argument.value">d000004y0jwd0000077kVG</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RSID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">RSID</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SUORG" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SUORG</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="retURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">retURL</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName6}/file-asset/Capture?v=1&amp;width=128&amp;height=128</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName6}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/content/recsession</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=7&amp;ui-home-impl-landing.Landing.populateTodayGVP=1-402" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;510;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.home.impl.landing.LandingController/ACTION$populateTodayGVP&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=7&amp;ui-home-impl-landing.Landing.populateTodayGVP=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">3250700000056d0aab</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraCmpDef-403" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_def" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_def</stringProp>
                  <stringProp name="Argument.value">markup://one:utilityBarContent</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">LATEST-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=6&amp;ui-flexipage-components-page.FlexipageControllerV2.getPage=1-401" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;499;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.flexipage.components.page.FlexipageControllerV2/ACTION$getPage&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;flexiPageDeveloperName&quot;:&quot;USCAN_Home&quot;},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=6&amp;ui-flexipage-components-page.FlexipageControllerV2.getPage=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">324930000009a00897</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cs192/auraCmpDef-404" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="forceSearch" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">forceSearch</stringProp>
                  <stringProp name="Argument.value">assistantDialogContainer</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lightning" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lightning</stringProp>
                  <stringProp name="Argument.value">iconSvgTemplatesUtility</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">-1137360774</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName8}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cs192/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/file-asset/Capture-406" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="width" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">width</stringProp>
                  <stringProp name="Argument.value">128</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="height" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">height</stringProp>
                  <stringProp name="Argument.value">128</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName6}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/file-asset/Capture</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cs192/auraCmpDef-408" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_def" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_def</stringProp>
                  <stringProp name="Argument.value">markup://one:utilityBarContent</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">c29w22k6Op_DwpOsoNa7TQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName8}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cs192/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraCmpDef-410" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_def" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_def</stringProp>
                  <stringProp name="Argument.value">markup://lightning:auraDynamic</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">LATEST-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cs192/auraCmpDef-409" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="flexipage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">flexipage</stringProp>
                  <stringProp name="Argument.value">card,recentItems</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="force" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">force</stringProp>
                  <stringProp name="Argument.value">actionRow,baseCard,baseCardActionTriggered,card,emptyState,menuTriggerIcon,moreAction,navigateToReactNativeApp,recordLayoutList</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="home" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">home</stringProp>
                  <stringProp name="Argument.value">assistant,assistantCardActionSelected,assistantCardExpandedPanel,assistantCardList,assistantCollapsedCard,assistantSmallActionButton,baseCollapsedCard,homeCard,outputLookupWithPreviewWithoutProfilePic,recentRecordContainer,recentsItemStencil,topDealsCardDataProvider,topDealsContainer,topDealsLibrary,topDealsListStencil</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="offline" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">offline</stringProp>
                  <stringProp name="Argument.value">draftChange,sash</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="runtime_appointmentbooking" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">runtime_appointmentbooking</stringProp>
                  <stringProp name="Argument.value">appointmentCollapsedCard</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="runtime_sales_activities" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">runtime_sales_activities</stringProp>
                  <stringProp name="Argument.value">activityRelatedListRow,lastOpenedStatusForTask,taskCardEmpty,taskChangeStatusFailure,taskCommon,taskContent,taskContentFields,taskContentInner,taskContentRefresh,taskHighlights,taskInlineEditRecordDataChanged,taskRecordUpdated,taskRow,taskStatus,taskUpdateLastOpenStatus,tasksReturned,todayTaskContainer,todayTasksCardDataChanged,todayTasksCardDataProvider,todayTasksFilter,todayTasksFilterTypeChangedEvent,todayTasksLibrary,todayTasksList</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="runtime_sales_insights" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">runtime_sales_insights</stringProp>
                  <stringProp name="Argument.value">accordionEvent,accountInsightsDataProvider,accountRationaleContainer,accountRationaleNewsArticle,campaignInsightsRationale,einsteinHeader,einsteinIcon,genericInsightsDataProvider,insightActivityDetails,insightActivityRequestAccess,insightSendFeedback,insightsActionButton,insightsActionButtonBase,insightsActionManager,insightsActions,insightsCard,insightsCardClickEvent,insightsCardHeader,insightsCardHeaderTrigger,insightsCards,insightsCardsDataProvider,insightsContainer,insightsDataProvider,insightsDetailButtonMobile,insightsDismissedActionEvent,insightsDismissedEvent,insightsEllieButtonPressed,insightsEllieIcon,insightsEmailCard,insightsFeedbackDropdown,insightsGenericFeedback,insightsInsertEvent,insightsLib,insightsMessage,insightsPanelBody,insightsParentRecordUpdatedEvent,insightsPlatformActionSmall,insightsRationaleContainer,insightsRelevantLatestActivity,insightsSFDCEventCard,insightsSIQEventCard,insightsTaskCard,insightsTitleContainer,insightsTrendingIcon,insightsUndoDismissedEvent,insightsVoiceCard</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sfa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sfa</stringProp>
                  <stringProp name="Argument.value">checkboxButton,ping</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ui" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ui</stringProp>
                  <stringProp name="Argument.value">infiniteListRow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">1529755485</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName8}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cs192/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cs192/auraCmpDef-411" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_def" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_def</stringProp>
                  <stringProp name="Argument.value">markup://lightning:auraDynamic</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">noFniq-FlOT6TZO7qQw5NA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName8}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cs192/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=8&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1-412" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;701;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordDescriptor&quot;:&quot;${c_clkRecordId}AAA.undefined.null.null.null.Global_Region__c.VIEW.true.null.Name,Id.null&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=8&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">364050000003529a9a</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=9&amp;ui-today-impl-components-today-taskContainer.TodayTasksCardDataManager.getTasks=1-413" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;716;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.today.impl.components.today.taskContainer.TodayTasksCardDataManagerController/ACTION$getTasks&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;limit&quot;:5,&quot;filterType&quot;:&quot;MY_DAY&quot;},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=9&amp;ui-today-impl-components-today-taskContainer.TodayTasksCardDataManager.getTasks=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">364290000001ee98a2</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=10&amp;aura.Component.getComponent=1-414" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;719;a&quot;,&quot;descriptor&quot;:&quot;aura://ComponentController/ACTION$getComponent&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;name&quot;:&quot;markup://force:listTemplate&quot;,&quot;attributes&quot;:{&quot;recordExpression&quot;:&quot;item&quot;,&quot;entityName&quot;:&quot;Task&quot;,&quot;mode&quot;:&quot;VIEW&quot;,&quot;type&quot;:&quot;COMPACT&quot;,&quot;inContextOfComponent&quot;:&quot;runtime_sales_activities:todayTaskContainer&quot;,&quot;actions&quot;:[]}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=10&amp;aura.Component.getComponent=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">36435000000376e2d6</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=13&amp;ui-home-impl-topDealsCardDataProvider.TopDealsCardDataProvider.getFilterListViewRecords=1-417" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;815;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.home.impl.topDealsCardDataProvider.TopDealsCardDataProviderController/ACTION$getFilterListViewRecords&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;filterType&quot;:&quot;RecentlyViewedOpportunities&quot;,&quot;numberResults&quot;:5},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=13&amp;ui-home-impl-topDealsCardDataProvider.TopDealsCardDataProvider.getFilterListViewRecords=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">36520000000b7ab208</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=12&amp;ui-home-impl-recentRecordContainer.RecentRecordContainer.getRecords=1-416" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;787;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.home.impl.recentRecordContainer.RecentRecordContainerController/ACTION$getRecords&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;maxNumRecords&quot;:6},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=12&amp;ui-home-impl-recentRecordContainer.RecentRecordContainer.getRecords=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">36495000000cdf9cf3</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="c_recordId" enabled="true">
              <stringProp name="TestPlan.comments">a6R7d000000L1LbEAK   Old JSON1 : $.actions[0].returnValue[2].Id       Old JSON : $.actions..returnValue[2].Id    </stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">c_recordId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.actions..returnValue.[?(@.Name == &apos;${p_QuoteNumber}&apos;)].Id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">c_recordIdNotFound</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import java.time.LocalDateTime;

String time=LocalDateTime.now();

String output = prev.getResponseDataAsString();

String responseCode=prev.getResponseCode();

String requestHeaders=prev.getRequestHeaders();

String responseHeaders=prev.getResponseHeaders();

String requestInfo=prev.getSamplerData();

String api_name = prev.toString();

String c_recordId=vars.get(&quot;c_recordId&quot;);

String FailureMessage = &quot;&quot;;

if((c_recordId.equals(&quot;NotFound&quot;)))
{
	AssertionResult.setFailure(true);
	if(c_recordId.equals(&quot;NotFound&quot;))
		FailureMessage += &quot;c_recordId : NotFound\t&quot;;
	FailureMessage += &quot;Incorrect Response Data&quot;;
 	FileWriter f= new FileWriter(&quot;${p_ErrorLogPath}&quot;,true);
	BufferedWriter b= new BufferedWriter(f);
	b.write(&quot;_______________________________Non-200 Code Returned_________________________________&quot;);
	b.newLine();
	b.write(&quot;For User : &quot;+vars.get(&quot;p_UserName&quot;));
	b.newLine();
	b.write(&quot;FailureMessage: &quot;+FailureMessage);
	b.newLine();
	b.write(&quot;Transaction Name : &quot;+api_name);
	b.newLine();
	b.write(&quot;SampleInfo &quot;+requestInfo);
	b.newLine();
	b.write(&quot;requestHeaders &quot;+requestHeaders);
	b.newLine();
	b.write(&quot;responseHeaders &quot;+responseHeaders);
	b.newLine();
	b.write(&quot;\t/api/negotiate/register,&quot; + time + &quot;,&quot; + &quot; Response Code:&quot; + responseCode + &quot;,&quot; + &quot;Response: &quot; + output);
	b.newLine();
	b.write(&quot;________________________________________________________________&quot;);
	b.newLine();
	b.flush();
	b.close();
 }</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=11&amp;ui-flexipage-components-recentitems.FlexipageRecentItems.getResponse=1-415" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;745;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.flexipage.components.recentitems.FlexipageRecentItemsController/ACTION$getResponse&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;label&quot;:&quot;Recent Opptys&quot;,&quot;entityNames&quot;:[&quot;Opportunity&quot;],&quot;maxRecords&quot;:15},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=11&amp;ui-flexipage-components-recentitems.FlexipageRecentItems.getResponse=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">36454000000050fd47</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_oppId" enabled="false">
              <stringProp name="TestPlan.comments">0067d00000JavZmAAJ</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_oppId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;Name&quot;:&quot;${p_OriginalOppName}&quot;,(.*?),&quot;Id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default">c_oppIdNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cs192/auraCmpDef-420" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="force" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">force</stringProp>
                  <stringProp name="Argument.value">outputAddress,outputField,outputFieldInternal,outputFile,outputImage,outputLocation,outputName,outputNameForUser,outputNoteorAttachment,outputPlainText,outputRecordTypeWithoutChangeLink,outputScheduleDateField,outputTime</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lightning" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lightning</stringProp>
                  <stringProp name="Argument.value">deprecatedFormattedTime</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="runtime_sales_activities" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">runtime_sales_activities</stringProp>
                  <stringProp name="Argument.value">activitySubject,manyWhoName,manyWhoNameCompact,taskCompactStencil</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">-447659757</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName8}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cs192/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=14&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1&amp;ui-global-components-one-systemMessage.SystemMessage.getSystemMessages=1&amp;ui-home-impl-assistant.Assistant.getAssistantCardData=1-418" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;830;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.home.impl.assistant.AssistantController/ACTION$getAssistantCardData&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;833;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordDescriptor&quot;:&quot;${c_clkRecordId}AAA.undefined.null.null.null.Profile;2Name.VIEW.true.null.Name,Id.null&quot;}},{&quot;id&quot;:&quot;837;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.systemMessage.SystemMessageController/ACTION$getSystemMessages&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;isExtensiveMessage&quot;:true}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=14&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1&amp;ui-global-components-one-systemMessage.SystemMessage.getSystemMessages=1&amp;ui-home-impl-assistant.Assistant.getAssistantCardData=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">37798000000abbc39f</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=15&amp;ui-force-components-controllers-recordLayoutBroker.RecordLayoutBroker.getLayout=15-425" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;887;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;entityName&quot;:&quot;Opportunity&quot;,&quot;recordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;mode&quot;:&quot;VIEW&quot;,&quot;type&quot;:&quot;COMPACT&quot;,&quot;theme&quot;:&quot;light&quot;,&quot;inContextOfComponent&quot;:&quot;flexipage:recentItemStencil&quot;,&quot;pageSize&quot;:-1,&quot;offset&quot;:0,&quot;record&quot;:{&quot;LastModifiedDate&quot;:&quot;2021-10-01T04:27:25.000Z&quot;,&quot;Account&quot;:{&quot;RecordTypeId&quot;:&quot;01230000000rrnKAAQ&quot;,&quot;Id&quot;:&quot;001a000001dLchaAAC&quot;,&quot;Name&quot;:&quot;${p_AccountName}&quot;,&quot;sobjectType&quot;:&quot;Account&quot;},&quot;AccountId&quot;:&quot;001a000001dLchaAAC&quot;,&quot;StageName&quot;:&quot;1. Understand Customer&quot;,&quot;Forecast_Category__c&quot;:&quot;Open&quot;,&quot;CloseDate__f&quot;:&quot;9/30/2021&quot;,&quot;Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;StageName__l&quot;:&quot;1. Understand Customer&quot;,&quot;CurrencyIsoCode&quot;:&quot;USD&quot;,&quot;Sales_Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;Opportunity_Name_Grid__c&quot;:&quot;&lt;a href=\&quot;https://gehealthcare-amer.my.salesforce.com/0067d00000Jaxf2\&quot; target=\&quot;_blank\&quot;&gt;SMokeTest_01Oct_0952&lt;/a&gt;&quot;,&quot;CloseDate&quot;:&quot;2021-09-30T00:00:00.000Z&quot;,&quot;Sales_Forecast_Category__c&quot;:&quot;Open&quot;,&quot;Name&quot;:&quot;SMokeTest_01Oct_0952&quot;,&quot;SystemModstamp&quot;:&quot;2021-10-01T04:27:25.000Z&quot;,&quot;RecordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;CreatedDate&quot;:&quot;2021-10-01T04:24:02.000Z&quot;,&quot;Id&quot;:&quot;0067d00000Jaxf2AAB&quot;,&quot;LastModifiedById&quot;:&quot;${c_clkRecordId}AAA&quot;,&quot;sobjectType&quot;:&quot;Opportunity&quot;},&quot;errorContext&quot;:{&quot;componentStack&quot;:&quot;[flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker]&quot;}}},{&quot;id&quot;:&quot;889;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;entityName&quot;:&quot;Opportunity&quot;,&quot;recordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;mode&quot;:&quot;VIEW&quot;,&quot;type&quot;:&quot;COMPACT&quot;,&quot;theme&quot;:&quot;light&quot;,&quot;inContextOfComponent&quot;:&quot;flexipage:recentItemStencil&quot;,&quot;pageSize&quot;:-1,&quot;offset&quot;:0,&quot;record&quot;:{&quot;LastModifiedDate&quot;:&quot;2021-09-30T12:23:59.000Z&quot;,&quot;Account&quot;:{&quot;RecordTypeId&quot;:&quot;01230000000rrnKAAQ&quot;,&quot;Id&quot;:&quot;001a000001dLchaAAC&quot;,&quot;Name&quot;:&quot;${p_AccountName}&quot;,&quot;sobjectType&quot;:&quot;Account&quot;},&quot;AccountId&quot;:&quot;001a000001dLchaAAC&quot;,&quot;StageName&quot;:&quot;1. Understand Customer&quot;,&quot;Forecast_Category__c&quot;:&quot;Open&quot;,&quot;CloseDate__f&quot;:&quot;9/30/2021&quot;,&quot;Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;StageName__l&quot;:&quot;1. Understand Customer&quot;,&quot;CurrencyIsoCode&quot;:&quot;USD&quot;,&quot;Sales_Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;Opportunity_Name_Grid__c&quot;:&quot;&lt;a href=\&quot;https://gehealthcare-amer.my.salesforce.com/0067d00000JavZm\&quot; target=\&quot;_blank\&quot;&gt;${p_OriginalOppName}&lt;/a&gt;&quot;,&quot;CloseDate&quot;:&quot;2021-09-30T00:00:00.000Z&quot;,&quot;Sales_Forecast_Category__c&quot;:&quot;Open&quot;,&quot;Name&quot;:&quot;${p_OriginalOppName}&quot;,&quot;SystemModstamp&quot;:&quot;2021-09-30T12:23:59.000Z&quot;,&quot;RecordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;CreatedDate&quot;:&quot;2021-09-30T12:21:46.000Z&quot;,&quot;Id&quot;:&quot;0067d00000JavZmAAJ&quot;,&quot;LastModifiedById&quot;:&quot;${c_clkRecordId}AAA&quot;,&quot;sobjectType&quot;:&quot;Opportunity&quot;},&quot;errorContext&quot;:{&quot;componentStack&quot;:&quot;[flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker]&quot;}}},{&quot;id&quot;:&quot;891;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;entityName&quot;:&quot;Opportunity&quot;,&quot;recordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;mode&quot;:&quot;VIEW&quot;,&quot;type&quot;:&quot;COMPACT&quot;,&quot;theme&quot;:&quot;light&quot;,&quot;inContextOfComponent&quot;:&quot;flexipage:recentItemStencil&quot;,&quot;pageSize&quot;:-1,&quot;offset&quot;:0,&quot;record&quot;:{&quot;LastModifiedDate&quot;:&quot;2021-09-30T12:54:15.000Z&quot;,&quot;Account&quot;:{&quot;RecordTypeId&quot;:&quot;01230000000rrnKAAQ&quot;,&quot;Id&quot;:&quot;001a000001dLchaAAC&quot;,&quot;Name&quot;:&quot;${p_AccountName}&quot;,&quot;sobjectType&quot;:&quot;Account&quot;},&quot;AccountId&quot;:&quot;001a000001dLchaAAC&quot;,&quot;StageName&quot;:&quot;1. Understand Customer&quot;,&quot;Forecast_Category__c&quot;:&quot;Open&quot;,&quot;CloseDate__f&quot;:&quot;9/30/2021&quot;,&quot;Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;StageName__l&quot;:&quot;1. Understand Customer&quot;,&quot;CurrencyIsoCode&quot;:&quot;USD&quot;,&quot;Sales_Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;Opportunity_Name_Grid__c&quot;:&quot;&lt;a href=\&quot;https://gehealthcare-amer.my.salesforce.com/0067d00000Java2\&quot; target=\&quot;_blank\&quot;&gt;GE_UnitTest_30Sep1806&lt;/a&gt;&quot;,&quot;CloseDate&quot;:&quot;2021-09-30T00:00:00.000Z&quot;,&quot;Sales_Forecast_Category__c&quot;:&quot;Open&quot;,&quot;Name&quot;:&quot;GE_UnitTest_30Sep1806&quot;,&quot;SystemModstamp&quot;:&quot;2021-09-30T12:54:15.000Z&quot;,&quot;RecordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;CreatedDate&quot;:&quot;2021-09-30T12:36:16.000Z&quot;,&quot;Id&quot;:&quot;0067d00000Java2AAB&quot;,&quot;LastModifiedById&quot;:&quot;${c_clkRecordId}AAA&quot;,&quot;sobjectType&quot;:&quot;Opportunity&quot;},&quot;errorContext&quot;:{&quot;componentStack&quot;:&quot;[flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker]&quot;}}},{&quot;id&quot;:&quot;893;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;entityName&quot;:&quot;Opportunity&quot;,&quot;recordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;mode&quot;:&quot;VIEW&quot;,&quot;type&quot;:&quot;COMPACT&quot;,&quot;theme&quot;:&quot;light&quot;,&quot;inContextOfComponent&quot;:&quot;flexipage:recentItemStencil&quot;,&quot;pageSize&quot;:-1,&quot;offset&quot;:0,&quot;record&quot;:{&quot;LastModifiedDate&quot;:&quot;2021-09-30T11:33:51.000Z&quot;,&quot;Account&quot;:{&quot;RecordTypeId&quot;:&quot;01230000000rrnKAAQ&quot;,&quot;Id&quot;:&quot;001a000001dLchaAAC&quot;,&quot;Name&quot;:&quot;${p_AccountName}&quot;,&quot;sobjectType&quot;:&quot;Account&quot;},&quot;AccountId&quot;:&quot;001a000001dLchaAAC&quot;,&quot;StageName&quot;:&quot;1. Understand Customer&quot;,&quot;Forecast_Category__c&quot;:&quot;Open&quot;,&quot;CloseDate__f&quot;:&quot;9/30/2021&quot;,&quot;Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;StageName__l&quot;:&quot;1. Understand Customer&quot;,&quot;CurrencyIsoCode&quot;:&quot;USD&quot;,&quot;Sales_Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;Opportunity_Name_Grid__c&quot;:&quot;&lt;a href=\&quot;https://gehealthcare-amer.my.salesforce.com/0067d00000JavXU\&quot; target=\&quot;_blank\&quot;&gt;SmokeTest_30Sept_1700&lt;/a&gt;&quot;,&quot;CloseDate&quot;:&quot;2021-09-30T00:00:00.000Z&quot;,&quot;Sales_Forecast_Category__c&quot;:&quot;Open&quot;,&quot;Name&quot;:&quot;SmokeTest_30Sept_1700&quot;,&quot;SystemModstamp&quot;:&quot;2021-09-30T11:33:51.000Z&quot;,&quot;RecordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;CreatedDate&quot;:&quot;2021-09-30T11:32:58.000Z&quot;,&quot;Id&quot;:&quot;0067d00000JavXUAAZ&quot;,&quot;LastModifiedById&quot;:&quot;${c_clkRecordId}AAA&quot;,&quot;sobjectType&quot;:&quot;Opportunity&quot;},&quot;errorContext&quot;:{&quot;componentStack&quot;:&quot;[flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker]&quot;}}},{&quot;id&quot;:&quot;895;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;entityName&quot;:&quot;Opportunity&quot;,&quot;recordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;mode&quot;:&quot;VIEW&quot;,&quot;type&quot;:&quot;COMPACT&quot;,&quot;theme&quot;:&quot;light&quot;,&quot;inContextOfComponent&quot;:&quot;flexipage:recentItemStencil&quot;,&quot;pageSize&quot;:-1,&quot;offset&quot;:0,&quot;record&quot;:{&quot;LastModifiedDate&quot;:&quot;2021-09-30T11:44:36.000Z&quot;,&quot;Account&quot;:{&quot;RecordTypeId&quot;:&quot;01230000000rrnKAAQ&quot;,&quot;Id&quot;:&quot;001a000001dLchaAAC&quot;,&quot;Name&quot;:&quot;${p_AccountName}&quot;,&quot;sobjectType&quot;:&quot;Account&quot;},&quot;AccountId&quot;:&quot;001a000001dLchaAAC&quot;,&quot;StageName&quot;:&quot;1. Understand Customer&quot;,&quot;Forecast_Category__c&quot;:&quot;Open&quot;,&quot;CloseDate__f&quot;:&quot;10/1/2021&quot;,&quot;Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;StageName__l&quot;:&quot;1. Understand Customer&quot;,&quot;CurrencyIsoCode&quot;:&quot;USD&quot;,&quot;Sales_Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;Opportunity_Name_Grid__c&quot;:&quot;&lt;a href=\&quot;https://gehealthcare-amer.my.salesforce.com/0067d00000JavXo\&quot; target=\&quot;_blank\&quot;&gt;Auto-ULS_USCAN-30/9/2021&lt;/a&gt;&quot;,&quot;CloseDate&quot;:&quot;2021-10-01T00:00:00.000Z&quot;,&quot;Sales_Forecast_Category__c&quot;:&quot;Open&quot;,&quot;Name&quot;:&quot;Auto-ULS_USCAN-30/9/2021&quot;,&quot;SystemModstamp&quot;:&quot;2021-09-30T11:44:36.000Z&quot;,&quot;RecordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;CreatedDate&quot;:&quot;2021-09-30T11:37:11.000Z&quot;,&quot;Id&quot;:&quot;0067d00000JavXoAAJ&quot;,&quot;LastModifiedById&quot;:&quot;${c_clkRecordId}AAA&quot;,&quot;sobjectType&quot;:&quot;Opportunity&quot;},&quot;errorContext&quot;:{&quot;componentStack&quot;:&quot;[flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker]&quot;}}},{&quot;id&quot;:&quot;897;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;entityName&quot;:&quot;Opportunity&quot;,&quot;recordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;mode&quot;:&quot;VIEW&quot;,&quot;type&quot;:&quot;COMPACT&quot;,&quot;theme&quot;:&quot;light&quot;,&quot;inContextOfComponent&quot;:&quot;flexipage:recentItemStencil&quot;,&quot;pageSize&quot;:-1,&quot;offset&quot;:0,&quot;record&quot;:{&quot;LastModifiedDate&quot;:&quot;2021-09-30T11:44:21.000Z&quot;,&quot;Account&quot;:{&quot;RecordTypeId&quot;:&quot;01230000000rrnKAAQ&quot;,&quot;Id&quot;:&quot;001a000001dLchaAAC&quot;,&quot;Name&quot;:&quot;${p_AccountName}&quot;,&quot;sobjectType&quot;:&quot;Account&quot;},&quot;AccountId&quot;:&quot;001a000001dLchaAAC&quot;,&quot;StageName&quot;:&quot;1. Understand Customer&quot;,&quot;Forecast_Category__c&quot;:&quot;Open&quot;,&quot;CloseDate__f&quot;:&quot;10/1/2021&quot;,&quot;Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;StageName__l&quot;:&quot;1. Understand Customer&quot;,&quot;CurrencyIsoCode&quot;:&quot;USD&quot;,&quot;Sales_Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;Opportunity_Name_Grid__c&quot;:&quot;&lt;a href=\&quot;https://gehealthcare-amer.my.salesforce.com/0067d00000JavWS\&quot; target=\&quot;_blank\&quot;&gt;Auto-ULS_USCAN-30/9/2021&lt;/a&gt;&quot;,&quot;CloseDate&quot;:&quot;2021-10-01T00:00:00.000Z&quot;,&quot;Sales_Forecast_Category__c&quot;:&quot;Open&quot;,&quot;Name&quot;:&quot;Auto-ULS_USCAN-30/9/2021&quot;,&quot;SystemModstamp&quot;:&quot;2021-09-30T11:44:21.000Z&quot;,&quot;RecordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;CreatedDate&quot;:&quot;2021-09-30T11:36:54.000Z&quot;,&quot;Id&quot;:&quot;0067d00000JavWSAAZ&quot;,&quot;LastModifiedById&quot;:&quot;${c_clkRecordId}AAA&quot;,&quot;sobjectType&quot;:&quot;Opportunity&quot;},&quot;errorContext&quot;:{&quot;componentStack&quot;:&quot;[flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker]&quot;}}},{&quot;id&quot;:&quot;899;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;entityName&quot;:&quot;Opportunity&quot;,&quot;recordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;mode&quot;:&quot;VIEW&quot;,&quot;type&quot;:&quot;COMPACT&quot;,&quot;theme&quot;:&quot;light&quot;,&quot;inContextOfComponent&quot;:&quot;flexipage:recentItemStencil&quot;,&quot;pageSize&quot;:-1,&quot;offset&quot;:0,&quot;record&quot;:{&quot;LastModifiedDate&quot;:&quot;2021-09-30T11:19:53.000Z&quot;,&quot;Account&quot;:{&quot;RecordTypeId&quot;:&quot;01230000000rrnKAAQ&quot;,&quot;Id&quot;:&quot;001a000001dLchaAAC&quot;,&quot;Name&quot;:&quot;${p_AccountName}&quot;,&quot;sobjectType&quot;:&quot;Account&quot;},&quot;AccountId&quot;:&quot;001a000001dLchaAAC&quot;,&quot;StageName&quot;:&quot;1. Understand Customer&quot;,&quot;Forecast_Category__c&quot;:&quot;Open&quot;,&quot;CloseDate__f&quot;:&quot;9/30/2021&quot;,&quot;Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;StageName__l&quot;:&quot;1. Understand Customer&quot;,&quot;CurrencyIsoCode&quot;:&quot;USD&quot;,&quot;Sales_Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;Opportunity_Name_Grid__c&quot;:&quot;&lt;a href=\&quot;https://gehealthcare-amer.my.salesforce.com/0067d00000JavVb\&quot; target=\&quot;_blank\&quot;&gt;GE_UnitTest_30Sep_1646&lt;/a&gt;&quot;,&quot;CloseDate&quot;:&quot;2021-09-30T00:00:00.000Z&quot;,&quot;Sales_Forecast_Category__c&quot;:&quot;Open&quot;,&quot;Name&quot;:&quot;GE_UnitTest_30Sep_1646&quot;,&quot;SystemModstamp&quot;:&quot;2021-09-30T11:19:53.000Z&quot;,&quot;RecordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;CreatedDate&quot;:&quot;2021-09-30T11:16:26.000Z&quot;,&quot;Id&quot;:&quot;0067d00000JavVbAAJ&quot;,&quot;LastModifiedById&quot;:&quot;${c_clkRecordId}AAA&quot;,&quot;sobjectType&quot;:&quot;Opportunity&quot;},&quot;errorContext&quot;:{&quot;componentStack&quot;:&quot;[flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker]&quot;}}},{&quot;id&quot;:&quot;901;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;entityName&quot;:&quot;Opportunity&quot;,&quot;recordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;mode&quot;:&quot;VIEW&quot;,&quot;type&quot;:&quot;COMPACT&quot;,&quot;theme&quot;:&quot;light&quot;,&quot;inContextOfComponent&quot;:&quot;flexipage:recentItemStencil&quot;,&quot;pageSize&quot;:-1,&quot;offset&quot;:0,&quot;record&quot;:{&quot;LastModifiedDate&quot;:&quot;2021-09-30T11:21:14.000Z&quot;,&quot;Account&quot;:{&quot;RecordTypeId&quot;:&quot;01230000000rrnKAAQ&quot;,&quot;Id&quot;:&quot;001a000001dLchaAAC&quot;,&quot;Name&quot;:&quot;${p_AccountName}&quot;,&quot;sobjectType&quot;:&quot;Account&quot;},&quot;AccountId&quot;:&quot;001a000001dLchaAAC&quot;,&quot;StageName&quot;:&quot;1. Understand Customer&quot;,&quot;Forecast_Category__c&quot;:&quot;Open&quot;,&quot;CloseDate__f&quot;:&quot;9/30/2021&quot;,&quot;Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;StageName__l&quot;:&quot;1. Understand Customer&quot;,&quot;CurrencyIsoCode&quot;:&quot;USD&quot;,&quot;Sales_Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;Opportunity_Name_Grid__c&quot;:&quot;&lt;a href=\&quot;https://gehealthcare-amer.my.salesforce.com/0067d00000JavVg\&quot; target=\&quot;_blank\&quot;&gt;GE_UnitTest_30Sep_1647&lt;/a&gt;&quot;,&quot;CloseDate&quot;:&quot;2021-09-30T00:00:00.000Z&quot;,&quot;Sales_Forecast_Category__c&quot;:&quot;Open&quot;,&quot;Name&quot;:&quot;GE_UnitTest_30Sep_1647&quot;,&quot;SystemModstamp&quot;:&quot;2021-09-30T11:21:14.000Z&quot;,&quot;RecordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;CreatedDate&quot;:&quot;2021-09-30T11:18:59.000Z&quot;,&quot;Id&quot;:&quot;0067d00000JavVgAAJ&quot;,&quot;LastModifiedById&quot;:&quot;${c_clkRecordId}AAA&quot;,&quot;sobjectType&quot;:&quot;Opportunity&quot;},&quot;errorContext&quot;:{&quot;componentStack&quot;:&quot;[flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker]&quot;}}},{&quot;id&quot;:&quot;903;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;entityName&quot;:&quot;Opportunity&quot;,&quot;recordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;mode&quot;:&quot;VIEW&quot;,&quot;type&quot;:&quot;COMPACT&quot;,&quot;theme&quot;:&quot;light&quot;,&quot;inContextOfComponent&quot;:&quot;flexipage:recentItemStencil&quot;,&quot;pageSize&quot;:-1,&quot;offset&quot;:0,&quot;record&quot;:{&quot;LastModifiedDate&quot;:&quot;2021-09-28T05:39:33.000Z&quot;,&quot;Account&quot;:{&quot;RecordTypeId&quot;:&quot;01230000000rrnKAAQ&quot;,&quot;Id&quot;:&quot;001a000001dLchaAAC&quot;,&quot;Name&quot;:&quot;${p_AccountName}&quot;,&quot;sobjectType&quot;:&quot;Account&quot;},&quot;AccountId&quot;:&quot;001a000001dLchaAAC&quot;,&quot;StageName&quot;:&quot;1. Understand Customer&quot;,&quot;Forecast_Category__c&quot;:&quot;Open&quot;,&quot;CloseDate__f&quot;:&quot;9/27/2021&quot;,&quot;Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;StageName__l&quot;:&quot;1. Understand Customer&quot;,&quot;CurrencyIsoCode&quot;:&quot;USD&quot;,&quot;Sales_Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;Opportunity_Name_Grid__c&quot;:&quot;&lt;a href=\&quot;https://gehealthcare-amer.my.salesforce.com/0067d00000Jaksy\&quot; target=\&quot;_blank\&quot;&gt;Smoketest_28Sept_1106&lt;/a&gt;&quot;,&quot;CloseDate&quot;:&quot;2021-09-27T00:00:00.000Z&quot;,&quot;Sales_Forecast_Category__c&quot;:&quot;Open&quot;,&quot;Name&quot;:&quot;Smoketest_28Sept_1106&quot;,&quot;SystemModstamp&quot;:&quot;2021-09-28T05:39:33.000Z&quot;,&quot;RecordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;CreatedDate&quot;:&quot;2021-09-28T05:38:26.000Z&quot;,&quot;Id&quot;:&quot;0067d00000JaksyAAB&quot;,&quot;LastModifiedById&quot;:&quot;${c_clkRecordId}AAA&quot;,&quot;sobjectType&quot;:&quot;Opportunity&quot;},&quot;errorContext&quot;:{&quot;componentStack&quot;:&quot;[flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker]&quot;}}},{&quot;id&quot;:&quot;905;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;entityName&quot;:&quot;Opportunity&quot;,&quot;recordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;mode&quot;:&quot;VIEW&quot;,&quot;type&quot;:&quot;COMPACT&quot;,&quot;theme&quot;:&quot;light&quot;,&quot;inContextOfComponent&quot;:&quot;flexipage:recentItemStencil&quot;,&quot;pageSize&quot;:-1,&quot;offset&quot;:0,&quot;record&quot;:{&quot;LastModifiedDate&quot;:&quot;2021-09-22T01:02:43.000Z&quot;,&quot;Account&quot;:{&quot;RecordTypeId&quot;:&quot;01230000000rrnKAAQ&quot;,&quot;Id&quot;:&quot;0013a00001f8mZ8AAI&quot;,&quot;Name&quot;:&quot;South Carolina Department of Administration Surplus Property&quot;,&quot;sobjectType&quot;:&quot;Account&quot;},&quot;AccountId&quot;:&quot;0013a00001f8mZ8AAI&quot;,&quot;StageName&quot;:&quot;1. Understand Customer&quot;,&quot;Forecast_Category__c&quot;:&quot;Open&quot;,&quot;CloseDate__f&quot;:&quot;9/23/2021&quot;,&quot;Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;StageName__l&quot;:&quot;1. Understand Customer&quot;,&quot;CurrencyIsoCode&quot;:&quot;USD&quot;,&quot;Sales_Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;Opportunity_Name_Grid__c&quot;:&quot;&lt;a href=\&quot;https://gehealthcare-amer.my.salesforce.com/0067d00000JaRbl\&quot; target=\&quot;_blank\&quot;&gt;Auto-ULS_USCAN-22/9/2021&lt;/a&gt;&quot;,&quot;CloseDate&quot;:&quot;2021-09-23T00:00:00.000Z&quot;,&quot;Sales_Forecast_Category__c&quot;:&quot;Open&quot;,&quot;Name&quot;:&quot;Auto-ULS_USCAN-22/9/2021&quot;,&quot;SystemModstamp&quot;:&quot;2021-09-22T01:02:43.000Z&quot;,&quot;RecordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;CreatedDate&quot;:&quot;2021-09-22T00:14:25.000Z&quot;,&quot;Id&quot;:&quot;0067d00000JaRblAAF&quot;,&quot;LastModifiedById&quot;:&quot;${c_clkRecordId}AAA&quot;,&quot;sobjectType&quot;:&quot;Opportunity&quot;},&quot;errorContext&quot;:{&quot;componentStack&quot;:&quot;[flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker]&quot;}}},{&quot;id&quot;:&quot;907;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;entityName&quot;:&quot;Opportunity&quot;,&quot;recordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;mode&quot;:&quot;VIEW&quot;,&quot;type&quot;:&quot;COMPACT&quot;,&quot;theme&quot;:&quot;light&quot;,&quot;inContextOfComponent&quot;:&quot;flexipage:recentItemStencil&quot;,&quot;pageSize&quot;:-1,&quot;offset&quot;:0,&quot;record&quot;:{&quot;LastModifiedDate&quot;:&quot;2021-09-30T10:27:03.000Z&quot;,&quot;Account&quot;:{&quot;RecordTypeId&quot;:&quot;01230000000rrnKAAQ&quot;,&quot;Id&quot;:&quot;001a000001dLchaAAC&quot;,&quot;Name&quot;:&quot;${p_AccountName}&quot;,&quot;sobjectType&quot;:&quot;Account&quot;},&quot;AccountId&quot;:&quot;001a000001dLchaAAC&quot;,&quot;StageName&quot;:&quot;1. Understand Customer&quot;,&quot;Forecast_Category__c&quot;:&quot;Open&quot;,&quot;CloseDate__f&quot;:&quot;10/1/2021&quot;,&quot;Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;StageName__l&quot;:&quot;1. Understand Customer&quot;,&quot;CurrencyIsoCode&quot;:&quot;USD&quot;,&quot;Sales_Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;Opportunity_Name_Grid__c&quot;:&quot;&lt;a href=\&quot;https://gehealthcare-amer.my.salesforce.com/0067d00000JavMl\&quot; target=\&quot;_blank\&quot;&gt;Auto-ULS_USCAN-30/9/2021&lt;/a&gt;&quot;,&quot;CloseDate&quot;:&quot;2021-10-01T00:00:00.000Z&quot;,&quot;Sales_Forecast_Category__c&quot;:&quot;Open&quot;,&quot;Name&quot;:&quot;Auto-ULS_USCAN-30/9/2021&quot;,&quot;SystemModstamp&quot;:&quot;2021-09-30T10:27:03.000Z&quot;,&quot;RecordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;CreatedDate&quot;:&quot;2021-09-30T10:25:28.000Z&quot;,&quot;Id&quot;:&quot;0067d00000JavMlAAJ&quot;,&quot;LastModifiedById&quot;:&quot;${c_clkRecordId}AAA&quot;,&quot;sobjectType&quot;:&quot;Opportunity&quot;},&quot;errorContext&quot;:{&quot;componentStack&quot;:&quot;[flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker]&quot;}}},{&quot;id&quot;:&quot;909;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;entityName&quot;:&quot;Opportunity&quot;,&quot;recordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;mode&quot;:&quot;VIEW&quot;,&quot;type&quot;:&quot;COMPACT&quot;,&quot;theme&quot;:&quot;light&quot;,&quot;inContextOfComponent&quot;:&quot;flexipage:recentItemStencil&quot;,&quot;pageSize&quot;:-1,&quot;offset&quot;:0,&quot;record&quot;:{&quot;LastModifiedDate&quot;:&quot;2021-09-30T10:24:12.000Z&quot;,&quot;Account&quot;:{&quot;RecordTypeId&quot;:&quot;01230000000rrnKAAQ&quot;,&quot;Id&quot;:&quot;001a000001dLchaAAC&quot;,&quot;Name&quot;:&quot;${p_AccountName}&quot;,&quot;sobjectType&quot;:&quot;Account&quot;},&quot;AccountId&quot;:&quot;001a000001dLchaAAC&quot;,&quot;StageName&quot;:&quot;1. Understand Customer&quot;,&quot;Forecast_Category__c&quot;:&quot;Open&quot;,&quot;CloseDate__f&quot;:&quot;10/1/2021&quot;,&quot;Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;StageName__l&quot;:&quot;1. Understand Customer&quot;,&quot;CurrencyIsoCode&quot;:&quot;USD&quot;,&quot;Sales_Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;Opportunity_Name_Grid__c&quot;:&quot;&lt;a href=\&quot;https://gehealthcare-amer.my.salesforce.com/0067d00000JavLs\&quot; target=\&quot;_blank\&quot;&gt;Auto-ULS_USCAN-30/9/2021&lt;/a&gt;&quot;,&quot;CloseDate&quot;:&quot;2021-10-01T00:00:00.000Z&quot;,&quot;Sales_Forecast_Category__c&quot;:&quot;Open&quot;,&quot;Name&quot;:&quot;Auto-ULS_USCAN-30/9/2021&quot;,&quot;SystemModstamp&quot;:&quot;2021-09-30T10:24:12.000Z&quot;,&quot;RecordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;CreatedDate&quot;:&quot;2021-09-30T10:22:44.000Z&quot;,&quot;Id&quot;:&quot;0067d00000JavLsAAJ&quot;,&quot;LastModifiedById&quot;:&quot;${c_clkRecordId}AAA&quot;,&quot;sobjectType&quot;:&quot;Opportunity&quot;},&quot;errorContext&quot;:{&quot;componentStack&quot;:&quot;[flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker]&quot;}}},{&quot;id&quot;:&quot;911;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;entityName&quot;:&quot;Opportunity&quot;,&quot;recordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;mode&quot;:&quot;VIEW&quot;,&quot;type&quot;:&quot;COMPACT&quot;,&quot;theme&quot;:&quot;light&quot;,&quot;inContextOfComponent&quot;:&quot;flexipage:recentItemStencil&quot;,&quot;pageSize&quot;:-1,&quot;offset&quot;:0,&quot;record&quot;:{&quot;LastModifiedDate&quot;:&quot;2021-09-30T09:14:43.000Z&quot;,&quot;Account&quot;:{&quot;RecordTypeId&quot;:&quot;01230000000rrnKAAQ&quot;,&quot;Id&quot;:&quot;001a000001dLchaAAC&quot;,&quot;Name&quot;:&quot;${p_AccountName}&quot;,&quot;sobjectType&quot;:&quot;Account&quot;},&quot;AccountId&quot;:&quot;001a000001dLchaAAC&quot;,&quot;StageName&quot;:&quot;1. Understand Customer&quot;,&quot;Forecast_Category__c&quot;:&quot;Open&quot;,&quot;CloseDate__f&quot;:&quot;10/1/2021&quot;,&quot;Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;StageName__l&quot;:&quot;1. Understand Customer&quot;,&quot;CurrencyIsoCode&quot;:&quot;USD&quot;,&quot;Sales_Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;Opportunity_Name_Grid__c&quot;:&quot;&lt;a href=\&quot;https://gehealthcare-amer.my.salesforce.com/0067d00000JavAu\&quot; target=\&quot;_blank\&quot;&gt;Auto-ULS_USCAN-30/9/2021&lt;/a&gt;&quot;,&quot;CloseDate&quot;:&quot;2021-10-01T00:00:00.000Z&quot;,&quot;Sales_Forecast_Category__c&quot;:&quot;Open&quot;,&quot;Name&quot;:&quot;Auto-ULS_USCAN-30/9/2021&quot;,&quot;SystemModstamp&quot;:&quot;2021-09-30T09:14:43.000Z&quot;,&quot;RecordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;CreatedDate&quot;:&quot;2021-09-30T09:13:12.000Z&quot;,&quot;Id&quot;:&quot;0067d00000JavAuAAJ&quot;,&quot;LastModifiedById&quot;:&quot;${c_clkRecordId}AAA&quot;,&quot;sobjectType&quot;:&quot;Opportunity&quot;},&quot;errorContext&quot;:{&quot;componentStack&quot;:&quot;[flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker]&quot;}}},{&quot;id&quot;:&quot;913;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;entityName&quot;:&quot;Opportunity&quot;,&quot;recordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;mode&quot;:&quot;VIEW&quot;,&quot;type&quot;:&quot;COMPACT&quot;,&quot;theme&quot;:&quot;light&quot;,&quot;inContextOfComponent&quot;:&quot;flexipage:recentItemStencil&quot;,&quot;pageSize&quot;:-1,&quot;offset&quot;:0,&quot;record&quot;:{&quot;LastModifiedDate&quot;:&quot;2021-09-30T09:11:34.000Z&quot;,&quot;Account&quot;:{&quot;RecordTypeId&quot;:&quot;01230000000rrnKAAQ&quot;,&quot;Id&quot;:&quot;001a000001dLchaAAC&quot;,&quot;Name&quot;:&quot;${p_AccountName}&quot;,&quot;sobjectType&quot;:&quot;Account&quot;},&quot;AccountId&quot;:&quot;001a000001dLchaAAC&quot;,&quot;StageName&quot;:&quot;1. Understand Customer&quot;,&quot;Forecast_Category__c&quot;:&quot;Open&quot;,&quot;CloseDate__f&quot;:&quot;10/1/2021&quot;,&quot;Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;StageName__l&quot;:&quot;1. Understand Customer&quot;,&quot;CurrencyIsoCode&quot;:&quot;USD&quot;,&quot;Sales_Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;Opportunity_Name_Grid__c&quot;:&quot;&lt;a href=\&quot;https://gehealthcare-amer.my.salesforce.com/0067d00000JavAG\&quot; target=\&quot;_blank\&quot;&gt;Auto-ULS_USCAN-30/9/2021&lt;/a&gt;&quot;,&quot;CloseDate&quot;:&quot;2021-10-01T00:00:00.000Z&quot;,&quot;Sales_Forecast_Category__c&quot;:&quot;Open&quot;,&quot;Name&quot;:&quot;Auto-ULS_USCAN-30/9/2021&quot;,&quot;SystemModstamp&quot;:&quot;2021-09-30T09:11:34.000Z&quot;,&quot;RecordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;CreatedDate&quot;:&quot;2021-09-30T09:09:26.000Z&quot;,&quot;Id&quot;:&quot;0067d00000JavAGAAZ&quot;,&quot;LastModifiedById&quot;:&quot;${c_clkRecordId}AAA&quot;,&quot;sobjectType&quot;:&quot;Opportunity&quot;},&quot;errorContext&quot;:{&quot;componentStack&quot;:&quot;[flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker]&quot;}}},{&quot;id&quot;:&quot;915;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;entityName&quot;:&quot;Opportunity&quot;,&quot;recordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;mode&quot;:&quot;VIEW&quot;,&quot;type&quot;:&quot;COMPACT&quot;,&quot;theme&quot;:&quot;light&quot;,&quot;inContextOfComponent&quot;:&quot;flexipage:recentItemStencil&quot;,&quot;pageSize&quot;:-1,&quot;offset&quot;:0,&quot;record&quot;:{&quot;LastModifiedDate&quot;:&quot;2021-09-30T09:11:24.000Z&quot;,&quot;Account&quot;:{&quot;RecordTypeId&quot;:&quot;01230000000rrnKAAQ&quot;,&quot;Id&quot;:&quot;001a000001dLchaAAC&quot;,&quot;Name&quot;:&quot;${p_AccountName}&quot;,&quot;sobjectType&quot;:&quot;Account&quot;},&quot;AccountId&quot;:&quot;001a000001dLchaAAC&quot;,&quot;StageName&quot;:&quot;1. Understand Customer&quot;,&quot;Forecast_Category__c&quot;:&quot;Open&quot;,&quot;CloseDate__f&quot;:&quot;10/1/2021&quot;,&quot;Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;StageName__l&quot;:&quot;1. Understand Customer&quot;,&quot;CurrencyIsoCode&quot;:&quot;USD&quot;,&quot;Sales_Forecast_Category__c__l&quot;:&quot;Open&quot;,&quot;Opportunity_Name_Grid__c&quot;:&quot;&lt;a href=\&quot;https://gehealthcare-amer.my.salesforce.com/0067d00000JavAB\&quot; target=\&quot;_blank\&quot;&gt;Auto-ULS_USCAN-30/9/2021&lt;/a&gt;&quot;,&quot;CloseDate&quot;:&quot;2021-10-01T00:00:00.000Z&quot;,&quot;Sales_Forecast_Category__c&quot;:&quot;Open&quot;,&quot;Name&quot;:&quot;Auto-ULS_USCAN-30/9/2021&quot;,&quot;SystemModstamp&quot;:&quot;2021-09-30T09:11:24.000Z&quot;,&quot;RecordTypeId&quot;:&quot;01230000000rrnNAAQ&quot;,&quot;CreatedDate&quot;:&quot;2021-09-30T09:09:21.000Z&quot;,&quot;Id&quot;:&quot;0067d00000JavABAAZ&quot;,&quot;LastModifiedById&quot;:&quot;${c_clkRecordId}AAA&quot;,&quot;sobjectType&quot;:&quot;Opportunity&quot;},&quot;errorContext&quot;:{&quot;componentStack&quot;:&quot;[flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [flexipage:recentItems] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker] &gt; [force:recordLayoutBroker]&quot;}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=15&amp;ui-force-components-controllers-recordLayoutBroker.RecordLayoutBroker.getLayout=15</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">3863300000034a4430</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cs192/auraCmpDef-427" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="flexipage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">flexipage</stringProp>
                  <stringProp name="Argument.value">listRecord,recentItemStencil</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="force" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">force</stringProp>
                  <stringProp name="Argument.value">listRecord</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">-335523913</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName8}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cs192/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/_nc_external/system/security/session/SessionTimeServlet-433" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="buster" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">buster</stringProp>
                  <stringProp name="Argument.value">1633063159627</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_nc_external/system/security/session/SessionTimeServlet</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=20&amp;ui-setup-components-aura-components-gear.Gear.getGearSetupApps=1-437" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1660;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.setup.components.aura.components.gear.GearController/ACTION$getGearSetupApps&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;customAppId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=20&amp;ui-setup-components-aura-components-gear.Gear.getGearSetupApps=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">4213500000022a2f23</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=17&amp;ui-search-components-forcesearch-assistant.AssistantSuggestionsDataProvider.getSuggestions=1-434" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1665;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.assistant.AssistantSuggestionsDataProviderController/ACTION$getSuggestions&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;term&quot;:&quot;&quot;,&quot;scopeMap&quot;:{&quot;type&quot;:&quot;TOP_RESULTS&quot;},&quot;maxRecords&quot;:5,&quot;maxQueries&quot;:20,&quot;maxTips&quot;:20,&quot;maxListViews&quot;:20,&quot;passedScopeMaps&quot;:[{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Account&quot;,&quot;nameField&quot;:&quot;Name&quot;,&quot;disambiguationField&quot;:&quot;Ultimate_P_Parent__c&quot;,&quot;disambiguationFieldType&quot;:&quot;STRING&quot;,&quot;labelPlural&quot;:&quot;Accounts&quot;,&quot;label&quot;:&quot;Account&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Opportunity&quot;,&quot;nameField&quot;:&quot;Name&quot;,&quot;disambiguationField&quot;:&quot;Account.Name&quot;,&quot;disambiguationFieldType&quot;:&quot;NESTED&quot;,&quot;labelPlural&quot;:&quot;Opportunities&quot;,&quot;label&quot;:&quot;Opportunity&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Lead&quot;,&quot;nameField&quot;:&quot;Name&quot;,&quot;disambiguationField&quot;:&quot;CreatedDate&quot;,&quot;disambiguationFieldType&quot;:&quot;DATETIME&quot;,&quot;labelPlural&quot;:&quot;Leads&quot;,&quot;label&quot;:&quot;Lead&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Contact&quot;,&quot;nameField&quot;:&quot;Name&quot;,&quot;disambiguationField&quot;:&quot;Account.Name&quot;,&quot;disambiguationFieldType&quot;:&quot;NESTED&quot;,&quot;labelPlural&quot;:&quot;Contacts&quot;,&quot;label&quot;:&quot;Contact&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Report&quot;,&quot;nameField&quot;:&quot;Name&quot;,&quot;disambiguationField&quot;:&quot;Description&quot;,&quot;disambiguationFieldType&quot;:&quot;STRING&quot;,&quot;labelPlural&quot;:&quot;Reports&quot;,&quot;label&quot;:&quot;Report&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Dashboard&quot;,&quot;nameField&quot;:&quot;Title&quot;,&quot;disambiguationField&quot;:&quot;Description&quot;,&quot;disambiguationFieldType&quot;:&quot;STRING&quot;,&quot;labelPlural&quot;:&quot;Dashboards&quot;,&quot;label&quot;:&quot;Dashboard&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Task&quot;,&quot;nameField&quot;:&quot;Subject&quot;,&quot;labelPlural&quot;:&quot;Tasks&quot;,&quot;label&quot;:&quot;Task&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Event&quot;,&quot;nameField&quot;:&quot;Subject&quot;,&quot;labelPlural&quot;:&quot;Events&quot;,&quot;label&quot;:&quot;Event&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Order_Header_Global__c&quot;,&quot;nameField&quot;:&quot;Name&quot;,&quot;disambiguationField&quot;:&quot;Global_Order_Number__c&quot;,&quot;disambiguationFieldType&quot;:&quot;STRING&quot;,&quot;labelPlural&quot;:&quot;Orders&quot;,&quot;label&quot;:&quot;Order&quot;}],&quot;context&quot;:{}},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=17&amp;ui-search-components-forcesearch-assistant.AssistantSuggestionsDataProvider.getSuggestions=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">4212500000009a721e</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=18&amp;ui-force-components-controllers-defenseHook.DefenseHook.getDefenseHook=1&amp;ui-global-components-one-globalCreate.GlobalCreate.getDockableActionsList=1&amp;ui-global-components-one-unsupportedContainer.UnsupportedContainer.getSettings=1&amp;ui-global-components-one-userProfileCard.UserProfileCard.loadProfileCardInfo=1&amp;ui-identity-components-sessiontimeoutwarn.SessionTimeoutWarn.getSessionTimeoutConfig=1&amp;ui-notifications-components-notifications-controller.Notifications.getNotifications=1&amp;ui-rtc-components-aura-components.RtcDiscoveryBanner.getConfig=1&amp;ui-support-components-crossFrameApiManager.CrossFrameApiManager.getIsLightningOpenCtiUser=1-435" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1631;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.defenseHook.DefenseHookController/ACTION$getDefenseHook&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;1638;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.identity.components.sessiontimeoutwarn.SessionTimeoutWarnController/ACTION$getSessionTimeoutConfig&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;1641;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.unsupportedContainer.UnsupportedContainerController/ACTION$getSettings&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;1642;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.support.components.crossFrameApiManager.CrossFrameApiManagerController/ACTION$getIsLightningOpenCtiUser&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true},{&quot;id&quot;:&quot;1643;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.rtc.components.aura.components.RtcDiscoveryBannerController/ACTION$getConfig&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true},{&quot;id&quot;:&quot;1652;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.globalCreate.GlobalCreateController/ACTION$getDockableActionsList&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;1653;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.notifications.components.notifications.controller.NotificationsController/ACTION$getNotifications&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;currentLastActivity&quot;:&quot;1970-01-01T00:00:00.000Z&quot;}},{&quot;id&quot;:&quot;1658;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.userProfileCard.UserProfileCardController/ACTION$loadProfileCardInfo&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=18&amp;ui-force-components-controllers-defenseHook.DefenseHook.getDefenseHook=1&amp;ui-global-components-one-globalCreate.GlobalCreate.getDockableActionsList=1&amp;ui-global-components-one-unsupportedContainer.UnsupportedContainer.getSettings=1&amp;ui-global-components-one-userProfileCard.UserProfileCard.loadProfileCardInfo=1&amp;ui-identity-components-sessiontimeoutwarn.SessionTimeoutWarn.getSessionTimeoutConfig=1&amp;ui-notifications-components-notifications-controller.Notifications.getNotifications=1&amp;ui-rtc-components-aura-components.RtcDiscoveryBanner.getConfig=1&amp;ui-support-components-crossFrameApiManager.CrossFrameApiManager.getIsLightningOpenCtiUser=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">42133000000a9ecb76</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=19&amp;ui-search-components-forcesearch-sgdp.MRUCache.getGlobalMrus=1-436" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1645;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.sgdp.MRUCacheController/ACTION$getGlobalMrus&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;maxResults&quot;:200,&quot;lastTenMrus&quot;:null}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=19&amp;ui-search-components-forcesearch-sgdp.MRUCache.getGlobalMrus=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">42134000000fda4083</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=16&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1-432" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1630;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.instrumentation.components.beacon.InstrumentationBeaconController/ACTION$sendData&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;batch&quot;:[{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:bootstrap\&quot;,\&quot;ts\&quot;:29221,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;navex:desktopLayoutContainer\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-consoleLayoutContainer-initConsole\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:29223,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;navex:desktopLayoutContainer\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-consoleLayoutContainer-didInit\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-consoleLayoutContainer-didInit\&quot;,\&quot;scope\&quot;:\&quot;one-consoleLayoutContainer\&quot;,\&quot;context\&quot;:{\&quot;eventSource\&quot;:\&quot;synthetic-consoleLayoutContainer-initConsole\&quot;,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;customAppId\&quot;:\&quot;06m0c0000014dgDAAQ\&quot;,\&quot;customAppDevName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;}},\&quot;sequence\&quot;:1,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;home:landing\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/page/home\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:bootstrap\&quot;,\&quot;ts\&quot;:0,\&quot;duration\&quot;:29340,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;navContainer:render\&quot;,\&quot;ts\&quot;:29257,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;one:appNavContainer\&quot;,\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;navContainer:afterRender\&quot;,\&quot;ts\&quot;:29305,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;one:appNavContainer\&quot;,\&quot;duration\&quot;:0}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:451,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;navex:desktopLayoutContainer\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:449},{\&quot;name\&quot;:\&quot;laf:platformPageResolver\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:2}]}]},\&quot;owner\&quot;:\&quot;laf:appLayoutHost\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;bootstrap\&quot;,\&quot;eventSource\&quot;:\&quot;lightning\&quot;,\&quot;attributes\&quot;:{\&quot;cache\&quot;:{\&quot;appCache\&quot;:false,\&quot;gvps\&quot;:false,\&quot;lightningLayout\&quot;:true},\&quot;execBootstrapJs\&quot;:11744,\&quot;execInlineJs\&quot;:11744,\&quot;appCssLoading\&quot;:null,\&quot;visibilityStateStart\&quot;:\&quot;visible\&quot;,\&quot;execAuraJs\&quot;:20859,\&quot;runInitAsync\&quot;:20868,\&quot;runAfterContextCreated\&quot;:20884,\&quot;runAfterInitDefsReady\&quot;:28418,\&quot;runAfterBootstrapReady\&quot;:28419,\&quot;AuraFrameworkEPT\&quot;:28419,\&quot;appCreationStart\&quot;:28505,\&quot;appCreationEnd\&quot;:28724,\&quot;appRenderingStart\&quot;:28724,\&quot;appRenderingEnd\&quot;:28734,\&quot;bootstrapEPT\&quot;:28735,\&quot;cdnEnabled\&quot;:true,\&quot;mode\&quot;:\&quot;PROD\&quot;,\&quot;maxAllowedParallelXHRCounts\&quot;:6,\&quot;pageStartTime\&quot;:1633063117538,\&quot;timing\&quot;:{\&quot;navigationStart\&quot;:1633063117538,\&quot;fetchStart\&quot;:1633063127125,\&quot;readyStart\&quot;:9587,\&quot;dnsStart\&quot;:1633063127127,\&quot;dnsEnd\&quot;:1633063127128,\&quot;lookupDomainTime\&quot;:1,\&quot;connectStart\&quot;:1633063127128,\&quot;connectEnd\&quot;:1633063127128,\&quot;connectTime\&quot;:0,\&quot;requestStart\&quot;:1633063127128,\&quot;responseStart\&quot;:1633063127129,\&quot;responseEnd\&quot;:1633063129235,\&quot;requestTime\&quot;:2107,\&quot;domLoading\&quot;:1633063129232,\&quot;domInteractive\&quot;:1633063146285,\&quot;initDomTreeTime\&quot;:17050,\&quot;contentLoadStart\&quot;:1633063146286,\&quot;contentLoadEnd\&quot;:1633063146287,\&quot;domComplete\&quot;:1633063146288,\&quot;domReadyTime\&quot;:3,\&quot;loadEventStart\&quot;:1633063146288,\&quot;loadEventEnd\&quot;:1633063146289,\&quot;loadEventTime\&quot;:1,\&quot;loadTime\&quot;:19164,\&quot;unloadEventStart\&quot;:0,\&quot;unloadEventEnd\&quot;:0,\&quot;unloadEventTime\&quot;:0,\&quot;appCacheTime\&quot;:2,\&quot;redirectTime\&quot;:0},\&quot;type\&quot;:\&quot;COLD\&quot;,\&quot;allRequests\&quot;:[{\&quot;name\&quot;:\&quot;https://${p_ServerName5}/one/one.app\&quot;,\&quot;initiatorType\&quot;:\&quot;navigation\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:9591,\&quot;startTime\&quot;:0,\&quot;fetchStart\&quot;:9587,\&quot;serverTime\&quot;:295,\&quot;redirect\&quot;:9587,\&quot;requestStart\&quot;:9590,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:314039,\&quot;encodedBodySize\&quot;:308596,\&quot;decodedBodySize\&quot;:308596,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:9591,\&quot;transfer\&quot;:0},{\&quot;name\&quot;:\&quot;/aura_\&quot;,\&quot;initiatorType\&quot;:\&quot;link\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:9078,\&quot;startTime\&quot;:11698,\&quot;fetchStart\&quot;:11698,\&quot;serverTime\&quot;:14,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:11725,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:761614,\&quot;encodedBodySize\&quot;:760566,\&quot;decodedBodySize\&quot;:760566,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:28,\&quot;transfer\&quot;:9050},{\&quot;name\&quot;:\&quot;appcore.js\&quot;,\&quot;initiatorType\&quot;:\&quot;link\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:16605,\&quot;startTime\&quot;:11698,\&quot;fetchStart\&quot;:11698,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:11726,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:5609898,\&quot;encodedBodySize\&quot;:5608924,\&quot;decodedBodySize\&quot;:5608924,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:5,\&quot;ttfb\&quot;:32,\&quot;transfer\&quot;:16573},{\&quot;name\&quot;:\&quot;app.css\&quot;,\&quot;initiatorType\&quot;:\&quot;link\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:3482,\&quot;startTime\&quot;:11698,\&quot;fetchStart\&quot;:11698,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:11719,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:1515037,\&quot;encodedBodySize\&quot;:1514545,\&quot;decodedBodySize\&quot;:1514545,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:22,\&quot;transfer\&quot;:3460},{\&quot;name\&quot;:\&quot;app.js\&quot;,\&quot;initiatorType\&quot;:\&quot;link\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:16317,\&quot;startTime\&quot;:11699,\&quot;fetchStart\&quot;:11699,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:11742,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:7454558,\&quot;encodedBodySize\&quot;:7453584,\&quot;decodedBodySize\&quot;:7453584,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:5,\&quot;ttfb\&quot;:48,\&quot;transfer\&quot;:16269},{\&quot;name\&quot;:\&quot;https://${p_ServerName5}/l/%7B%22mode%22%3A%22PROD%22%2C%22app%22%3A%22one%3Aone%22%2C%22fwuid%22%3A%22${c_fwuid}%22%2C%22loaded%22%3A%7B%22APPLICATION%40markup%3A%2F%2Fone%3Aone%22%3A%22${c_au}%22%7D%2C%22mlr%22%3A1%2C%22pathPrefix%22%3A%22%22%2C%22dns%22%3A%22c%22%2C%22ls%22%3A1%7D/resources.js?pv=1633005223000-1185603606&amp;rv=1633010264000\&quot;,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:1446,\&quot;startTime\&quot;:11702,\&quot;fetchStart\&quot;:11702,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:11742,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:74244,\&quot;encodedBodySize\&quot;:73744,\&quot;decodedBodySize\&quot;:73744,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:5,\&quot;ttfb\&quot;:40,\&quot;transfer\&quot;:1406},{\&quot;name\&quot;:\&quot;https://${p_ServerName5}/aura?preloadActions\&quot;,\&quot;initiatorType\&quot;:\&quot;xmlhttprequest\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:2140,\&quot;startTime\&quot;:11758,\&quot;fetchStart\&quot;:11758,\&quot;serverTime\&quot;:409,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:11763,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:138638,\&quot;encodedBodySize\&quot;:138060,\&quot;decodedBodySize\&quot;:138060,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:3,\&quot;ttfb\&quot;:16,\&quot;transfer\&quot;:2124},{\&quot;name\&quot;:\&quot;https://${p_ServerName5}/projRes/ui-global-components/webtemplate/splash_screen_winter22_astro.svg\&quot;,\&quot;initiatorType\&quot;:\&quot;css\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:4549,\&quot;startTime\&quot;:11765,\&quot;fetchStart\&quot;:11765,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:15180,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:35409,\&quot;encodedBodySize\&quot;:34885,\&quot;decodedBodySize\&quot;:34885,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:3416,\&quot;transfer\&quot;:1133},{\&quot;name\&quot;:\&quot;https://${p_ServerName5}/img/one/apple-touch-icon-ipad.png\&quot;,\&quot;initiatorType\&quot;:\&quot;other\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:9336,\&quot;startTime\&quot;:11773,\&quot;fetchStart\&quot;:11773,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:18714,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:2171,\&quot;encodedBodySize\&quot;:1676,\&quot;decodedBodySize\&quot;:1676,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:6942,\&quot;transfer\&quot;:2394},{\&quot;name\&quot;:\&quot;https://${p_ServerName5}/favicon.ico\&quot;,\&quot;initiatorType\&quot;:\&quot;other\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:9322,\&quot;startTime\&quot;:11774,\&quot;fetchStart\&quot;:11774,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:18717,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:5858,\&quot;encodedBodySize\&quot;:5430,\&quot;decodedBodySize\&quot;:5430,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:6943,\&quot;transfer\&quot;:2379}],\&quot;requestAuraJs\&quot;:{\&quot;name\&quot;:\&quot;/aura_\&quot;,\&quot;initiatorType\&quot;:\&quot;link\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:9078,\&quot;startTime\&quot;:11698,\&quot;fetchStart\&quot;:11698,\&quot;serverTime\&quot;:14,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:11725,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:761614,\&quot;encodedBodySize\&quot;:760566,\&quot;decodedBodySize\&quot;:760566,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:28,\&quot;transfer\&quot;:9050},\&quot;requestAppCoreJs\&quot;:{\&quot;name\&quot;:\&quot;appcore.js\&quot;,\&quot;initiatorType\&quot;:\&quot;link\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:16605,\&quot;startTime\&quot;:11698,\&quot;fetchStart\&quot;:11698,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:11726,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:5609898,\&quot;encodedBodySize\&quot;:5608924,\&quot;decodedBodySize\&quot;:5608924,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:5,\&quot;ttfb\&quot;:32,\&quot;transfer\&quot;:16573},\&quot;requestAppCss\&quot;:{\&quot;name\&quot;:\&quot;app.css\&quot;,\&quot;initiatorType\&quot;:\&quot;link\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:3482,\&quot;startTime\&quot;:11698,\&quot;fetchStart\&quot;:11698,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:11719,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:1515037,\&quot;encodedBodySize\&quot;:1514545,\&quot;decodedBodySize\&quot;:1514545,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:22,\&quot;transfer\&quot;:3460},\&quot;requestAppJs\&quot;:{\&quot;name\&quot;:\&quot;app.js\&quot;,\&quot;initiatorType\&quot;:\&quot;link\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:16317,\&quot;startTime\&quot;:11699,\&quot;fetchStart\&quot;:11699,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:11742,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:7454558,\&quot;encodedBodySize\&quot;:7453584,\&quot;decodedBodySize\&quot;:7453584,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:5,\&quot;ttfb\&quot;:48,\&quot;transfer\&quot;:16269},\&quot;requestLightningLayout\&quot;:{\&quot;name\&quot;:\&quot;https://${p_ServerName5}/aura?preloadActions\&quot;,\&quot;initiatorType\&quot;:\&quot;xmlhttprequest\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:2140,\&quot;startTime\&quot;:11758,\&quot;fetchStart\&quot;:11758,\&quot;serverTime\&quot;:409,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:11763,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:138638,\&quot;encodedBodySize\&quot;:138060,\&quot;decodedBodySize\&quot;:138060,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:3,\&quot;ttfb\&quot;:16,\&quot;transfer\&quot;:2124},\&quot;lightningLayoutCreationStart\&quot;:28771,\&quot;lightningLayoutCreationEnd\&quot;:29224,\&quot;lightningLayoutRenderingStart\&quot;:29228,\&quot;lightningLayoutRenderingEnd\&quot;:29338,\&quot;visibilityStateEnd\&quot;:\&quot;visible\&quot;,\&quot;lightningEPT\&quot;:29340,\&quot;referer\&quot;:\&quot;AlohaRedirect\&quot;,\&quot;appRootRequestId\&quot;:\&quot;6286381cf2999c52\&quot;,\&quot;navbarCPUTime\&quot;:0,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;viewportHeight\&quot;:595,\&quot;viewportWidth\&quot;:1280,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:29371,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;one:appNavContainer\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-click\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;global-nav-container-load\&quot;,\&quot;scope\&quot;:\&quot;standard-layout-container\&quot;,\&quot;context\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appNavType\&quot;:\&quot;Standard\&quot;,\&quot;appUiType\&quot;:\&quot;Lightning\&quot;,\&quot;tabId\&quot;:\&quot;home\&quot;,\&quot;tabContentType\&quot;:\&quot;home\&quot;,\&quot;tabIsCustom\&quot;:false,\&quot;tabIsGranular\&quot;:false,\&quot;numberOfTabs\&quot;:15,\&quot;numberOfTopLevelTabs\&quot;:15,\&quot;numberOfGranularTabs\&quot;:0,\&quot;numberOfUserAddedTabs\&quot;:0,\&quot;isPersonalized\&quot;:false}},\&quot;sequence\&quot;:2,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;home:landing\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/page/home\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:newDefs\&quot;,\&quot;ts\&quot;:30806,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;flexipage:page\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;newDefs\&quot;,\&quot;attributes\&quot;:{\&quot;componentDefs\&quot;:[\&quot;markup://flexipage:runtimeBackgroundComponentsWrapper\&quot;,\&quot;markup://flexipage:runtimeComponent\&quot;,\&quot;markup://one:fp0M00c00000000IZCAY__pageWithoutSobject__1624569623000\&quot;],\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:31901,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;force:record\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;${c_clkRecordId}AAA\&quot;,\&quot;recordType\&quot;:\&quot;User\&quot;,\&quot;recordTypeSetInClient\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;},\&quot;sequence\&quot;:3,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;home:landing\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/page/home\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:28957,\&quot;duration\&quot;:2950,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;navContainer:render\&quot;,\&quot;ts\&quot;:29257,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;one:appNavContainer\&quot;,\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;navContainer:afterRender\&quot;,\&quot;ts\&quot;:29305,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;one:appNavContainer\&quot;,\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;navContainer:create\&quot;,\&quot;ts\&quot;:29349,\&quot;context\&quot;:{\&quot;itemCount\&quot;:15},\&quot;owner\&quot;:\&quot;one:appNavContainer\&quot;,\&quot;duration\&quot;:22}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:30812,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:1,\&quot;auraXHRId\&quot;:1,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:65629,\&quot;xhrDuration\&quot;:2510,\&quot;xhrStall\&quot;:772,\&quot;startTime\&quot;:29382,\&quot;fetchStart\&quot;:29382,\&quot;requestStart\&quot;:30154,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:773,\&quot;transfer\&quot;:1737,\&quot;transferSize\&quot;:66207,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:236,\&quot;xhrDelay\&quot;:-1429},\&quot;duration\&quot;:1081}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:29169,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;302;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;flexipage:page\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.flexipage.components.page.FlexipageControllerV2/ACTION$getPage\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;params\&quot;:{\&quot;flexiPageDeveloperName\&quot;:\&quot;USCAN_Sales_UtilityBar\&quot;},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:19,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:183,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1637}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:2,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;laf:platformPageResolver\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:2},{\&quot;name\&quot;:\&quot;one:appnav\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:0}]}],\&quot;lds\&quot;:[{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;runtime-perf\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:31908,\&quot;context\&quot;:{\&quot;storeIngest\&quot;:1,\&quot;storeBroadcast\&quot;:1}}]},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCachePermsAndPrefs\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-fetch-getPermsAndPrefs\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1633063146495,\&quot;cacheHit\&quot;:false,\&quot;actionId\&quot;:\&quot;166;a\&quot;,\&quot;tEnd\&quot;:1633063149445,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getPermsAndPrefs\&quot;,\&quot;etTransaction\&quot;:2950,\&quot;requestId\&quot;:\&quot;forceSearchSearchGDPCachePermsAndPrefs:119:0;p\&quot;,\&quot;requestCmp\&quot;:\&quot;forceSearchSearchGDPCachePermsAndPrefs\&quot;,\&quot;requestCmpId\&quot;:\&quot;119:0;p\&quot;,\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCachePermsAndPrefs\&quot;,\&quot;time\&quot;:1633063149446,\&quot;page\&quot;:{},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:28955,\&quot;duration\&quot;:3585,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;navContainer:render\&quot;,\&quot;ts\&quot;:29257,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;one:appNavContainer\&quot;,\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;navContainer:afterRender\&quot;,\&quot;ts\&quot;:29305,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;one:appNavContainer\&quot;,\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;navContainer:create\&quot;,\&quot;ts\&quot;:29349,\&quot;context\&quot;:{\&quot;itemCount\&quot;:15},\&quot;owner\&quot;:\&quot;one:appNavContainer\&quot;,\&quot;duration\&quot;:22},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getScopeMaps\&quot;,\&quot;ts\&quot;:28955,\&quot;context\&quot;:{\&quot;times\&quot;:\&quot;SCC.getScopeMapsInternal():441\&quot;},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;duration\&quot;:3584},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;singlePaneWindowManager:contentSelected\&quot;,\&quot;ts\&quot;:32467,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:singlePaneWindowManager\&quot;,\&quot;duration\&quot;:14},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;pageHost:loadContent\&quot;,\&quot;ts\&quot;:32486,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:pageHost\&quot;,\&quot;duration\&quot;:18}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:30812,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:1,\&quot;auraXHRId\&quot;:1,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:65629,\&quot;xhrDuration\&quot;:2510,\&quot;xhrStall\&quot;:772,\&quot;startTime\&quot;:29382,\&quot;fetchStart\&quot;:29382,\&quot;requestStart\&quot;:30154,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:773,\&quot;transfer\&quot;:1737,\&quot;transferSize\&quot;:66207,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:236,\&quot;xhrDelay\&quot;:-1429},\&quot;duration\&quot;:1081},{\&quot;ts\&quot;:29388,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:3,\&quot;requestLength\&quot;:1022,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;169;a\&quot;],\&quot;requestId\&quot;:\&quot;293870000003087d02\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1242,\&quot;xhrDuration\&quot;:2995,\&quot;xhrStall\&quot;:1416,\&quot;startTime\&quot;:29388,\&quot;fetchStart\&quot;:29388,\&quot;requestStart\&quot;:30804,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:1417,\&quot;transfer\&quot;:1578,\&quot;transferSize\&quot;:1819,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:55,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:2996},{\&quot;ts\&quot;:29559,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:4,\&quot;requestLength\&quot;:1151,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;341;a\&quot;],\&quot;requestId\&quot;:\&quot;295590000004866e71\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:2025,\&quot;xhrDuration\&quot;:2878,\&quot;xhrStall\&quot;:1314,\&quot;startTime\&quot;:29560,\&quot;fetchStart\&quot;:29560,\&quot;requestStart\&quot;:30874,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:1316,\&quot;transfer\&quot;:1562,\&quot;transferSize\&quot;:2603,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:134,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:2881},{\&quot;ts\&quot;:29385,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:2,\&quot;requestLength\&quot;:1049,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;164;a\&quot;],\&quot;requestId\&quot;:\&quot;293830000002ca49af\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:7039,\&quot;xhrDuration\&quot;:3127,\&quot;xhrStall\&quot;:1230,\&quot;startTime\&quot;:29386,\&quot;fetchStart\&quot;:29386,\&quot;requestStart\&quot;:30616,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:1231,\&quot;transfer\&quot;:1896,\&quot;transferSize\&quot;:7617,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:501,\&quot;xhrDelay\&quot;:23},\&quot;duration\&quot;:3150}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:29169,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;302;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;flexipage:page\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.flexipage.components.page.FlexipageControllerV2/ACTION$getPage\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;params\&quot;:{\&quot;flexiPageDeveloperName\&quot;:\&quot;USCAN_Sales_UtilityBar\&quot;},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:19,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:183,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1637},{\&quot;ts\&quot;:28957,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;166;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;forceSearch:searchGDPCachePermsAndPrefs\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.sgdp.PermsAndPrefsCacheController/ACTION$getPermsAndPrefs\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:35,\&quot;enqueueWait\&quot;:388,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:3,\&quot;duration\&quot;:2951},{\&quot;ts\&quot;:28970,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;173;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;one:systemMessage\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.systemMessage.SystemMessageController/ACTION$getSystemMessages\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:35,\&quot;enqueueWait\&quot;:375,\&quot;serverTime\&quot;:{\&quot;total\&quot;:19,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:8,\&quot;duration\&quot;:2946},{\&quot;ts\&quot;:28991,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;191;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;one:favorites\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.favorites.FavoritesController/ACTION$getFavorites\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:5,\&quot;enqueueWait\&quot;:384,\&quot;serverTime\&quot;:{\&quot;total\&quot;:29,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:2926},{\&quot;ts\&quot;:29037,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;211;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:empApi\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.empApi.EmpApiController/ACTION$getEmpConfig\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:35,\&quot;enqueueWait\&quot;:308,\&quot;serverTime\&quot;:{\&quot;total\&quot;:1,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:2881},{\&quot;ts\&quot;:29039,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;215;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;uns:notifications\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.notifications.components.notifications.controller.NotificationsController/ACTION$getInitializationValues\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:5,\&quot;enqueueWait\&quot;:336,\&quot;serverTime\&quot;:{\&quot;total\&quot;:2,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:2880},{\&quot;ts\&quot;:29047,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;218;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordGlobalValueProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:35,\&quot;enqueueWait\&quot;:298,\&quot;serverTime\&quot;:{\&quot;total\&quot;:30,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2872},{\&quot;ts\&quot;:29052,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;227;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;one:header\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.header.HeaderController/ACTION$getSettings\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:35,\&quot;enqueueWait\&quot;:293,\&quot;serverTime\&quot;:{\&quot;total\&quot;:20,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:77,\&quot;duration\&quot;:2944},{\&quot;ts\&quot;:29306,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;326;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;one:appNavContainer\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.navigation.GlobalNavDropdownController/ACTION$getHasSeenAppNavDocked\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:35,\&quot;enqueueWait\&quot;:39,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:2691},{\&quot;ts\&quot;:29348,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;334;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:hostConfig\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.hostConfig.HostConfigController/ACTION$getConfigData\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:32,\&quot;serverTime\&quot;:{\&quot;total\&quot;:15,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:11,\&quot;duration\&quot;:2660},{\&quot;ts\&quot;:28959,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;169;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;forceSearch:assistant\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.assistant.AssistantController/ACTION$getSearchUIServerConfigs\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:43,\&quot;enqueueWait\&quot;:386,\&quot;serverTime\&quot;:{\&quot;total\&quot;:13,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:55,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3427},{\&quot;ts\&quot;:29558,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;341;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;laf:platformPageResolver\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getTabByNameAndApp\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:90,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:134,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2883}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:100,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;laf:pageHost\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:14},{\&quot;name\&quot;:\&quot;home:landing\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:15},{\&quot;name\&quot;:\&quot;isotope:headerButton\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:11},{\&quot;name\&quot;:\&quot;force:headerButton\&quot;,\&quot;createCount\&quot;:4,\&quot;createTimeTotal\&quot;:28},{\&quot;name\&quot;:\&quot;ui:menu\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:17}]}],\&quot;lds\&quot;:[{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;runtime-perf\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:32540,\&quot;context\&quot;:{\&quot;storeIngest\&quot;:1,\&quot;storeBroadcast\&quot;:1}}]},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-fetch-getScopeMaps\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1633063146493,\&quot;cacheHit\&quot;:false,\&quot;actionId\&quot;:\&quot;164;a\&quot;,\&quot;fetchedScopeMaps\&quot;:9,\&quot;tEnd\&quot;:1633063150078,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getScopeMaps\&quot;,\&quot;etTransaction\&quot;:3585,\&quot;requestId\&quot;:\&quot;forceSearchSearchGDPCacheScopes:125:0;p\&quot;,\&quot;requestCmp\&quot;:\&quot;forceSearchSearchGDPCacheScopes\&quot;,\&quot;requestCmpId\&quot;:\&quot;125:0;p\&quot;,\&quot;params\&quot;:[\&quot;scopeTypes:SMART_SCOPE\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;time\&quot;:1633063150078,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:32097,\&quot;duration\&quot;:1174,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;singlePaneWindowManager:contentSelected\&quot;,\&quot;ts\&quot;:32467,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:singlePaneWindowManager\&quot;,\&quot;duration\&quot;:14},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;pageHost:loadContent\&quot;,\&quot;ts\&quot;:32486,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:pageHost\&quot;,\&quot;duration\&quot;:18},{\&quot;ns\&quot;:\&quot;flexipageInfo\&quot;,\&quot;name\&quot;:\&quot;info\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:32574,\&quot;context\&quot;:{\&quot;flexipageType\&quot;:\&quot;UtilityBar\&quot;,\&quot;isCustomTemplate\&quot;:false,\&quot;templateName\&quot;:\&quot;one:utilityBarTemplateDesktop\&quot;,\&quot;numVisibleRegions\&quot;:1,\&quot;flexipageRenderer\&quot;:\&quot;Aura\&quot;,\&quot;isCustom\&quot;:true,\&quot;numBackgroundRegions\&quot;:1,\&quot;flexipageName\&quot;:\&quot;0M00c00000000IZCAY\&quot;},\&quot;owner\&quot;:\&quot;flexipage:page\&quot;},{\&quot;ns\&quot;:\&quot;socialPhotoBatchAction444;a\&quot;,\&quot;name\&quot;:\&quot;SocialPhotoBatchAction is successful\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:33271,\&quot;context\&quot;:null,\&quot;owner\&quot;:\&quot;force:socialPhoto\&quot;}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:32097,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:5,\&quot;requestLength\&quot;:1123,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;444;a\&quot;],\&quot;requestId\&quot;:\&quot;32097000000460762e\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1560,\&quot;xhrDuration\&quot;:1170,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:32097,\&quot;fetchStart\&quot;:32097,\&quot;requestStart\&quot;:32101,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:5,\&quot;transfer\&quot;:1165,\&quot;transferSize\&quot;:2137,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:42,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:1171}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:98,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;laf:pageHost\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:14},{\&quot;name\&quot;:\&quot;home:landing\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:15},{\&quot;name\&quot;:\&quot;one:fp0M00c00000000IZCAY__pageWithoutSobject__1624569623000\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:54},{\&quot;name\&quot;:\&quot;one:utilityBarItem\&quot;,\&quot;createCount\&quot;:8,\&quot;createTimeTotal\&quot;:12},{\&quot;name\&quot;:\&quot;force:dockingPanelOverflow\&quot;,\&quot;createCount\&quot;:2,\&quot;createTimeTotal\&quot;:2}]}]},\&quot;owner\&quot;:\&quot;force:socialPhoto\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-socialPhotoBatchAction\&quot;,\&quot;attributes\&quot;:{\&quot;keyPrefixes\&quot;:[\&quot;005\&quot;],\&quot;transactionId\&quot;:\&quot;444;a\&quot;,\&quot;numProcessedIds\&quot;:1,\&quot;usageInfo\&quot;:{\&quot;sAction\&quot;:\&quot;resolvePhotos\&quot;,\&quot;gusTeamId\&quot;:\&quot;a00B0000003ZxZGIA0\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:newDefs\&quot;,\&quot;ts\&quot;:34144,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;flexipage:page\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;newDefs\&quot;,\&quot;attributes\&quot;:{\&quot;componentDefs\&quot;:[\&quot;markup://home:fp0M00c000000k9peCAA__pageWithoutSobject__1611156436000\&quot;,\&quot;markup://flexipage:runtimeBackgroundComponentsWrapper\&quot;,\&quot;markup://flexipage:runtimeComponent\&quot;],\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:29344,\&quot;duration\&quot;:5042,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;navContainer:create\&quot;,\&quot;ts\&quot;:29349,\&quot;context\&quot;:{\&quot;itemCount\&quot;:15},\&quot;owner\&quot;:\&quot;one:appNavContainer\&quot;,\&quot;duration\&quot;:22},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;singlePaneWindowManager:contentSelected\&quot;,\&quot;ts\&quot;:32467,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:singlePaneWindowManager\&quot;,\&quot;duration\&quot;:14},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;pageHost:loadContent\&quot;,\&quot;ts\&quot;:32486,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:pageHost\&quot;,\&quot;duration\&quot;:18},{\&quot;ns\&quot;:\&quot;flexipageInfo\&quot;,\&quot;name\&quot;:\&quot;info\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:32574,\&quot;context\&quot;:{\&quot;flexipageType\&quot;:\&quot;UtilityBar\&quot;,\&quot;isCustomTemplate\&quot;:false,\&quot;templateName\&quot;:\&quot;one:utilityBarTemplateDesktop\&quot;,\&quot;numVisibleRegions\&quot;:1,\&quot;flexipageRenderer\&quot;:\&quot;Aura\&quot;,\&quot;isCustom\&quot;:true,\&quot;numBackgroundRegions\&quot;:1,\&quot;flexipageName\&quot;:\&quot;0M00c00000000IZCAY\&quot;},\&quot;owner\&quot;:\&quot;flexipage:page\&quot;},{\&quot;ns\&quot;:\&quot;socialPhotoBatchAction444;a\&quot;,\&quot;name\&quot;:\&quot;SocialPhotoBatchAction is successful\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:33271,\&quot;context\&quot;:null,\&quot;owner\&quot;:\&quot;force:socialPhoto\&quot;}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:30812,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:1,\&quot;auraXHRId\&quot;:1,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:65629,\&quot;xhrDuration\&quot;:2510,\&quot;xhrStall\&quot;:772,\&quot;startTime\&quot;:29382,\&quot;fetchStart\&quot;:29382,\&quot;requestStart\&quot;:30154,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:773,\&quot;transfer\&quot;:1737,\&quot;transferSize\&quot;:66207,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:236,\&quot;xhrDelay\&quot;:-1429},\&quot;duration\&quot;:1081},{\&quot;ts\&quot;:29388,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:3,\&quot;requestLength\&quot;:1022,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;169;a\&quot;],\&quot;requestId\&quot;:\&quot;293870000003087d02\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1242,\&quot;xhrDuration\&quot;:2995,\&quot;xhrStall\&quot;:1416,\&quot;startTime\&quot;:29388,\&quot;fetchStart\&quot;:29388,\&quot;requestStart\&quot;:30804,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:1417,\&quot;transfer\&quot;:1578,\&quot;transferSize\&quot;:1819,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:55,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:2996},{\&quot;ts\&quot;:29559,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:4,\&quot;requestLength\&quot;:1151,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;341;a\&quot;],\&quot;requestId\&quot;:\&quot;295590000004866e71\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:2025,\&quot;xhrDuration\&quot;:2878,\&quot;xhrStall\&quot;:1314,\&quot;startTime\&quot;:29560,\&quot;fetchStart\&quot;:29560,\&quot;requestStart\&quot;:30874,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:1316,\&quot;transfer\&quot;:1562,\&quot;transferSize\&quot;:2603,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:134,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:2881},{\&quot;ts\&quot;:29385,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:2,\&quot;requestLength\&quot;:1049,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;164;a\&quot;],\&quot;requestId\&quot;:\&quot;293830000002ca49af\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:7039,\&quot;xhrDuration\&quot;:3127,\&quot;xhrStall\&quot;:1230,\&quot;startTime\&quot;:29386,\&quot;fetchStart\&quot;:29386,\&quot;requestStart\&quot;:30616,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:1231,\&quot;transfer\&quot;:1896,\&quot;transferSize\&quot;:7617,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:501,\&quot;xhrDelay\&quot;:23},\&quot;duration\&quot;:3150},{\&quot;ts\&quot;:32097,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:5,\&quot;requestLength\&quot;:1123,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;444;a\&quot;],\&quot;requestId\&quot;:\&quot;32097000000460762e\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1560,\&quot;xhrDuration\&quot;:1170,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:32097,\&quot;fetchStart\&quot;:32097,\&quot;requestStart\&quot;:32101,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:5,\&quot;transfer\&quot;:1165,\&quot;transferSize\&quot;:2137,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:42,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:1171},{\&quot;ts\&quot;:32507,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:7,\&quot;requestLength\&quot;:1024,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;510;a\&quot;],\&quot;requestId\&quot;:\&quot;3250700000056d0aab\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1476,\&quot;xhrDuration\&quot;:1465,\&quot;xhrStall\&quot;:13,\&quot;startTime\&quot;:32508,\&quot;fetchStart\&quot;:32508,\&quot;requestStart\&quot;:32521,\&quot;dns\&quot;:5,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:14,\&quot;transfer\&quot;:1451,\&quot;transferSize\&quot;:2054,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:269,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1467},{\&quot;ts\&quot;:32493,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:6,\&quot;requestLength\&quot;:1074,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;499;a\&quot;],\&quot;requestId\&quot;:\&quot;324930000009a00897\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:68880,\&quot;xhrDuration\&quot;:1646,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:32494,\&quot;fetchStart\&quot;:32494,\&quot;requestStart\&quot;:32497,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:1642,\&quot;transferSize\&quot;:69462,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:173,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1648}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:29380,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;166;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:3,\&quot;duration\&quot;:2528},{\&quot;ts\&quot;:29380,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;173;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:19,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:8,\&quot;duration\&quot;:2536},{\&quot;ts\&quot;:29380,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;191;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:29,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:2537},{\&quot;ts\&quot;:29380,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;211;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:1,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:2538},{\&quot;ts\&quot;:29380,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;215;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:2,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:2539},{\&quot;ts\&quot;:29380,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;218;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:30,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2539},{\&quot;ts\&quot;:29380,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;227;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:20,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:77,\&quot;duration\&quot;:2616},{\&quot;ts\&quot;:29380,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;326;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:2617},{\&quot;ts\&quot;:29348,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;334;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:hostConfig\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.hostConfig.HostConfigController/ACTION$getConfigData\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:32,\&quot;serverTime\&quot;:{\&quot;total\&quot;:15,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:11,\&quot;duration\&quot;:2660},{\&quot;ts\&quot;:29388,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;169;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:13,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:55,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2998},{\&quot;ts\&quot;:29558,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;341;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;laf:platformPageResolver\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getTabByNameAndApp\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:90,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:134,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2883},{\&quot;ts\&quot;:29385,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;164;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:442,\&quot;db\&quot;:19,\&quot;xhrServerTime\&quot;:501,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:5,\&quot;duration\&quot;:3156},{\&quot;ts\&quot;:32097,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;444;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:socialPhotoController\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.socialPhoto.SocialPhotoController/ACTION$resolvePhotos\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:2,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:42,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:3,\&quot;duration\&quot;:1175},{\&quot;ts\&quot;:32503,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;510;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;home:landing\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.home.impl.landing.LandingController/ACTION$populateTodayGVP\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:4,\&quot;serverTime\&quot;:{\&quot;total\&quot;:41,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:269,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1473},{\&quot;ts\&quot;:32493,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;499;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;flexipage:page\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.flexipage.components.page.FlexipageControllerV2/ACTION$getPage\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;params\&quot;:{\&quot;flexiPageDeveloperName\&quot;:\&quot;USCAN_Home\&quot;},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:33,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:173,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:1653}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:167,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;one:fp0M00c00000000IZCAY__pageWithoutSobject__1624569623000\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:54},{\&quot;name\&quot;:\&quot;laf:pageHost\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:14},{\&quot;name\&quot;:\&quot;force:headerButton\&quot;,\&quot;createCount\&quot;:4,\&quot;createTimeTotal\&quot;:28},{\&quot;name\&quot;:\&quot;ui:menu\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:17},{\&quot;name\&quot;:\&quot;home:landing\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:15}]}],\&quot;lds\&quot;:[{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;runtime-perf\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:34387,\&quot;context\&quot;:{\&quot;storeIngest\&quot;:1,\&quot;storeBroadcast\&quot;:1}}]},\&quot;owner\&quot;:\&quot;laf:appLayoutHost\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;loadClientLibrary\&quot;,\&quot;attributes\&quot;:{\&quot;library\&quot;:\&quot;canvasrendering\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:37796,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;flexipage:runtimeComponent\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;${c_clkRecordId}AAA\&quot;,\&quot;recordType\&quot;:\&quot;User\&quot;,\&quot;recordTypeSetInClient\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;},\&quot;sequence\&quot;:4,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;home:landing\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/page/home\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:newDefs\&quot;,\&quot;ts\&quot;:37900,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;force:recordLayoutList\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;newDefs\&quot;,\&quot;attributes\&quot;:{\&quot;componentDefs\&quot;:[\&quot;layout://rl-Task-VIEW-COMPACT----runtime_sales_activities_todayTaskContainer-_1-0-79536141797a5174614a4532476a687777554d336d413d3d.c\&quot;],\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:newDefs\&quot;,\&quot;ts\&quot;:37960,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;home:topDealsCardDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;newDefs\&quot;,\&quot;attributes\&quot;:{\&quot;componentDefs\&quot;:[\&quot;layout://rl-Opportunity-VIEW-COMPACT----home_topDealsContainer-_1-0-517a41784a2f6466555677585a4c794b5856416456773d3d.c\&quot;],\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:39236,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;flexipage:runtimeComponent\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;${c_clkRecordId}AAA\&quot;,\&quot;recordType\&quot;:\&quot;User\&quot;,\&quot;recordTypeSetInClient\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;},\&quot;sequence\&quot;:5,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;home:landing\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/page/home\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:newDefs\&quot;,\&quot;ts\&quot;:40708,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;flexipage:recentItems\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;newDefs\&quot;,\&quot;attributes\&quot;:{\&quot;componentDefs\&quot;:[\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;],\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:42039,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;componentTracker\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;default\&quot;,\&quot;scope\&quot;:\&quot;component\&quot;,\&quot;context\&quot;:{\&quot;devNameOrId\&quot;:[\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;runtime_sales_activities:todayTaskContainer\&quot;,\&quot;flexipage:recentItems\&quot;,\&quot;flexipage:richText\&quot;,\&quot;flexipage:richText\&quot;,\&quot;home:recentRecordContainer\&quot;,\&quot;home:topDealsContainer\&quot;,\&quot;flexipage:richText\&quot;,\&quot;home:assistant\&quot;,\&quot;flexipage:richText\&quot;]}},\&quot;sequence\&quot;:6,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;home:landing\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/page/home\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPageView&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:pageView\&quot;,\&quot;ts\&quot;:29556,\&quot;duration\&quot;:12484,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;singlePaneWindowManager:contentSelected\&quot;,\&quot;ts\&quot;:32467,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:singlePaneWindowManager\&quot;,\&quot;duration\&quot;:14},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;pageHost:loadContent\&quot;,\&quot;ts\&quot;:32486,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:pageHost\&quot;,\&quot;duration\&quot;:18},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38576,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38581,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38584,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38587,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38590,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38593,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38596,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38599,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38603,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38605,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38609,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38612,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38616,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38619,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38622,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.38795\&quot;,\&quot;ts\&quot;:38796,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;5:815;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT----home_topDealsContainer-_1-0-517a41784a2f6466555677585a4c794b5856416456773d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:2},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41594\&quot;,\&quot;ts\&quot;:41594,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:887;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:10},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41625\&quot;,\&quot;ts\&quot;:41625,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:889;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:7},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41648\&quot;,\&quot;ts\&quot;:41648,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:891;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:6},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41672\&quot;,\&quot;ts\&quot;:41672,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:893;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:6},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41697\&quot;,\&quot;ts\&quot;:41697,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:895;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:6},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41721\&quot;,\&quot;ts\&quot;:41721,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:897;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:6},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41747\&quot;,\&quot;ts\&quot;:41747,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:899;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:7},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41781\&quot;,\&quot;ts\&quot;:41781,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:901;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:8},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41805\&quot;,\&quot;ts\&quot;:41805,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:903;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:7},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41828\&quot;,\&quot;ts\&quot;:41828,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:905;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:7},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41853\&quot;,\&quot;ts\&quot;:41853,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:907;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:5},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41879\&quot;,\&quot;ts\&quot;:41879,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:909;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:9},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41905\&quot;,\&quot;ts\&quot;:41905,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:911;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:6},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41926\&quot;,\&quot;ts\&quot;:41926,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:913;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:8},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41953\&quot;,\&quot;ts\&quot;:41953,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:915;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:6},{\&quot;ns\&quot;:\&quot;flexipageInfo\&quot;,\&quot;name\&quot;:\&quot;info\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:32574,\&quot;context\&quot;:{\&quot;flexipageType\&quot;:\&quot;UtilityBar\&quot;,\&quot;isCustomTemplate\&quot;:false,\&quot;templateName\&quot;:\&quot;one:utilityBarTemplateDesktop\&quot;,\&quot;numVisibleRegions\&quot;:1,\&quot;flexipageRenderer\&quot;:\&quot;Aura\&quot;,\&quot;isCustom\&quot;:true,\&quot;numBackgroundRegions\&quot;:1,\&quot;flexipageName\&quot;:\&quot;0M00c00000000IZCAY\&quot;},\&quot;owner\&quot;:\&quot;flexipage:page\&quot;},{\&quot;ns\&quot;:\&quot;flexipageInfo\&quot;,\&quot;name\&quot;:\&quot;info\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:36400,\&quot;context\&quot;:{\&quot;flexipageType\&quot;:\&quot;HomePage\&quot;,\&quot;isCustomTemplate\&quot;:false,\&quot;templateName\&quot;:\&quot;home:desktopTemplate\&quot;,\&quot;numVisibleRegions\&quot;:4,\&quot;flexipageRenderer\&quot;:\&quot;Aura\&quot;,\&quot;isCustom\&quot;:true,\&quot;numBackgroundRegions\&quot;:0,\&quot;flexipageName\&quot;:\&quot;0M00c000000k9peCAA\&quot;},\&quot;owner\&quot;:\&quot;flexipage:page\&quot;},{\&quot;ns\&quot;:\&quot;socialPhotoBatchAction444;a\&quot;,\&quot;name\&quot;:\&quot;SocialPhotoBatchAction is successful\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:33271,\&quot;context\&quot;:null,\&quot;owner\&quot;:\&quot;force:socialPhoto\&quot;},{\&quot;ns\&quot;:\&quot;EinsteinComponent\&quot;,\&quot;name\&quot;:\&quot;HomeAssistant\&quot;,\&quot;ts\&quot;:36535,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;home:assistant\&quot;,\&quot;duration\&quot;:72},{\&quot;ns\&quot;:\&quot;Assistant\&quot;,\&quot;name\&quot;:\&quot;Render\&quot;,\&quot;ts\&quot;:36585,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;home:assistant\&quot;,\&quot;duration\&quot;:5},{\&quot;ns\&quot;:\&quot;Assistant\&quot;,\&quot;name\&quot;:\&quot;Rerender\&quot;,\&quot;ts\&quot;:39469,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;home:assistant\&quot;,\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;formula\&quot;,\&quot;name\&quot;:\&quot;evaluate\&quot;,\&quot;ts\&quot;:37800,\&quot;context\&quot;:{\&quot;technology\&quot;:\&quot;Aura\&quot;,\&quot;formulaSize\&quot;:137,\&quot;feature\&quot;:\&quot;EXPRESSIONS\&quot;},\&quot;owner\&quot;:\&quot;flexipage:runtimeComponent\&quot;,\&quot;duration\&quot;:18},{\&quot;ns\&quot;:\&quot;formula\&quot;,\&quot;name\&quot;:\&quot;evaluate\&quot;,\&quot;ts\&quot;:39657,\&quot;context\&quot;:{\&quot;technology\&quot;:\&quot;Aura\&quot;,\&quot;formulaSize\&quot;:139,\&quot;feature\&quot;:\&quot;EXPRESSIONS\&quot;},\&quot;owner\&quot;:\&quot;flexipage:runtimeComponent\&quot;,\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41964,\&quot;context\&quot;:{\&quot;itemCount\&quot;:1}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:2}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:3}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:4}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:5}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:6}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:7}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:8}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:9}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:10}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:11}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:12}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:13}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:14}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:15}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:30812,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:1,\&quot;auraXHRId\&quot;:1,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:65629,\&quot;xhrDuration\&quot;:2510,\&quot;xhrStall\&quot;:772,\&quot;startTime\&quot;:29382,\&quot;fetchStart\&quot;:29382,\&quot;requestStart\&quot;:30154,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:773,\&quot;transfer\&quot;:1737,\&quot;transferSize\&quot;:66207,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:236,\&quot;xhrDelay\&quot;:-1429},\&quot;duration\&quot;:1081},{\&quot;ts\&quot;:29559,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:4,\&quot;requestLength\&quot;:1151,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;341;a\&quot;],\&quot;requestId\&quot;:\&quot;295590000004866e71\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:2025,\&quot;xhrDuration\&quot;:2878,\&quot;xhrStall\&quot;:1314,\&quot;startTime\&quot;:29560,\&quot;fetchStart\&quot;:29560,\&quot;requestStart\&quot;:30874,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:1316,\&quot;transfer\&quot;:1562,\&quot;transferSize\&quot;:2603,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:134,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:2881},{\&quot;ts\&quot;:32097,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:5,\&quot;requestLength\&quot;:1123,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;444;a\&quot;],\&quot;requestId\&quot;:\&quot;32097000000460762e\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1560,\&quot;xhrDuration\&quot;:1170,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:32097,\&quot;fetchStart\&quot;:32097,\&quot;requestStart\&quot;:32101,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:5,\&quot;transfer\&quot;:1165,\&quot;transferSize\&quot;:2137,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:42,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:1171},{\&quot;ts\&quot;:32507,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:7,\&quot;requestLength\&quot;:1024,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;510;a\&quot;],\&quot;requestId\&quot;:\&quot;3250700000056d0aab\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1476,\&quot;xhrDuration\&quot;:1465,\&quot;xhrStall\&quot;:13,\&quot;startTime\&quot;:32508,\&quot;fetchStart\&quot;:32508,\&quot;requestStart\&quot;:32521,\&quot;dns\&quot;:5,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:14,\&quot;transfer\&quot;:1451,\&quot;transferSize\&quot;:2054,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:269,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1467},{\&quot;ts\&quot;:32493,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:6,\&quot;requestLength\&quot;:1074,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;499;a\&quot;],\&quot;requestId\&quot;:\&quot;324930000009a00897\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:68880,\&quot;xhrDuration\&quot;:1646,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:32494,\&quot;fetchStart\&quot;:32494,\&quot;requestStart\&quot;:32497,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:1642,\&quot;transferSize\&quot;:69462,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:173,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1648},{\&quot;ts\&quot;:29575,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:0,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:5025,\&quot;startTime\&quot;:29576,\&quot;fetchStart\&quot;:32763,\&quot;serverTime\&quot;:50,\&quot;redirect\&quot;:3187,\&quot;requestStart\&quot;:32769,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:694369,\&quot;encodedBodySize\&quot;:693530,\&quot;decodedBodySize\&quot;:693530,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:3194,\&quot;transfer\&quot;:1831,\&quot;defs\&quot;:[\&quot;markup://forceSearch:assistantDialogContainer\&quot;,\&quot;markup://lightning:iconSvgTemplatesUtility\&quot;],\&quot;xhrDelay\&quot;:11},\&quot;duration\&quot;:5036},{\&quot;ts\&quot;:32646,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:2,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:2988,\&quot;startTime\&quot;:32647,\&quot;fetchStart\&quot;:33978,\&quot;serverTime\&quot;:10,\&quot;redirect\&quot;:1331,\&quot;requestStart\&quot;:33981,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:2767,\&quot;encodedBodySize\&quot;:1937,\&quot;decodedBodySize\&quot;:1937,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:1335,\&quot;transfer\&quot;:1653,\&quot;defs\&quot;:[\&quot;markup://one:utilityBarContent\&quot;],\&quot;xhrDelay\&quot;:4},\&quot;duration\&quot;:2992},{\&quot;ts\&quot;:34153,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:3,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:2215,\&quot;startTime\&quot;:34153,\&quot;fetchStart\&quot;:34153,\&quot;serverTime\&quot;:62,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:34156,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:547338,\&quot;encodedBodySize\&quot;:546499,\&quot;decodedBodySize\&quot;:546499,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:3,\&quot;transfer\&quot;:2212,\&quot;defs\&quot;:[\&quot;markup://flexipage:card\&quot;,\&quot;markup://flexipage:recentItems\&quot;,\&quot;markup://force:actionRow\&quot;,\&quot;markup://force:baseCard\&quot;,\&quot;markup://force:baseCardActionTriggered\&quot;,\&quot;markup://force:card\&quot;,\&quot;markup://force:emptyState\&quot;,\&quot;markup://force:menuTriggerIcon\&quot;,\&quot;markup://force:moreAction\&quot;],\&quot;xhrDelay\&quot;:30},\&quot;duration\&quot;:2245},{\&quot;ts\&quot;:34769,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:4,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:1943,\&quot;startTime\&quot;:34771,\&quot;fetchStart\&quot;:36043,\&quot;serverTime\&quot;:8,\&quot;redirect\&quot;:1272,\&quot;requestStart\&quot;:36045,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:1398,\&quot;encodedBodySize\&quot;:570,\&quot;decodedBodySize\&quot;:570,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:1275,\&quot;transfer\&quot;:668,\&quot;defs\&quot;:[\&quot;markup://lightning:auraDynamic\&quot;],\&quot;xhrDelay\&quot;:5},\&quot;duration\&quot;:1948},{\&quot;ts\&quot;:36405,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:8,\&quot;requestLength\&quot;:1153,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;701;a\&quot;],\&quot;requestId\&quot;:\&quot;364050000003529a9a\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:2241,\&quot;xhrDuration\&quot;:1387,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:36405,\&quot;fetchStart\&quot;:36405,\&quot;requestStart\&quot;:36408,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:1383,\&quot;transferSize\&quot;:2818,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:86,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1389},{\&quot;ts\&quot;:36429,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:9,\&quot;requestLength\&quot;:1107,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;716;a\&quot;],\&quot;requestId\&quot;:\&quot;364290000001ee98a2\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1230,\&quot;xhrDuration\&quot;:1378,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:36430,\&quot;fetchStart\&quot;:36430,\&quot;requestStart\&quot;:36433,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:3,\&quot;transfer\&quot;:1375,\&quot;transferSize\&quot;:1808,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:152,\&quot;xhrDelay\&quot;:46},\&quot;duration\&quot;:1424},{\&quot;ts\&quot;:36435,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:10,\&quot;requestLength\&quot;:1277,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;719;a\&quot;],\&quot;requestId\&quot;:\&quot;36435000000376e2d6\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:27173,\&quot;xhrDuration\&quot;:1460,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:36436,\&quot;fetchStart\&quot;:36436,\&quot;requestStart\&quot;:36439,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:3,\&quot;transfer\&quot;:1457,\&quot;transferSize\&quot;:27750,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:94,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:1463},{\&quot;ts\&quot;:36520,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:13,\&quot;requestLength\&quot;:1144,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;815;a\&quot;],\&quot;requestId\&quot;:\&quot;36520000000b7ab208\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:22367,\&quot;xhrDuration\&quot;:1434,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:36521,\&quot;fetchStart\&quot;:36521,\&quot;requestStart\&quot;:36524,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:1430,\&quot;transferSize\&quot;:22945,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:170,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:1437},{\&quot;ts\&quot;:36495,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:12,\&quot;requestLength\&quot;:1069,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;787;a\&quot;],\&quot;requestId\&quot;:\&quot;36495000000cdf9cf3\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:3336,\&quot;xhrDuration\&quot;:1517,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:36496,\&quot;fetchStart\&quot;:36496,\&quot;requestStart\&quot;:36499,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:3,\&quot;transfer\&quot;:1514,\&quot;transferSize\&quot;:3914,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:354,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:1520},{\&quot;ts\&quot;:36454,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:11,\&quot;requestLength\&quot;:1152,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;745;a\&quot;],\&quot;requestId\&quot;:\&quot;36454000000050fd47\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:15154,\&quot;xhrDuration\&quot;:2112,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:36454,\&quot;fetchStart\&quot;:36454,\&quot;requestStart\&quot;:36458,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:2108,\&quot;transferSize\&quot;:15732,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:898,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:2113},{\&quot;ts\&quot;:37902,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:5,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:834,\&quot;startTime\&quot;:37902,\&quot;fetchStart\&quot;:37902,\&quot;serverTime\&quot;:23,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:37907,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:161806,\&quot;encodedBodySize\&quot;:160974,\&quot;decodedBodySize\&quot;:160974,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:32,\&quot;transfer\&quot;:802,\&quot;defs\&quot;:[\&quot;markup://force:outputAddress\&quot;,\&quot;markup://force:outputField\&quot;,\&quot;markup://force:outputFieldInternal\&quot;,\&quot;markup://force:outputFile\&quot;,\&quot;markup://force:outputImage\&quot;,\&quot;markup://force:outputLocation\&quot;,\&quot;markup://force:outputName\&quot;,\&quot;markup://force:outputNameForUser\&quot;,\&quot;markup://force:outputNoteorAttachment\&quot;],\&quot;xhrDelay\&quot;:8},\&quot;duration\&quot;:842},{\&quot;ts\&quot;:37798,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:14,\&quot;requestLength\&quot;:1652,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;830;a\&quot;,\&quot;833;a\&quot;,\&quot;837;a\&quot;],\&quot;requestId\&quot;:\&quot;37798000000abbc39f\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:4559,\&quot;xhrDuration\&quot;:1433,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:37799,\&quot;fetchStart\&quot;:37799,\&quot;requestStart\&quot;:37802,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:1429,\&quot;transferSize\&quot;:5137,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:125,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:1436},{\&quot;ts\&quot;:38633,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:15,\&quot;requestLength\&quot;:33236,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;887;a\&quot;,\&quot;889;a\&quot;,\&quot;891;a\&quot;,\&quot;893;a\&quot;,\&quot;895;a\&quot;,\&quot;897;a\&quot;,\&quot;899;a\&quot;,\&quot;901;a\&quot;,\&quot;903;a\&quot;,\&quot;905;a\&quot;,\&quot;907;a\&quot;,\&quot;909;a\&quot;,\&quot;911;a\&quot;,\&quot;913;a\&quot;,\&quot;915;a\&quot;],\&quot;requestId\&quot;:\&quot;3863300000034a4430\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:51238,\&quot;xhrDuration\&quot;:2070,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:38635,\&quot;fetchStart\&quot;:38635,\&quot;requestStart\&quot;:38638,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:2066,\&quot;transferSize\&quot;:51816,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:368,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:2073},{\&quot;ts\&quot;:40711,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:6,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:849,\&quot;startTime\&quot;:40711,\&quot;fetchStart\&quot;:40711,\&quot;serverTime\&quot;:12,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:40715,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:28255,\&quot;encodedBodySize\&quot;:27424,\&quot;decodedBodySize\&quot;:27424,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:845,\&quot;defs\&quot;:[\&quot;markup://flexipage:listRecord\&quot;,\&quot;markup://flexipage:recentItemStencil\&quot;,\&quot;markup://force:listRecord\&quot;],\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:852}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:29558,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;341;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;laf:platformPageResolver\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getTabByNameAndApp\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:90,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:134,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2883},{\&quot;ts\&quot;:32097,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;444;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:socialPhotoController\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.socialPhoto.SocialPhotoController/ACTION$resolvePhotos\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:2,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:42,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:3,\&quot;duration\&quot;:1175},{\&quot;ts\&quot;:32503,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;510;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;home:landing\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.home.impl.landing.LandingController/ACTION$populateTodayGVP\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:4,\&quot;serverTime\&quot;:{\&quot;total\&quot;:41,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:269,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1473},{\&quot;ts\&quot;:32493,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;499;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;flexipage:page\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.flexipage.components.page.FlexipageControllerV2/ACTION$getPage\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;params\&quot;:{\&quot;flexiPageDeveloperName\&quot;:\&quot;USCAN_Home\&quot;},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:33,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:173,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:1653},{\&quot;ts\&quot;:36405,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;701;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordGlobalValueProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:44,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:86,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1393},{\&quot;ts\&quot;:36429,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;716;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_sales_activities:todayTasksCardDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.today.impl.components.today.taskContainer.TodayTasksCardDataManagerController/ACTION$getTasks\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;params\&quot;:{\&quot;limit\&quot;:5},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:114,\&quot;db\&quot;:4,\&quot;xhrServerTime\&quot;:152,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:21,\&quot;duration\&quot;:1446},{\&quot;ts\&quot;:36435,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;719;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ComponentController/ACTION$getComponent\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;params\&quot;:{\&quot;name\&quot;:\&quot;markup://force:listTemplate\&quot;},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:45,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:94,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:1466},{\&quot;ts\&quot;:36520,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;815;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;home:topDealsCardDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.home.impl.topDealsCardDataProvider.TopDealsCardDataProviderController/ACTION$getFilterListViewRecords\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:112,\&quot;db\&quot;:10,\&quot;xhrServerTime\&quot;:169,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:1441},{\&quot;ts\&quot;:36495,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;787;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;home:recentRecordContainer\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.home.impl.recentRecordContainer.RecentRecordContainerController/ACTION$getRecords\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:315,\&quot;db\&quot;:47,\&quot;xhrServerTime\&quot;:354,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:75,\&quot;duration\&quot;:1596},{\&quot;ts\&quot;:36454,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;745;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;flexipage:recentItems\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.flexipage.components.recentitems.FlexipageRecentItemsController/ACTION$getResponse\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:857,\&quot;db\&quot;:316,\&quot;xhrServerTime\&quot;:897,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:64,\&quot;duration\&quot;:2177},{\&quot;ts\&quot;:36535,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;830;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;home:assistant\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.home.impl.assistant.AssistantController/ACTION$getAssistantCardData\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1260,\&quot;enqueueWait\&quot;:3,\&quot;serverTime\&quot;:{\&quot;total\&quot;:43,\&quot;db\&quot;:8,\&quot;xhrServerTime\&quot;:125,\&quot;boxCarCount\&quot;:3},\&quot;callbackTime\&quot;:228,\&quot;duration\&quot;:2932},{\&quot;ts\&quot;:36537,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;833;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordGlobalValueProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1260,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:40,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:125,\&quot;boxCarCount\&quot;:3},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2930},{\&quot;ts\&quot;:36917,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;837;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;one:systemMessage\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.systemMessage.SystemMessageController/ACTION$getSystemMessages\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:880,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:2,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:125,\&quot;boxCarCount\&quot;:3},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:2552},{\&quot;ts\&quot;:38579,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;887;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:53,\&quot;serverTime\&quot;:{\&quot;total\&quot;:57,\&quot;db\&quot;:8,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:2130},{\&quot;ts\&quot;:38583,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;889;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:49,\&quot;serverTime\&quot;:{\&quot;total\&quot;:12,\&quot;db\&quot;:6,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2126},{\&quot;ts\&quot;:38586,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;891;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:46,\&quot;serverTime\&quot;:{\&quot;total\&quot;:12,\&quot;db\&quot;:6,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2123},{\&quot;ts\&quot;:38589,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;893;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:43,\&quot;serverTime\&quot;:{\&quot;total\&quot;:13,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2120},{\&quot;ts\&quot;:38591,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;895;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:41,\&quot;serverTime\&quot;:{\&quot;total\&quot;:12,\&quot;db\&quot;:6,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2118},{\&quot;ts\&quot;:38594,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;897;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:38,\&quot;serverTime\&quot;:{\&quot;total\&quot;:12,\&quot;db\&quot;:6,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2115},{\&quot;ts\&quot;:38597,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;899;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:36,\&quot;serverTime\&quot;:{\&quot;total\&quot;:12,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2112},{\&quot;ts\&quot;:38601,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;901;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:32,\&quot;serverTime\&quot;:{\&quot;total\&quot;:11,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2108},{\&quot;ts\&quot;:38604,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;903;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:29,\&quot;serverTime\&quot;:{\&quot;total\&quot;:11,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2105},{\&quot;ts\&quot;:38607,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;905;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:26,\&quot;serverTime\&quot;:{\&quot;total\&quot;:12,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2102},{\&quot;ts\&quot;:38611,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;907;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:22,\&quot;serverTime\&quot;:{\&quot;total\&quot;:11,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2098},{\&quot;ts\&quot;:38614,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;909;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:19,\&quot;serverTime\&quot;:{\&quot;total\&quot;:12,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2095},{\&quot;ts\&quot;:38617,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;911;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:16,\&quot;serverTime\&quot;:{\&quot;total\&quot;:11,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2093},{\&quot;ts\&quot;:38620,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;913;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:13,\&quot;serverTime\&quot;:{\&quot;total\&quot;:12,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2090},{\&quot;ts\&quot;:38624,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;915;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:9,\&quot;serverTime\&quot;:{\&quot;total\&quot;:11,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2086}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:1383,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;,\&quot;createCount\&quot;:15,\&quot;createTimeTotal\&quot;:240},{\&quot;name\&quot;:\&quot;ui:virtualList\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:179},{\&quot;name\&quot;:\&quot;home:fp0M00c000000k9peCAA__pageWithoutSobject__1611156436000\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:135},{\&quot;name\&quot;:\&quot;one:utilityBarContent\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:127},{\&quot;name\&quot;:\&quot;home:assistantCardList\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:228}]}],\&quot;lds\&quot;:[{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;runtime-perf\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:42042,\&quot;context\&quot;:{\&quot;storeIngest\&quot;:2,\&quot;storeBroadcast\&quot;:1}}]},\&quot;owner\&quot;:\&quot;navex:standardManager\&quot;,\&quot;unixTS\&quot;:false,\&quot;ept\&quot;:12482,\&quot;previousPage\&quot;:{\&quot;context\&quot;:\&quot;undefined\&quot;,\&quot;attributes\&quot;:{}},\&quot;attributes\&quot;:{\&quot;layoutContainer\&quot;:\&quot;DLC\&quot;,\&quot;navStyle\&quot;:\&quot;Standard\&quot;,\&quot;splitViewMode\&quot;:\&quot;none\&quot;,\&quot;darkModeEnabled\&quot;:false,\&quot;network\&quot;:{\&quot;maxAllowedParallelXHRs\&quot;:6},\&quot;cores\&quot;:8,\&quot;eptDeviation\&quot;:false,\&quot;density\&quot;:\&quot;COMFY\&quot;,\&quot;totalEpt\&quot;:42038,\&quot;bootstrapType\&quot;:\&quot;COLD\&quot;,\&quot;defaultCmp\&quot;:[\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;runtime_sales_activities:todayTaskContainer\&quot;,\&quot;flexipage:recentItems\&quot;,\&quot;flexipage:richText\&quot;,\&quot;flexipage:richText\&quot;,\&quot;home:recentRecordContainer\&quot;,\&quot;home:topDealsContainer\&quot;,\&quot;flexipage:richText\&quot;,\&quot;home:assistant\&quot;,\&quot;flexipage:richText\&quot;],\&quot;gates\&quot;:{\&quot;lds.useNewTrackedFieldBehavior\&quot;:false,\&quot;scenarioTrackerEnabled.instrumentation.ltng\&quot;:true,\&quot;scenarioTrackerMarksEnabled.instrumentation.ltng\&quot;:false,\&quot;ui.services.PageScopedCache.enabled\&quot;:false,\&quot;browserIdleTime.instrumentation.ltng\&quot;:false,\&quot;clientTelemetry.instrumentation.ltng\&quot;:true,\&quot;lwcff_ENABLE_INNER_OUTER_TEXT_PATCH.lwc.ltng\&quot;:false,\&quot;lwcff_ENABLE_NON_COMPOSED_EVENTS_LEAKAGE.lwc.ltng\&quot;:false,\&quot;componentProfiler.instrumentation.ltng\&quot;:false,\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true},\&quot;cacheStats\&quot;:{\&quot;AuraStorage_actions\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:7},\&quot;AuraRecordStore\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:3},\&quot;AuraRecordStore_oneUserProfileCardTrigger\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:1},\&quot;AuraStorage_tempTabs-1633063146648-225236\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:1},\&quot;AuraRecordStore_others\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:2},\&quot;AuraStorage_recordLayoutMap\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:15},\&quot;total\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:29}},\&quot;complexity\&quot;:{\&quot;ADS_fields\&quot;:11},\&quot;sequence\&quot;:1,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;home:landing\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/page/home\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:42045,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;defsUsage\&quot;,\&quot;attributes\&quot;:{\&quot;defs\&quot;:[\&quot;markup://aura:component\&quot;,\&quot;markup://ui:virtualList\&quot;,\&quot;markup://ui:virtualDataGrid\&quot;,\&quot;markup://ui:virtualDataTable\&quot;,\&quot;markup://aura:application\&quot;,\&quot;markup://force:slds\&quot;,\&quot;markup://force:sldsDynamic\&quot;,\&quot;markup://one:one\&quot;,\&quot;markup://force:themeCssVarLoader\&quot;,\&quot;markup://aura:expression\&quot;,\&quot;markup://aura:html\&quot;,\&quot;markup://aura:text\&quot;,\&quot;markup://force:fingerprint\&quot;,\&quot;markup://force:defenseHook\&quot;,\&quot;markup://one:auraSystemErrorHandler\&quot;,\&quot;markup://one:auraCustomerErrorHandler\&quot;,\&quot;markup://force:downloadHandler\&quot;,\&quot;markup://force:hostConfig\&quot;,\&quot;markup://force:switchToNetworkHandler\&quot;,\&quot;markup://instrumentation:beacon\&quot;,\&quot;markup://laf:platformRouter\&quot;,\&quot;markup://laf:baseRouter\&quot;,\&quot;markup://laf:sObjectRouter\&quot;,\&quot;markup://force:setupRouter\&quot;,\&quot;markup://objectManager:objectManagerRouter\&quot;,\&quot;markup://force:personalSettingsPageRouter\&quot;,\&quot;markup://forceChatter:router\&quot;,\&quot;markup://laf:directCmpReferenceRouter\&quot;,\&quot;markup://laf:navigationServiceAPI\&quot;,\&quot;markup://laf:appContextService\&quot;,\&quot;markup://one:utils\&quot;,\&quot;markup://force:style\&quot;,\&quot;markup://force:access\&quot;,\&quot;markup://laf:appLayoutHost\&quot;,\&quot;markup://force:alohaUrlService\&quot;,\&quot;markup://force:quickActionHandler\&quot;,\&quot;markup://laf:layoutContainer\&quot;,\&quot;markup://laf:platformPageResolver\&quot;,\&quot;markup://force:adsBridge\&quot;,\&quot;markup://laf:flexipageCookieUtils\&quot;,\&quot;markup://aura:if\&quot;,\&quot;markup://runtime_all_walkthroughs:player\&quot;,\&quot;markup://one:onboardingManagerWrapper\&quot;,\&quot;markup://lightning:navigation\&quot;,\&quot;markup://ui:image\&quot;,\&quot;markup://force:icon\&quot;,\&quot;markup://lightning:icon\&quot;,\&quot;markup://ui:datePickerManager\&quot;,\&quot;markup://support:outputPhoneManager\&quot;,\&quot;markup://emailStream:connectEmailWrapper\&quot;,\&quot;markup://emailStream:connectEmail\&quot;,\&quot;markup://one:sessionManager\&quot;,\&quot;markup://salesforceIdentity:sessionTimeoutWarn\&quot;,\&quot;markup://salesforceIdentity:sessionTimeoutWatcher\&quot;,\&quot;markup://voice:getVendorLine\&quot;,\&quot;markup://one:establishVFSessionComponent\&quot;,\&quot;markup://navex:desktopLayoutContainer\&quot;,\&quot;markup://navex:navItemService\&quot;,\&quot;markup://force:pageInfo\&quot;,\&quot;markup://laf:navEventManager\&quot;,\&quot;markup://laf:urlProcessor\&quot;,\&quot;markup://force:recordActionEventManager\&quot;,\&quot;markup://one:layoutContainerLib\&quot;,\&quot;markup://one:recordActionsLib\&quot;,\&quot;markup://force:dirtyStateManager\&quot;,\&quot;markup://force:logoutHandler\&quot;,\&quot;markup://force:sessionLib\&quot;,\&quot;markup://laf:baseLayoutContainer\&quot;,\&quot;markup://forceContent:filesManager\&quot;,\&quot;markup://forceContent:modalPreviewManager\&quot;,\&quot;markup://support:crossFrameApiManager\&quot;,\&quot;markup://one:actionsManager\&quot;,\&quot;markup://force:targetInteractionHandler\&quot;,\&quot;markup://runtime_rtc:rtcDiscoveryBanner\&quot;,\&quot;markup://forceChatter:editManager\&quot;,\&quot;markup://forceContent:contentHubAuthenticationBanner\&quot;,\&quot;markup://force:quickActionManager\&quot;,\&quot;markup://one:panelService\&quot;,\&quot;markup://force:inlineSpinner\&quot;,\&quot;markup://force:loadingLaser\&quot;,\&quot;markup://force:localRecordChangeObserver\&quot;,\&quot;markup://forceChatter:feedEventsProcessor\&quot;,\&quot;markup://forceChatter:s1FeedsProxy\&quot;,\&quot;markup://one:iframeMessageManager\&quot;,\&quot;markup://lightning:messageDispatcher\&quot;,\&quot;markup://one:learningDataProvider\&quot;,\&quot;markup://one:tlxDataAccess\&quot;,\&quot;markup://force:userAssistancePlatform\&quot;,\&quot;markup://one:header\&quot;,\&quot;markup://forceSearch:desktopHeaderManager\&quot;,\&quot;markup://forceSearch:base\&quot;,\&quot;markup://forceSearch:baseSearch\&quot;,\&quot;markup://forceSearch:assistant\&quot;,\&quot;markup://lightning:button\&quot;,\&quot;markup://lightning:primitiveIcon\&quot;,\&quot;markup://forceSearch:searchGDP\&quot;,\&quot;markup://forceSearch:searchGDPCache\&quot;,\&quot;markup://forceSearch:searchGDPCacheActivity\&quot;,\&quot;markup://forceSearch:searchGDPCacheMrus\&quot;,\&quot;markup://forceSearch:searchGDPCachePermsAndPrefs\&quot;,\&quot;markup://forceSearch:searchGDPCacheResultsFilters\&quot;,\&quot;markup://forceSearch:searchGDPCacheScopes\&quot;,\&quot;markup://search_lightning:store\&quot;,\&quot;markup://force:skipLink\&quot;,\&quot;markup://force:onboardingManagerLib\&quot;,\&quot;markup://one:systemMessage\&quot;,\&quot;markup://aura:iteration\&quot;,\&quot;markup://one:ept\&quot;,\&quot;markup://auraStorage:fuelGauge\&quot;,\&quot;markup://one:favorites\&quot;,\&quot;markup://one:globalCreate\&quot;,\&quot;markup://one:globalCreateIcon\&quot;,\&quot;markup://one:helpAndTrainingExperience\&quot;,\&quot;markup://ui:interactive\&quot;,\&quot;markup://ui:popupTrigger\&quot;,\&quot;markup://ui:menuTriggerLink\&quot;,\&quot;markup://force:headerMenuTrigger\&quot;,\&quot;markup://ui:tooltip\&quot;,\&quot;markup://setup:gear\&quot;,\&quot;markup://uns:notifications\&quot;,\&quot;markup://force:empApi\&quot;,\&quot;markup://one:userProfileCardTrigger\&quot;,\&quot;markup://force:record\&quot;,\&quot;markup://force:recordGlobalValueProvider\&quot;,\&quot;markup://one:userProfileCardData\&quot;,\&quot;markup://navex:apiHandler\&quot;,\&quot;markup://navex:contentRegionNavContainer\&quot;,\&quot;markup://navex:standardManager\&quot;,\&quot;markup://one:addressableModalManager\&quot;,\&quot;markup://navex:standardAccessibilityUtil\&quot;,\&quot;markup://one:keyboardShortcutListener\&quot;,\&quot;markup://one:helpAndTrainingKeyboardShortcuts\&quot;,\&quot;markup://one:appNavContainer\&quot;,\&quot;markup://salesforceIdentity:appLauncherManager\&quot;,\&quot;markup://navex:splitViewWrapper\&quot;,\&quot;markup://force:brandBandPageContainer\&quot;,\&quot;markup://laf:pageHost\&quot;,\&quot;markup://one:editablePagePlugin\&quot;,\&quot;markup://laf:pageCapability\&quot;,\&quot;markup://laf:windowUpdate\&quot;,\&quot;markup://force:brandBand\&quot;,\&quot;markup://navex:splitViewContextProvider\&quot;,\&quot;markup://laf:singlePaneWindowManager\&quot;,\&quot;markup://force:recordContentPlugin\&quot;,\&quot;markup://one:searchContentPlugin\&quot;,\&quot;markup://one:uncacheableContentPlugin\&quot;,\&quot;markup://one:iframeContentPlugin\&quot;,\&quot;markup://laf:standardLayoutContentSelector\&quot;,\&quot;markup://flexipage:page\&quot;,\&quot;markup://ui:containerManager\&quot;,\&quot;markup://ui:panelManager2\&quot;,\&quot;markup://one:panelManager\&quot;,\&quot;markup://force:modalSpinner\&quot;,\&quot;markup://force:dotsSpinner\&quot;,\&quot;markup://notes:editPanelManager\&quot;,\&quot;markup://force:draggableResizablePanelManager\&quot;,\&quot;markup://ui:asyncComponentManager\&quot;,\&quot;markup://instrumentation:uiManager\&quot;,\&quot;markup://force:massErrorsManager\&quot;,\&quot;markup://force:hoverPrototypeManager\&quot;,\&quot;markup://force:hoverPrototype\&quot;,\&quot;markup://force:appMessageManager\&quot;,\&quot;markup://one:celebrationManager\&quot;,\&quot;markup://force:toastManager\&quot;,\&quot;markup://force:visualMessageQueue\&quot;,\&quot;markup://one:appnav\&quot;,\&quot;markup://force:headerButton\&quot;,\&quot;markup://ui:popup\&quot;,\&quot;markup://ui:menu\&quot;,\&quot;markup://ui:popupTarget\&quot;,\&quot;markup://ui:menuList\&quot;,\&quot;markup://uns:notificationsCounter\&quot;,\&quot;markup://isotope:headerButton\&quot;,\&quot;markup://lightning:spinner\&quot;,\&quot;markup://isotope:error\&quot;,\&quot;markup://isotope:subscriptionModal\&quot;,\&quot;markup://isotope:serviceAPI\&quot;,\&quot;markup://force:socialPhoto\&quot;,\&quot;markup://force:socialPhotoController\&quot;,\&quot;markup://home:landing\&quot;,\&quot;markup://one:fp0M00c00000000IZCAY__pageWithoutSobject__1624569623000\&quot;,\&quot;markup://flexipage:runtimeBackgroundComponentsWrapper\&quot;,\&quot;markup://one:utilityBar\&quot;,\&quot;markup://flexipage:runtimeComponent\&quot;,\&quot;markup://flexipage:componentDecorator\&quot;,\&quot;markup://one:utilityBarItem\&quot;,\&quot;markup://one:dockingPanelManager\&quot;,\&quot;markup://force:panelApi\&quot;,\&quot;markup://one:utilityBarContainer\&quot;,\&quot;markup://one:utilPanelManager\&quot;,\&quot;markup://force:dockingPanelOverflow\&quot;,\&quot;markup://force:entityIcon\&quot;,\&quot;markup://forceSearch:baseSearchInput\&quot;,\&quot;markup://forceSearch:assistantDialogContainer\&quot;,\&quot;markup://forceSearch:experimentContextInitializer\&quot;,\&quot;markup://forceSearch:groupContainer\&quot;,\&quot;markup://forceSearch:assistantDialog\&quot;,\&quot;markup://ui:dataProvider\&quot;,\&quot;markup://forceSearch:assistantSuggestionsDataProvider\&quot;,\&quot;markup://search_lightning:xmm\&quot;,\&quot;markup://forceSearch:optionDataProvider\&quot;,\&quot;markup://forceSearch:mruDataProvider\&quot;,\&quot;markup://forceSearch:inputEntitySelector\&quot;,\&quot;markup://forceSearch:inputEntitySelectorDataProvider\&quot;,\&quot;markup://lightning:groupedCombobox\&quot;,\&quot;markup://lightning:input\&quot;,\&quot;markup://search_lightning:instantResultsList\&quot;,\&quot;markup://forceSearch:assistantSecondaryPanel\&quot;,\&quot;markup://search_lightning:assistantTip\&quot;,\&quot;markup://forceSearch:searchGDPCacheAnswers\&quot;,\&quot;markup://forceSearch:predictedResultsDataProvider\&quot;,\&quot;markup://lightning:iconSvgTemplatesUtility\&quot;,\&quot;markup://one:utilityBarContent\&quot;,\&quot;markup://ui:button\&quot;,\&quot;markup://force:popOutManagerAura\&quot;,\&quot;markup://force:popOutManager\&quot;,\&quot;markup://laf:windowMessengerAura\&quot;,\&quot;markup://home:fp0M00c000000k9peCAA__pageWithoutSobject__1611156436000\&quot;,\&quot;markup://home:homeCard\&quot;,\&quot;markup://runtime_sales_activities:todayTaskContainer\&quot;,\&quot;markup://runtime_sales_activities:todayTasksFilter\&quot;,\&quot;markup://runtime_sales_activities:todayTasksList\&quot;,\&quot;markup://force:recordLayoutList\&quot;,\&quot;markup://runtime_sales_activities:todayTasksCardDataProvider\&quot;,\&quot;markup://force:placeholder\&quot;,\&quot;markup://ui:abstractList\&quot;,\&quot;markup://ui:infiniteList\&quot;,\&quot;markup://force:recordLayout\&quot;,\&quot;markup://force:listTemplate\&quot;,\&quot;markup://force:baseCard\&quot;,\&quot;markup://flexipage:recentItems\&quot;,\&quot;markup://flexipage:richText\&quot;,\&quot;markup://ui:outputRichText\&quot;,\&quot;markup://force:outputRichText\&quot;,\&quot;markup://aura:unescapedHtml\&quot;,\&quot;markup://home:recentRecordContainer\&quot;,\&quot;markup://home:recentsItemStencil\&quot;,\&quot;markup://force:outputLookupWithPreview\&quot;,\&quot;markup://home:outputLookupWithPreviewWithoutProfilePic\&quot;,\&quot;markup://aura:renderIf\&quot;,\&quot;markup://force:outputLookup\&quot;,\&quot;markup://ui:outputText\&quot;,\&quot;markup://force:alternateIdProvider\&quot;,\&quot;markup://home:topDealsContainer\&quot;,\&quot;markup://force:menuTriggerIcon\&quot;,\&quot;markup://home:topDealsCardDataProvider\&quot;,\&quot;markup://home:assistant\&quot;,\&quot;markup://lightning:auraDynamic\&quot;,\&quot;markup://force:emptyState\&quot;,\&quot;markup://force:recordLayoutBroker\&quot;,\&quot;markup://flexipage:card\&quot;,\&quot;layout://rl-Opportunity-VIEW-COMPACT----home_topDealsContainer-_1-0-517a41784a2f6466555677585a4c794b5856416456773d3d.c\&quot;,\&quot;markup://home:topDealsListStencil\&quot;,\&quot;markup://ui:outputDate\&quot;,\&quot;markup://force:outputCurrency\&quot;,\&quot;markup://home:assistantCardList\&quot;,\&quot;markup://home:assistantCollapsedCard\&quot;,\&quot;markup://home:assistantSmallActionButton\&quot;,\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;,\&quot;markup://flexipage:recentItemStencil\&quot;,\&quot;markup://force:outputFormulaHtml\&quot;,\&quot;markup://force:listRecordItem\&quot;,\&quot;markup://force:outputPicklist\&quot;,\&quot;markup://force:listRecord\&quot;,\&quot;markup://flexipage:listRecord\&quot;,\&quot;markup://ui:infiniteListRow\&quot;,\&quot;markup://force:actionRow\&quot;,\&quot;markup://offline:sash\&quot;],\&quot;pageCounter\&quot;:1,\&quot;phase\&quot;:\&quot;EPT\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;defsUsage\&quot;,\&quot;scope\&quot;:\&quot;defsUsage\&quot;},\&quot;sequence\&quot;:7,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;home:landing\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/page/home\&quot;}}}&quot;}],&quot;traces&quot;:&quot;[]&quot;,&quot;metrics&quot;:&quot;[{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-size-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063159585,\&quot;value\&quot;:[10]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-watch-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063159585,\&quot;value\&quot;:[2]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-snapshot-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063159585,\&quot;value\&quot;:[0]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-broadcast-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063156776,\&quot;value\&quot;:[0,0,0]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-ingest-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063156776,\&quot;value\&quot;:[2,1,1]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageReceived.beforeEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063159578,\&quot;value\&quot;:[498870]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageSent.beforeEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063159578,\&quot;value\&quot;:[55070]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;pageview.ept.ms\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063159583,\&quot;value\&quot;:[12482]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;ads-bridge-add-records-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063156776,\&quot;value\&quot;:[3,1,1]}]&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=16&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">420480000003b6baa9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraCmpDef-438" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="one" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">one</stringProp>
                  <stringProp name="Argument.value">lexOnboardingManagerService,onePreloads</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">LATEST-3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=22&amp;ui-setup-components-aura-components-gear.Gear.getPermissions=1-441" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1661;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.setup.components.aura.components.gear.GearController/ACTION$getPermissions&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=22&amp;ui-setup-components-aura-components-gear.Gear.getPermissions=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">4354000000095da6b6</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=23&amp;ui-setup-components-aura-components-gear.Gear.getEntitySupport=1-442" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1662;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.setup.components.aura.components.gear.GearController/ACTION$getEntitySupport&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=23&amp;ui-setup-components-aura-components-gear.Gear.getEntitySupport=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">435960000001c0aa04</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=21&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getActionOverrides=1&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getIsLWCFlexipageEnabled=1&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getKeyPrefixesWithRecordTypes=1-439" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1668;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getActionOverrides&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;sObjectNames&quot;:[&quot;A360ReportsGlobalRegion__c&quot;,&quot;A360_Manage_Widgets__c&quot;,&quot;A360_W2W_columns__c&quot;,&quot;AATEST2__c&quot;,&quot;AISentimentResult&quot;,&quot;ALIAutomation__c&quot;,&quot;API_Authorization__c&quot;,&quot;APTPS_Tender_Term_Description__c&quot;,&quot;APTPS_Tender_Term_Group_Approval__c&quot;,&quot;APTPS_Tender_Term__c&quot;,&quot;APTS_Display_Fields__c&quot;,&quot;APTS_Display_Settings__c&quot;,&quot;APTS_Features_Settings__c&quot;,&quot;APTS_Invoice__c&quot;,&quot;APTS_Product_Area_Code__c&quot;,&quot;APTS_ProposalFieldValidation__c&quot;,&quot;APTS_Query_Settings__c&quot;,&quot;APTS_ReApproval_Config__c&quot;,&quot;APXT_CongaSign__CongaSign_Settings__c&quot;,&quot;APXT_CongaSign__Recipient__c&quot;,&quot;APXT_CongaSign__Transaction__c&quot;,&quot;Accessory_Modality_Code__c&quot;,&quot;Account&quot;,&quot;AccountBrand&quot;,&quot;AccountContactRelation&quot;,&quot;AccountForecast&quot;,&quot;AccountForecastAdjustment&quot;,&quot;AccountForecastPeriodMetric&quot;,&quot;AccountHospitalGrade__c&quot;,&quot;AccountInsight&quot;,&quot;AccountParticipant&quot;,&quot;AccountPartner&quot;,&quot;AccountProductForecast&quot;,&quot;AccountProductPeriodForecast&quot;,&quot;AccountRelationship&quot;,&quot;AccountStrategicViewSetting__c&quot;,&quot;AccountTeamMember&quot;,&quot;AccountUserTerritory2View&quot;,&quot;Account_360_DB_User_default_widgets__c&quot;,&quot;Account_Agreement_Association__c&quot;,&quot;Account_Hierarchy_Setting__c&quot;,&quot;Account_Plan_Competitor__c&quot;,&quot;Account_Plan_Contacts__c&quot;,&quot;Account_Plan_KPI__c&quot;,&quot;Account_Plan__c&quot;,&quot;Account_Prioritization__c&quot;,&quot;Account_Request_Settings__c&quot;,&quot;Account_Team_Audit_Trail_Settings__c&quot;,&quot;Account_Team_Audit_Trail_Test_Settings__c&quot;,&quot;Account_Team_Audit_Trail__c&quot;,&quot;Account_Team_Request_Settings__c&quot;,&quot;Account_Test_Settings__c&quot;,&quot;Accreditation&quot;,&quot;AcctMgrPeriodicTargetDstr&quot;,&quot;AcctMgrTarget&quot;,&quot;AcctMgrTargetDstr&quot;,&quot;ActionCadence&quot;,&quot;ActionPlan&quot;,&quot;ActionPlanItem&quot;,&quot;ActionPlanItemDependency&quot;,&quot;ActionPlanTemplate&quot;,&quot;ActionPlanTemplateItem&quot;,&quot;ActionPlanTemplateItemValue&quot;,&quot;ActionPlanTemplateVersion&quot;,&quot;ActionPlanTmplItmAssessmentInd&quot;,&quot;ActionPlnTmplItmDependency&quot;,&quot;Activate_OTD_process__c&quot;,&quot;ActivationTarget&quot;,&quot;ActiveScratchOrg&quot;,&quot;ActivityHistory&quot;,&quot;ActivityTiming&quot;,&quot;Activity_Library__c&quot;,&quot;Activity_Logger_Switch__c&quot;,&quot;AdCreativeSizeType&quot;,&quot;AdOrderItem&quot;,&quot;AdQuote&quot;,&quot;AdQuoteLine&quot;,&quot;AdServer&quot;,&quot;AdServerAccount&quot;,&quot;AdServerUser&quot;,&quot;AdSpaceCreativeSizeType&quot;,&quot;AdSpaceGroupMember&quot;,&quot;AdSpaceSpecification&quot;,&quot;AddOnDefinition&quot;,&quot;Address&quot;,&quot;AdvAccountForecastFact&quot;,&quot;AdvAcctForecastSetPartner&quot;,&quot;AgentTraining&quot;,&quot;Agreement_Contact_Role__c&quot;,&quot;Agreement_Product_Line_Item_Detail__c&quot;,&quot;Agreement_Product_Portfolio__c&quot;,&quot;AiDataset&quot;,&quot;AiImageDetectedObject&quot;,&quot;AiImageObject&quot;,&quot;AiImageTrainingObject&quot;,&quot;AiVisionModel&quot;,&quot;AiVisionModelMetric&quot;,&quot;AiVisionModelObjectMetric&quot;,&quot;AiVisitRecommendRequest&quot;,&quot;AiVisitRecommendation&quot;,&quot;AiVisitSummary&quot;,&quot;AiVisitTaskRcmd&quot;,&quot;AiVisitTaskRcmdRequest&quot;,&quot;AirTravelEmssnFctr&quot;,&quot;AirTravelEnrgyUse&quot;,&quot;AllergyIntolerance&quot;,&quot;AlternativePaymentMethod&quot;,&quot;ApiAnomalyEventStore&quot;,&quot;AppAnalyticsQueryRequest&quot;,&quot;AppExtension&quot;,&quot;AppMenuItem&quot;,&quot;AppUsageAssignment&quot;,&quot;ApplicationCase&quot;,&quot;AppointmentReason&quot;,&quot;AppointmentTopicTimeSlot&quot;,&quot;Approver_Detail__c&quot;,&quot;ApptBundleAggrDurDnscale&quot;,&quot;ApptBundleAggrPolicy&quot;,&quot;ApptBundleConfig&quot;,&quot;ApptBundlePolicy&quot;,&quot;ApptBundlePolicySvcTerr&quot;,&quot;ApptBundlePropagatePolicy&quot;,&quot;ApptBundleRestrictPolicy&quot;,&quot;ApptBundleSortPolicy&quot;,&quot;Apttus_Approval__ApprovalProcessInstance__c&quot;,&quot;Apttus_Approval__ApprovalRuleAssignee__c&quot;,&quot;Apttus_Approval__ApprovalRuleDimension__c&quot;,&quot;Apttus_Approval__ApprovalRuleEntry__c&quot;,&quot;Apttus_Approval__ApprovalRule__c&quot;,&quot;Apttus_Approval__Approval_Matrix__c&quot;,&quot;Apttus_Approval__Approval_Process__c&quot;,&quot;Apttus_Approval__Approval_Request_History__c&quot;,&quot;Apttus_Approval__Approval_Request__c&quot;,&quot;Apttus_Approval__ApprovalsCustomClasses__c&quot;,&quot;Apttus_Approval__ApprovalsCustomConfig__c&quot;,&quot;Apttus_Approval__ApprovalsSystemProperties__c&quot;,&quot;Apttus_Approval__Backup_Approver__c&quot;,&quot;Apttus_Approval__FormulaField__c&quot;,&quot;Apttus_Approval__SearchFilter__c&quot;,&quot;Apttus_Base2__BasePrivateProperties__c&quot;,&quot;Apttus_Base2__TurboEngineAdminProperties__c&quot;,&quot;Apttus_CMConfig__AgreementAdjustmentLineItem__c&quot;,&quot;Apttus_CMConfig__AgreementFootnote__c&quot;,&quot;Apttus_CMConfig__AgreementProductAttributeValueExt2__c&quot;,&quot;Apttus_CMConfig__AgreementProductAttributeValueExt3__c&quot;,&quot;Apttus_CMConfig__AgreementProductAttributeValueExt__c&quot;,&quot;Apttus_CMConfig__AgreementProductAttributeValue__c&quot;,&quot;Apttus_CMConfig__AgreementRelatedLineItem__c&quot;,&quot;Apttus_CMConfig__AgreementSummaryGroup__c&quot;,&quot;Apttus_CMConfig__AgreementSummary__c&quot;,&quot;Apttus_CMConfig__AgreementUsagePriceTier__c&quot;,&quot;Apttus_Config2__AccountLocation__c&quot;,&quot;Apttus_Config2__AdHocGroup__c&quot;,&quot;Apttus_Config2__AdjustmentLineItem__c&quot;,&quot;Apttus_Config2__AgreementPriceRule__c&quot;,&quot;Apttus_Config2__AgreementPriceTier__c&quot;,&quot;Apttus_Config2__AppliedExpressionInfo__c&quot;,&quot;Apttus_Config2__AppliedRuleActionInfo__c&quot;,&quot;Apttus_Config2__AppliedRuleInfo__c&quot;,&quot;Apttus_Config2__AssetAttributeValue__c&quot;,&quot;Apttus_Config2__AssetLineItem__c&quot;,&quot;Apttus_Config2__AssetUsagePriceTier__c&quot;,&quot;Apttus_Config2__BannerSettings__c&quot;,&quot;Apttus_Config2__BatchJob__c&quot;,&quot;Apttus_Config2__BillingPlanItem__c&quot;,&quot;Apttus_Config2__BillingPlan__c&quot;,&quot;Apttus_Config2__BillingPreference__c&quot;,&quot;Apttus_Config2__BundleComponentView__c&quot;,&quot;Apttus_Config2__ChargeGroupMember__c&quot;,&quot;Apttus_Config2__ChargeGroup__c&quot;,&quot;Apttus_Config2__ChargeType__c&quot;,&quot;Apttus_Config2__ClassificationHierarchy__c&quot;,&quot;Apttus_Config2__ClassificationName__c&quot;,&quot;Apttus_Config2__ConfigAssetPricingCriteriaFields__c&quot;,&quot;Apttus_Config2__ConfigAssetPricingDefault__c&quot;,&quot;Apttus_Config2__ConfigConstraintCriteriaFields__c&quot;,&quot;Apttus_Config2__ConfigCustomClasses__c&quot;,&quot;Apttus_Config2__ConfigCustomDisplayActions__c&quot;,&quot;Apttus_Config2__ConfigCustomDisplayColumns__c&quot;,&quot;Apttus_Config2__ConfigFieldExpressionsCriteriaFields__c&quot;,&quot;Apttus_Config2__ConfigFieldSet__c&quot;,&quot;Apttus_Config2__ConfigFlow__c&quot;,&quot;Apttus_Config2__ConfigHeaderCriteriaFields__c&quot;,&quot;Apttus_Config2__ConfigLineItemCriteriaFields__c&quot;,&quot;Apttus_Config2__ConfigLineItemCustomFields__c&quot;,&quot;Apttus_Config2__ConfigLineItemLimitFields__c&quot;,&quot;Apttus_Config2__ConfigRelatedPricingGroupFields__c&quot;,&quot;Apttus_Config2__ConfigSelectBundleOptionsSettings__c&quot;,&quot;Apttus_Config2__ConfigSelectConfigProductsSettings__c&quot;,&quot;Apttus_Config2__ConfigSmartSearchSettings__c&quot;,&quot;Apttus_Config2__ConfigSystemProperties__c&quot;,&quot;Apttus_Config2__ConfigUnusedObjects__c&quot;,&quot;Apttus_Config2__ConfigUserPreferences__c&quot;,&quot;Apttus_Config2__ConstraintRuleAction__c&quot;,&quot;Apttus_Config2__ConstraintRuleCondition__c&quot;,&quot;Apttus_Config2__ConstraintRule__c&quot;,&quot;Apttus_Config2__CustomMessage__c&quot;,&quot;Apttus_Config2__DataCache__c&quot;,&quot;Apttus_Config2__ExtOrderSummaryItemCriteriaFields__c&quot;,&quot;Apttus_Config2__FavoriteConfiguration__c&quot;,&quot;Apttus_Config2__FeatureSet__c&quot;,&quot;Apttus_Config2__Feature__c&quot;,&quot;Apttus_Config2__FieldExpression__c&quot;,&quot;Apttus_Config2__Footnote__c&quot;,&quot;Apttus_Config2__FormulaField__c&quot;,&quot;Apttus_Config2__FrequencyConversionRate__c&quot;,&quot;Apttus_Config2__GLAccountMapEntry__c&quot;,&quot;Apttus_Config2__GLAccountMapRule__c&quot;,&quot;Apttus_Config2__GuidedQuestion__c&quot;,&quot;Apttus_Config2__GuidedSearchRuleEntry__c&quot;,&quot;Apttus_Config2__GuidedSearchRuleFilter__c&quot;,&quot;Apttus_Config2__GuidedSearchRule__c&quot;,&quot;Apttus_Config2__IncentiveBenefitData__c&quot;,&quot;Apttus_Config2__IncentiveCoupon__c&quot;,&quot;Apttus_Config2__IncentiveCustomDisplayActions__c&quot;,&quot;Apttus_Config2__IncentiveCustomDisplaySetting__c&quot;,&quot;Apttus_Config2__IncentiveGroup__c&quot;,&quot;Apttus_Config2__IncentiveLimitData__c&quot;,&quot;Apttus_Config2__IncentiveLimit__c&quot;,&quot;Apttus_Config2__IncentiveSystemProperties__c&quot;,&quot;Apttus_Config2__Incentive__c&quot;,&quot;Apttus_Config2__InstalledProductsSettings__c&quot;,&quot;Apttus_Config2__LineItemRollup__c&quot;,&quot;Apttus_Config2__LineItem__c&quot;,&quot;Apttus_Config2__LookupFieldSettings__c&quot;,&quot;Apttus_Config2__LoyaltyPointAccrualLevelSettings__c&quot;,&quot;Apttus_Config2__ObjectSummarySettings__c&quot;,&quot;Apttus_Config2__OrderLineItemCriteriaFields__c&quot;,&quot;Apttus_Config2__OrderLineItemLimitFields__c&quot;,&quot;Apttus_Config2__OrderLineItemMapFields__c&quot;,&quot;Apttus_Config2__OrderLineItem__c&quot;,&quot;Apttus_Config2__OrderProductAttributeValue__c&quot;,&quot;Apttus_Config2__OrderSourceCustomFields__c&quot;,&quot;Apttus_Config2__OrderSystemProperties__c&quot;,&quot;Apttus_Config2__OrderTaxBreakup__c&quot;,&quot;Apttus_Config2__OrderUsagePriceTier__c&quot;,&quot;Apttus_Config2__Order__c&quot;,&quot;Apttus_Config2__PaymentTerm__c&quot;,&quot;Apttus_Config2__PriceBreakup__c&quot;,&quot;Apttus_Config2__PriceDimension__c&quot;,&quot;Apttus_Config2__PriceListCategory__c&quot;,&quot;Apttus_Config2__PriceListItem__c&quot;,&quot;Apttus_Config2__PriceList__c&quot;,&quot;Apttus_Config2__PriceMatrixEntry__c&quot;,&quot;Apttus_Config2__PriceMatrix__c&quot;,&quot;Apttus_Config2__PriceRuleEntry__c&quot;,&quot;Apttus_Config2__PriceRule__c&quot;,&quot;Apttus_Config2__PriceRuleset__c&quot;,&quot;Apttus_Config2__ProductAttributeGroupMember__c&quot;,&quot;Apttus_Config2__ProductAttributeGroup__c&quot;,&quot;Apttus_Config2__ProductAttributeValue__c&quot;,&quot;Apttus_Config2__ProductAttribute__c&quot;,&quot;Apttus_Config2__ProductClassification__c&quot;,&quot;Apttus_Config2__ProductConfiguration__c&quot;,&quot;Apttus_Config2__ProductConstraintEntry__c&quot;,&quot;Apttus_Config2__ProductConstraintView__c&quot;,&quot;Apttus_Config2__ProductConstraint__c&quot;,&quot;Apttus_Config2__ProductDefaultRuleFilter__c&quot;,&quot;Apttus_Config2__ProductDefaultRule__c&quot;,&quot;Apttus_Config2__ProductDefaultValue__c&quot;,&quot;Apttus_Config2__ProductFeatureValue__c&quot;,&quot;Apttus_Config2__ProductFeature__c&quot;,&quot;Apttus_Config2__ProductFilterView__c&quot;,&quot;Apttus_Config2__ProductFootnote__c&quot;,&quot;Apttus_Config2__ProductGroupMember__c&quot;,&quot;Apttus_Config2__ProductGroup__c&quot;,&quot;Apttus_Config2__ProductHierarchyView__c&quot;,&quot;Apttus_Config2__ProductInformation__c&quot;,&quot;Apttus_Config2__ProductOptionComponent__c&quot;,&quot;Apttus_Config2__ProductOptionGroup__c&quot;,&quot;Apttus_Config2__ProductOptionPrice__c&quot;,&quot;Apttus_Config2__ProductTranslation__c&quot;,&quot;Apttus_Config2__PublishedFavorite__c&quot;,&quot;Apttus_Config2__RelatedAccountLocation__c&quot;,&quot;Apttus_Config2__RelatedAssetLineItem__c&quot;,&quot;Apttus_Config2__RelatedIncentive__c&quot;,&quot;Apttus_Config2__RelatedLineItem__c&quot;,&quot;Apttus_Config2__RelatedOpportunityLineItemColl__c&quot;,&quot;Apttus_Config2__RelatedOpportunityLineItem__c&quot;,&quot;Apttus_Config2__RelatedPriceListItem__c&quot;,&quot;Apttus_Config2__RelatedProduct__c&quot;,&quot;Apttus_Config2__RevRecPolicy__c&quot;,&quot;Apttus_Config2__SearchAttributeValue__c&quot;,&quot;Apttus_Config2__SearchFilter__c&quot;,&quot;Apttus_Config2__SummaryGroup__c&quot;,&quot;Apttus_Config2__TaxBreakup__c&quot;,&quot;Apttus_Config2__TaxCertificate__c&quot;,&quot;Apttus_Config2__TaxCode__c&quot;,&quot;Apttus_Config2__TempDisplayColumn__c&quot;,&quot;Apttus_Config2__TempFilter__c&quot;,&quot;Apttus_Config2__TempIncentiveBenefitData__c&quot;,&quot;Apttus_Config2__TempIncentiveLimitData__c&quot;,&quot;Apttus_Config2__TempObject__c&quot;,&quot;Apttus_Config2__TempRenew__c&quot;,&quot;Apttus_Config2__UsagePriceTier__c&quot;,&quot;Apttus_Other_Variable_Cost__c&quot;,&quot;Apttus_Proposal__ProposalCustomClasses__c&quot;,&quot;Apttus_Proposal__ProposalSystemProperties__c&quot;,&quot;Apttus_Proposal__Proposal_Document_Output_Format__c&quot;,&quot;Apttus_Proposal__Proposal_Line_Item__c&quot;,&quot;Apttus_Proposal__Proposal_Request__c&quot;,&quot;Apttus_Proposal__Proposal__c&quot;,&quot;Apttus_QPConfig__ProposalAdjustmentLineItem__c&quot;,&quot;Apttus_QPConfig__ProposalFootnote__c&quot;,&quot;Apttus_QPConfig__ProposalIncentiveBenefitData__c&quot;,&quot;Apttus_QPConfig__ProposalIncentiveLimitData__c&quot;,&quot;Apttus_QPConfig__ProposalProductAttributeValueExt2__c&quot;,&quot;Apttus_QPConfig__ProposalProductAttributeValueExt3__c&quot;,&quot;Apttus_QPConfig__ProposalProductAttributeValueExt__c&quot;,&quot;Apttus_QPConfig__ProposalProductAttributeValue__c&quot;,&quot;Apttus_QPConfig__ProposalRelatedLineItem__c&quot;,&quot;Apttus_QPConfig__ProposalSummaryGroup__c&quot;,&quot;Apttus_QPConfig__ProposalSummary__c&quot;,&quot;Apttus_QPConfig__ProposalUsagePriceTier__c&quot;,&quot;Apttus_Reporting_Bundles__c&quot;,&quot;Apttus_XApps__Application__c&quot;,&quot;Apttus_XApps__XAuthorForExcelSystemProperties__c&quot;,&quot;Apttus__APTS_Agreement__c&quot;,&quot;Apttus__APTS_Related_Agreement__c&quot;,&quot;Apttus__APTS_Template__c&quot;,&quot;Apttus__AgreementLineItem__c&quot;,&quot;Apttus__Agreement_Clause__c&quot;,&quot;Apttus__Agreement_Protection__c&quot;,&quot;Apttus__Agreement_Rule_Condition__c&quot;,&quot;Apttus__Agreement_Rule__c&quot;,&quot;Apttus__AsyncMergeCall__c&quot;,&quot;Apttus__ComplyCustomClasses__c&quot;,&quot;Apttus__ComplyCustomProperties__c&quot;,&quot;Apttus__ComplySystemProperties__c&quot;,&quot;Apttus__DocAssemblyComponent__c&quot;,&quot;Apttus__DocAssemblyRule__c&quot;,&quot;Apttus__DocAssemblyRuleset__c&quot;,&quot;Apttus__DocumentVersionDetail__c&quot;,&quot;Apttus__DocumentVersionProperties__c&quot;,&quot;Apttus__DocumentVersion__c&quot;,&quot;Apttus__Document_Output_Format__c&quot;,&quot;Apttus__FormulaField__c&quot;,&quot;Apttus__IDEJobClauseExtraction__c&quot;,&quot;Apttus__IDEJobFieldExtraction__c&quot;,&quot;Apttus__IDEJob__c&quot;,&quot;Apttus__IDEMapClauseProvision__c&quot;,&quot;Apttus__IDEMapFieldProvision__c&quot;,&quot;Apttus__IDEMapProjectRecordType__c&quot;,&quot;Apttus__IDEMapProvisionRecordType__c&quot;,&quot;Apttus__IDEProvision__c&quot;,&quot;Apttus__LiteUserException__c&quot;,&quot;Apttus__LiteUserSummary__c&quot;,&quot;Apttus__Locale__c&quot;,&quot;Apttus__LoginHistory__c&quot;,&quot;Apttus__MSTeamsDetail__c&quot;,&quot;Apttus__QueryTemplateFilter__c&quot;,&quot;Apttus__QueryTemplateQualifier__c&quot;,&quot;Apttus__QueryTemplate__c&quot;,&quot;Apttus__ReviewCycle__c&quot;,&quot;Apttus__Reviewer__c&quot;,&quot;Apttus__SearchFilter__c&quot;,&quot;Apttus__TempObject__c&quot;,&quot;Apttus__TemplateClauseReference__c&quot;,&quot;Apttus__TemplateDatasourceFilter__c&quot;,&quot;Apttus__TemplateDynamicSection__c&quot;,&quot;Assessment&quot;,&quot;AssessmentIndDefinedValue&quot;,&quot;AssessmentIndValue&quot;,&quot;AssessmentIndicatorDefinition&quot;,&quot;AssessmentQuestion&quot;,&quot;AssessmentQuestionResponse&quot;,&quot;AssessmentQuestionSet&quot;,&quot;AssessmentQuestionVersion&quot;,&quot;AssessmentTask&quot;,&quot;AssessmentTaskContentDocument&quot;,&quot;AssessmentTaskDefinition&quot;,&quot;AssessmentTaskIndDefinition&quot;,&quot;AssessmentTaskOrder&quot;,&quot;Asset&quot;,&quot;AssetAction&quot;,&quot;AssetActionSource&quot;,&quot;AssetAttribute&quot;,&quot;AssetDowntimePeriod&quot;,&quot;AssetRelationship&quot;,&quot;AssetStatePeriod&quot;,&quot;AssetWarranty&quot;,&quot;AssignedResource&quot;,&quot;AssistantText&quot;,&quot;AssociatedLocation&quot;,&quot;Assortment&quot;,&quot;AssortmentProduct&quot;,&quot;AsyncOperationLog&quot;,&quot;AttachedContentNote&quot;,&quot;AttributeDefinition&quot;,&quot;Audit_Trail__c&quot;,&quot;AuthApplicationAsset&quot;,&quot;AuthApplicationPlace&quot;,&quot;AuthFormRequestRecord&quot;,&quot;AuthLocationAccessSchedule&quot;,&quot;AuthorNote&quot;,&quot;AuthorizationForm&quot;,&quot;AuthorizationFormConsent&quot;,&quot;AuthorizationFormDataUse&quot;,&quot;AuthorizationFormText&quot;,&quot;AuthorizedInsuranceLine&quot;,&quot;Award&quot;,&quot;BCEntityPermission&quot;,&quot;BCEntityPermissionSet&quot;,&quot;BCFieldPermission&quot;,&quot;BCParticipant&quot;,&quot;BCParticipantAccess&quot;,&quot;BCPermissionSet&quot;,&quot;BCRecordAccess&quot;,&quot;BCRecordAccessApproval&quot;,&quot;BCRelatedParticipant&quot;,&quot;Bad_Jobs__c&quot;,&quot;Banker&quot;,&quot;BatchJob&quot;,&quot;BatchJobPart&quot;,&quot;BatchJobPartFailedRecord&quot;,&quot;Batch_In_Sequence__c&quot;,&quot;Benefit&quot;,&quot;BenefitParameterValue&quot;,&quot;BenefitType&quot;,&quot;BillingPeriodItem&quot;,&quot;BillingPeriodTaxItem&quot;,&quot;BillingPolicy&quot;,&quot;BillingSchedule&quot;,&quot;BillingScheduleCreationStatus&quot;,&quot;BillingScheduleGroup&quot;,&quot;BillingTreatment&quot;,&quot;BillingTreatmentItem&quot;,&quot;Billing_Frequency_Matrix__c&quot;,&quot;BioprodPreBilledType__c&quot;,&quot;BldgEnrgyIntensity&quot;,&quot;BldgEnrgyIntensityVal&quot;,&quot;BldgSizeCategory&quot;,&quot;BlockchainAppMember&quot;,&quot;BlockchainApplication&quot;,&quot;BlockchainEntity&quot;,&quot;BlockchainField&quot;,&quot;BlockchainMember&quot;,&quot;BoardCertification&quot;,&quot;BranchUnit&quot;,&quot;BranchUnitBusinessMember&quot;,&quot;BranchUnitCustomer&quot;,&quot;BranchUnitRelatedRecord&quot;,&quot;Budget&quot;,&quot;BudgetAllocation&quot;,&quot;BulkPublishAccount_CS__c&quot;,&quot;BusRegAuthTypeDependency&quot;,&quot;BusRegAuthorizationType&quot;,&quot;BusinessBrand&quot;,&quot;BusinessHours&quot;,&quot;BusinessLicense&quot;,&quot;BusinessLicenseApplication&quot;,&quot;BusinessMilestone&quot;,&quot;BusinessProfile&quot;,&quot;BusinessType&quot;,&quot;BusinessUnitMember&quot;,&quot;Business_Profile_Custom_Settings__c&quot;,&quot;Buy_Back_Item_Type__c&quot;,&quot;BuyerAccount&quot;,&quot;BuyerGroup&quot;,&quot;BuyerGroupMember&quot;,&quot;BuyerGroupPricebook&quot;,&quot;ByPass_PCL_Check__c&quot;,&quot;CCP_APIInformation__c&quot;,&quot;CCP_BatchConfig__c&quot;,&quot;CCP_ContactUsHistory__c&quot;,&quot;CCP_CurrentOutage__c&quot;,&quot;CCP_EmailDistributionList__c&quot;,&quot;CCP_InstallationStatus__c&quot;,&quot;CCP_LanguageList__c&quot;,&quot;CCP_PartsOrderType__c&quot;,&quot;CCP_PerferenceSetting__c&quot;,&quot;CCP_RoleToPageMapping__c&quot;,&quot;CCP_SavedFilter__c&quot;,&quot;CCP_TrackingURLMapping__c&quot;,&quot;CFDJapanDescriptionSelectable__c&quot;,&quot;CFDSubtotal_GroupValues__c&quot;,&quot;CFD_Data__c&quot;,&quot;CFD_IB_Asset_Order__c&quot;,&quot;CFD_Line_Item__c&quot;,&quot;CFD_Print_Option_User_Preferences__c&quot;,&quot;CFO_Assignment_Matrix__c&quot;,&quot;CLI_Automation__c&quot;,&quot;CLM_Agreement_Rev_Rec_Conclusion__c&quot;,&quot;CLM_Entitlement_Tab__c&quot;,&quot;CLM_Feature_Settings__c&quot;,&quot;CMSetting__c&quot;,&quot;CP_GEHC_Custom_Batch_Filter_Support__c&quot;,&quot;CSO_W2C_SSO_Integration_API__c&quot;,&quot;CalcProcStepRelationship&quot;,&quot;CalculationMatrix&quot;,&quot;CalculationMatrixColumn&quot;,&quot;CalculationMatrixRow&quot;,&quot;CalculationMatrixVersion&quot;,&quot;CalculationProcedure&quot;,&quot;CalculationProcedureStep&quot;,&quot;CalculationProcedureVariable&quot;,&quot;CalculationProcedureVersion&quot;,&quot;CallTemplate&quot;,&quot;Campaign&quot;,&quot;CampaignInfluence&quot;,&quot;CampaignInsight&quot;,&quot;CampaignMember&quot;,&quot;CampaignMemberStatus&quot;,&quot;CardPaymentMethod&quot;,&quot;CareBarrier&quot;,&quot;CareBarrierDeterminant&quot;,&quot;CareBarrierType&quot;,&quot;CareBenefitVerifyRequest&quot;,&quot;CareDeterminant&quot;,&quot;CareDeterminantType&quot;,&quot;CareDiagnosis&quot;,&quot;CareInterventionType&quot;,&quot;CareLimitType&quot;,&quot;CareMetricTarget&quot;,&quot;CareObservation&quot;,&quot;CareObservationComponent&quot;,&quot;CarePerformer&quot;,&quot;CarePgmProvHealthcareProvider&quot;,&quot;CarePractnFacilityAppt&quot;,&quot;CarePreauth&quot;,&quot;CarePreauthItem&quot;,&quot;CareProgram&quot;,&quot;CareProgramCampaign&quot;,&quot;CareProgramEligibilityRule&quot;,&quot;CareProgramEnrollee&quot;,&quot;CareProgramEnrolleeProduct&quot;,&quot;CareProgramEnrollmentCard&quot;,&quot;CareProgramGoal&quot;,&quot;CareProgramProduct&quot;,&quot;CareProgramProvider&quot;,&quot;CareProgramTeamMember&quot;,&quot;CareProviderAdverseAction&quot;,&quot;CareProviderFacilitySpecialty&quot;,&quot;CareProviderSearchableField&quot;,&quot;CareRegisteredDevice&quot;,&quot;CareRequest&quot;,&quot;CareRequestDrug&quot;,&quot;CareRequestExtension&quot;,&quot;CareRequestItem&quot;,&quot;CareRequestReviewer&quot;,&quot;CareSpecialty&quot;,&quot;CareSpecialtyTaxonomy&quot;,&quot;CareTaxonomy&quot;,&quot;CartItem&quot;,&quot;Case&quot;,&quot;CaseComment&quot;,&quot;CaseContactRole&quot;,&quot;CaseEvalFormMapping__c&quot;,&quot;CaseMilestone&quot;,&quot;CaseProblemStatusCloseForm__c&quot;,&quot;CaseRelatedIssue&quot;,&quot;Case_Activities__c&quot;,&quot;Case_Comment__c&quot;,&quot;Case_Severity_Matrix__c&quot;,&quot;Case_To_CommEx_Interceptor__c&quot;,&quot;ChangeRequest&quot;,&quot;ChangeRequestRelatedIssue&quot;,&quot;ChannelObjectLinkingRule&quot;,&quot;ChannelProgram&quot;,&quot;ChannelProgramLevel&quot;,&quot;ChannelProgramMember&quot;,&quot;CharketSettings__c&quot;,&quot;Charket__CharketContext__c&quot;,&quot;Charket__Log__c&quot;,&quot;Charket__SkillContext__c&quot;,&quot;Charket__Skill__c&quot;,&quot;Charket__SurveyAnswer__c&quot;,&quot;Charket__SurveyQuestion__c&quot;,&quot;Charket__SurveyResponse__c&quot;,&quot;Charket__SurveyTaken__c&quot;,&quot;Charket__Survey__c&quot;,&quot;Charket__WeChatAccount__c&quot;,&quot;Charket__WeChatAgent__c&quot;,&quot;Charket__WeChatCouponDelivery__c&quot;,&quot;Charket__WeChatCoupon__c&quot;,&quot;Charket__WeChatEvent__c&quot;,&quot;Charket__WeChatFollowerPass__c&quot;,&quot;Charket__WeChatFollower__c&quot;,&quot;Charket__WeChatMenuFilters__c&quot;,&quot;Charket__WeChatMenuItem__c&quot;,&quot;Charket__WeChatMenu__c&quot;,&quot;Charket__WeChatMessageAttachment__c&quot;,&quot;Charket__WeChatMessage__c&quot;,&quot;Charket__WeChatNotificationTemplate__c&quot;,&quot;Charket__WeChatPass__c&quot;,&quot;Charket__WeChatQRCode__c&quot;,&quot;Charket__WeChatResponseItem__c&quot;,&quot;Charket__WeChatResponseKeyword__c&quot;,&quot;Charket__WeChatResponse__c&quot;,&quot;Charket__WeChatTagAssignment__c&quot;,&quot;Charket__WeChatTagLink__c&quot;,&quot;Charket__WeChatTag__c&quot;,&quot;Charket__WeChatTranscriptItem__c&quot;,&quot;Charket__WeChatTranscript__c&quot;,&quot;Chatter_Settings__c&quot;,&quot;China_BatchSize__c&quot;,&quot;China_Config_Setting__c&quot;,&quot;China_LS_Core_Imaging_PP__c&quot;,&quot;China_Profiles_Bypass_Validation__c&quot;,&quot;China_SalesFunct_PriceList_Map__c&quot;,&quot;China_Tender_Reserve_Details__c&quot;,&quot;Claim&quot;,&quot;ClaimCase&quot;,&quot;ClaimCovPaymentAdjustment&quot;,&quot;ClaimCovReserveAdjustment&quot;,&quot;ClaimCoverage&quot;,&quot;ClaimCoveragePaymentDetail&quot;,&quot;ClaimCoverageReserveDetail&quot;,&quot;ClaimItem&quot;,&quot;ClaimParticipant&quot;,&quot;ClaimPaymentSummary&quot;,&quot;ClinicalAlert&quot;,&quot;ClinicalEncounter&quot;,&quot;ClinicalEncounterDiagnosis&quot;,&quot;ClinicalEncounterFacility&quot;,&quot;ClinicalEncounterIdentifier&quot;,&quot;ClinicalEncounterProvider&quot;,&quot;ClinicalEncounterReason&quot;,&quot;ClinicalEncounterSvcRequest&quot;,&quot;ClinicalServiceRequest&quot;,&quot;ClinicalServiceRequestDetail&quot;,&quot;CloudServiceProvider&quot;,&quot;Cloudspm_Fusion__CustomHeaderColour__c&quot;,&quot;Cloudspm_Fusion__DocSign_Config__c&quot;,&quot;Cloudspm_Fusion__Fiscal_Year_Setting__c&quot;,&quot;Cloudspm_Fusion__Scheduler_Manager_Setting__c&quot;,&quot;CodeSet&quot;,&quot;CodeSetBundle&quot;,&quot;CollaborationGroup&quot;,&quot;CommEx_IT_SLA_Score_Matrix__c&quot;,&quot;CommEx_Support__c&quot;,&quot;CommSubscription&quot;,&quot;CommSubscriptionChannelType&quot;,&quot;CommSubscriptionConsent&quot;,&quot;CommSubscriptionTiming&quot;,&quot;CommerceEntitlementBuyerGroup&quot;,&quot;CommerceEntitlementPolicy&quot;,&quot;CommerceEntitlementProduct&quot;,&quot;CommexProductionSLAScoreMatrix__c&quot;,&quot;Commex_Case__c&quot;,&quot;CommissionSchedule&quot;,&quot;CommissionScheduleAssignment&quot;,&quot;Community_Article_Topics_connection__c&quot;,&quot;Community_Asset__c&quot;,&quot;Community_Event_Topics_connection__c&quot;,&quot;Community_Topic__c&quot;,&quot;Community_Training__c&quot;,&quot;Community_article_usage_details__c&quot;,&quot;Community_event__c&quot;,&quot;Community_points_management__c&quot;,&quot;Community_question__c&quot;,&quot;Community_template__c&quot;,&quot;Competitor_Attributes__c&quot;,&quot;Competitor__c&quot;,&quot;ComplaintCase&quot;,&quot;Config_Data_Map__c&quot;,&quot;Conga_OCC__OCCSettings__c&quot;,&quot;ConsentMetric&quot;,&quot;ConsentUsageMetric&quot;,&quot;Construction_Rev_Quote_PO__c&quot;,&quot;ConsumptionRate&quot;,&quot;ConsumptionSchedule&quot;,&quot;Contact&quot;,&quot;ContactEncounter&quot;,&quot;ContactEncounterParticipant&quot;,&quot;ContactPointAddress&quot;,&quot;ContactPointConsent&quot;,&quot;ContactPointEmail&quot;,&quot;ContactPointPhone&quot;,&quot;ContactPointTypeConsent&quot;,&quot;ContactRequest&quot;,&quot;ContactSuggestionInsight&quot;,&quot;Contact_Activity_Detail__c&quot;,&quot;Contact_Additional_Information__c&quot;,&quot;Contact_Relationship__c&quot;,&quot;ContentDocument&quot;,&quot;ContentDocumentListViewMapping&quot;,&quot;ContentNote&quot;,&quot;ContentVersion&quot;,&quot;ContentWorkspace&quot;,&quot;Contract&quot;,&quot;ContractContactRole&quot;,&quot;ContractLineItem&quot;,&quot;Contract_Line_Item__c&quot;,&quot;Contract__c&quot;,&quot;ConversationBroadcast&quot;,&quot;ConversationBroadcastEntry&quot;,&quot;Convert_Currency__c&quot;,&quot;CountryLangCurr_List__c&quot;,&quot;CountryNumberFormatMapping__c&quot;,&quot;CountryStateCity_Hieraracy__c&quot;,&quot;Country_List__c&quot;,&quot;County_List__c&quot;,&quot;CourseOffering&quot;,&quot;CoverageBenefit&quot;,&quot;CoverageBenefitItem&quot;,&quot;CoverageBenefitItemLimit&quot;,&quot;CoverageLimit&quot;,&quot;CoverageType&quot;,&quot;Covid_19_Surcharges__c&quot;,&quot;Covid_Exceptions__c&quot;,&quot;CrbnEmssnScopeAlloc&quot;,&quot;CrbnEmssnScopeAllocVal&quot;,&quot;Create_Quote_Local_Selection__c&quot;,&quot;CredentialStuffingEventStore&quot;,&quot;CreditInfoPageLayouts__c&quot;,&quot;CreditMemo&quot;,&quot;CreditMemoInvApplication&quot;,&quot;CreditMemoLine&quot;,&quot;Crisis&quot;,&quot;CustomAdminSetting__c&quot;,&quot;Custom_Favorite_Revision__c&quot;,&quot;Custom_Group_Name_Mapping__c&quot;,&quot;Custom_Picklist_Values__c&quot;,&quot;Customer&quot;,&quot;CustomerProperty&quot;,&quot;Customer_Event__c&quot;,&quot;Customer_Goal__c&quot;,&quot;Customer_Initiative__c&quot;,&quot;Customer_Project_Opportunity__c&quot;,&quot;Customer_Project_Parent_Opportunities__c&quot;,&quot;Customer_Project__c&quot;,&quot;Customer_Strategy_Opportunity__c&quot;,&quot;Customer_Strategy__c&quot;,&quot;Customer_Survey_Feedback__c&quot;,&quot;CventEvents__DataRefreshSettings__c&quot;,&quot;CventEvents__EnvironmentSettings__c&quot;,&quot;CventEvents__EventPurgeSettings__c&quot;,&quot;CventEvents__FieldsMapping__c&quot;,&quot;CventEvents__LogPurgeSettings__c&quot;,&quot;CventEvents__NominationRequestField__c&quot;,&quot;CventEvents__RecordMatchingCriteria__c&quot;,&quot;CventEvents__RecordMatchingRule__c&quot;,&quot;CventEvents__RecordTypeMatchingSettings__c&quot;,&quot;DG_Color_Settings__c&quot;,&quot;DMAPP__Dealmaker_AM_Plan_Unit_List__c&quot;,&quot;DMAPP__Dealmaker_AM_Report_List__c&quot;,&quot;DMAPP__Dealmaker_AM_Settings__c&quot;,&quot;DMAPP__Dealmaker_Account_Field__c&quot;,&quot;DMAPP__Dealmaker_Activity_Field__c&quot;,&quot;DMAPP__Dealmaker_Coach_Settings__c&quot;,&quot;DMAPP__Dealmaker_Contact_Field__c&quot;,&quot;DMAPP__Dealmaker_Core_Settings__c&quot;,&quot;DMAPP__Dealmaker_Insight_Settings__c&quot;,&quot;DMAPP__Dealmaker_Opp_Map_Filter_List__c&quot;,&quot;DMAPP__Dealmaker_Opportunity_Field__c&quot;,&quot;DMAPP__Dealmaker_Playbook_Settings__c&quot;,&quot;DMAPP__Dealmaker_Political_Map_Buyer_Roles__c&quot;,&quot;DMAPP__Dealmaker_Political_Map_Settings2__c&quot;,&quot;DMAPP__Dealmaker_Powerpoint__c&quot;,&quot;DMAPP__Dealmaker_Send_Usage_Settings__c&quot;,&quot;DMAPP__Dealmaker_Smart_OM_Settings__c&quot;,&quot;DMAPP__Made_To_Measure_Fields__c&quot;,&quot;DMAPP__Team_View_Plus_Views__c&quot;,&quot;DMMAX__DIESetting__c&quot;,&quot;DMMAX__MaxOpportunityPanelCfg__c&quot;,&quot;DMPPT__PPT_Customization__c&quot;,&quot;DMPPT__Secure_Folder_Settings__c&quot;,&quot;DOSMapping__c&quot;,&quot;DQA__c&quot;,&quot;DRM_DCS_Step_Names__c&quot;,&quot;DRM_Report_Dashboard_Analysis__c&quot;,&quot;Dashboard&quot;,&quot;DataAction&quot;,&quot;DataActionTarget&quot;,&quot;DataConnectorS3&quot;,&quot;DataLakeObjectInstance&quot;,&quot;DataStream&quot;,&quot;DataUseLegalBasis&quot;,&quot;DataUsePurpose&quot;,&quot;Data_Remediation_Config__c&quot;,&quot;DealChange_Concession_question_answers__c&quot;,&quot;DealGuidance__c&quot;,&quot;Deal_Change_Concession_Questions__c&quot;,&quot;Deal_Change_Root_Cause_Code__c&quot;,&quot;Deal_Overview_Permission__c&quot;,&quot;Deal_Terms__c&quot;,&quot;Deal_Version_Manager__c&quot;,&quot;Dealer_Entitlement_PLI__c&quot;,&quot;Default_Opportunity_Product__c&quot;,&quot;Default_Term_Classification_Type__c&quot;,&quot;DefinedSkill&quot;,&quot;DelegatedAccount&quot;,&quot;DeleteEvent&quot;,&quot;DeliveryTask&quot;,&quot;Department__c&quot;,&quot;Design_Center_Global_Region_Mapping__c&quot;,&quot;Design_Center_Request__c&quot;,&quot;DiagnosticSummary&quot;,&quot;DiagnosticSummaryDetail&quot;,&quot;DigitalSignature&quot;,&quot;DigitalWallet&quot;,&quot;Discount_Reason_Check__c&quot;,&quot;DistributorAuthorization&quot;,&quot;DocTemplateSectionCondition&quot;,&quot;DocumentChecklistItem&quot;,&quot;DocumentGenerationProcess&quot;,&quot;DocumentRecipient&quot;,&quot;DocumentTemplate&quot;,&quot;DocumentTemplateClause&quot;,&quot;DocumentTemplateContentDoc&quot;,&quot;DocumentTemplateSection&quot;,&quot;DocumentTemplateToken&quot;,&quot;Document_Output_Option__c&quot;,&quot;DrugDisplayTerm&quot;,&quot;DsarPolicyLog&quot;,&quot;DuplicateRecordItem&quot;,&quot;DuplicateRecordSet&quot;,&quot;ELTONGEHC__ELTON_Inventory_Org_Control__c&quot;,&quot;ELTONGEHC__Image_paths__c&quot;,&quot;ELTON__Data_Interface_Processing_History__c&quot;,&quot;ELTON__Data_Interface__c&quot;,&quot;ELTON__Equipment_AssignLoan_Settings__c&quot;,&quot;ELTON__Equipment_Assignment__c&quot;,&quot;ELTON__Equipment_Calendar__c&quot;,&quot;ELTON__Equipment_Chatter_Settings__c&quot;,&quot;ELTON__Equipment_Consumables__c&quot;,&quot;ELTON__Equipment_Count__c&quot;,&quot;ELTON__Equipment_Labels__c&quot;,&quot;ELTON__Equipment_Loan__c&quot;,&quot;ELTON__Equipment_Maintenance__c&quot;,&quot;ELTON__Equipment_Order_Line__c&quot;,&quot;ELTON__Equipment_Order__c&quot;,&quot;ELTON__Equipment_Quantity_Adjustment_History__c&quot;,&quot;ELTON__Equipment_Request_Preferences__c&quot;,&quot;ELTON__Equipment_Request__c&quot;,&quot;ELTON__Equipment_Reservation__c&quot;,&quot;ELTON__Equipment_Selection__c&quot;,&quot;ELTON__Equipment_Shipment__c&quot;,&quot;ELTON__Equipment_Status_Controls__c&quot;,&quot;ELTON__Equipment_Type__c&quot;,&quot;ELTON__Equipment__c&quot;,&quot;ELTON__Field_Mapping__c&quot;,&quot;ELTON__Insurance__c&quot;,&quot;ELTON__MobileScannerApplication__c&quot;,&quot;ELTON__Other__c&quot;,&quot;ELTON__Trigger_Control_Setting__c&quot;,&quot;ELTON__Users_on_Hold__c&quot;,&quot;EOMBillingAccountMap__c&quot;,&quot;EOMFieldMapping__c&quot;,&quot;ER_SR_Product_Portfolio__c&quot;,&quot;EdgeMart&quot;,&quot;EditionDefinition&quot;,&quot;Einstein_DataFlowJobId__c&quot;,&quot;ElectricityEmssnFctrSet&quot;,&quot;ElectronicMediaGroup&quot;,&quot;EmailContent&quot;,&quot;EmailMessage&quot;,&quot;EmailMessageRelation&quot;,&quot;EmailTemplate&quot;,&quot;Email_CFD_Templates__c&quot;,&quot;EmbeddedServiceConfig&quot;,&quot;EmbeddedServiceLiveAgent&quot;,&quot;EmbeddedServiceMenuSettings&quot;,&quot;EmpUserProvisionProcessErr&quot;,&quot;EmpUserProvisioningProcess&quot;,&quot;Employee&quot;,&quot;EmployeeAsset&quot;,&quot;EmployeeContact&quot;,&quot;EmployeeCrisisAssessment&quot;,&quot;EmployeeJob&quot;,&quot;EmployeeJobPosition&quot;,&quot;EngagementChannelType&quot;,&quot;EngagementProgram&quot;,&quot;EngagementProgramVersion&quot;,&quot;EnhancedEmailTemplate&quot;,&quot;EnhancedLetterhead&quot;,&quot;EnrolleeBenefit&quot;,&quot;EnrollmentEligibilityCriteria&quot;,&quot;Entitlement&quot;,&quot;EntityArchivingException&quot;,&quot;EntityArchivingJob&quot;,&quot;EntityArchivingSetup&quot;,&quot;EntityMilestone&quot;,&quot;EnvironmentHubMember&quot;,&quot;Equipment_De_Installation__c&quot;,&quot;Evaluate_Pharma_Tags__c&quot;,&quot;Event&quot;,&quot;Examination&quot;,&quot;Expense&quot;,&quot;ExpenseReport&quot;,&quot;ExpenseReportEntry&quot;,&quot;ExternalAccountHierarchy&quot;,&quot;Favorite_Event_Monitoring__c&quot;,&quot;Favorites__c&quot;,&quot;Feature_Switch__c&quot;,&quot;FeedItem&quot;,&quot;FieldServiceMobileExtension&quot;,&quot;FieldServiceMobileSettings&quot;,&quot;Field_Trip__Logistics__c&quot;,&quot;FileExtensionList__c&quot;,&quot;FinanceBalanceSnapshot&quot;,&quot;FinanceBook&quot;,&quot;FinancePeriod&quot;,&quot;FinanceTransaction&quot;,&quot;FinanceTransactionErrorLog&quot;,&quot;FinancialDeal&quot;,&quot;FinancialDealInteraction&quot;,&quot;FinancialDealParticipant&quot;,&quot;FinancialDealParty&quot;,&quot;FinancialDealProduct&quot;,&quot;FinclDealInteractionSummary&quot;,&quot;Fixed_Software_Costs__c&quot;,&quot;FlowDefinitionView&quot;,&quot;FlowOrchestrationHistory&quot;,&quot;FlowOrchestrationInstance&quot;,&quot;FlowOrchestrationStageInstance&quot;,&quot;FlowOrchestrationStepInstance&quot;,&quot;FlowOrchestrationWorkItem&quot;,&quot;FlowRecordTypeMapping__c&quot;,&quot;Folder&quot;,&quot;Forecasting_Filter_Setting__c&quot;,&quot;FrgtHaulingEmssnFctr&quot;,&quot;FrgtHaulingEnrgyUse&quot;,&quot;FtestAllContactPoint&quot;,&quot;FtestApplication2CInterface&quot;,&quot;FtestBigObjectLookup&quot;,&quot;FtestConcrete&quot;,&quot;FtestConcrete6&quot;,&quot;FtestConcrete7&quot;,&quot;FtestConcrete8&quot;,&quot;FtestContactPointEmail&quot;,&quot;FtestContactPointPhone&quot;,&quot;FtestZosUiPrototypeChild1&quot;,&quot;FtestZosUiPrototypeChild2&quot;,&quot;FtestZosUiPrototypeParent&quot;,&quot;FulfillmentOrder&quot;,&quot;FulfillmentOrderLineItem&quot;,&quot;GBLite__GBTestSettings__c&quot;,&quot;GBLite__GB_Global_Meta__c&quot;,&quot;GBLite__GB_Grid_Folder__c&quot;,&quot;GBLite__GB_Load_Cache__c&quot;,&quot;GBLite__GB_Save_Cache__c&quot;,&quot;GBLite__GB_User_Field_Settings__c&quot;,&quot;GBLite__GB_User_Filter_Settings__c&quot;,&quot;GBLite__GridBuddySettings__c&quot;,&quot;GBLite__GridBuddy_Usage_Analytics__c&quot;,&quot;GDPR_Language_Codes__c&quot;,&quot;GDPR_Regional_Mailbox__c&quot;,&quot;GDPR_Sender_Email__c&quot;,&quot;GECares_Community_Setting__c&quot;,&quot;GEDG__DG_Settings__c&quot;,&quot;GEDG__Deal_Guidance_Workspace__c&quot;,&quot;GEHCAskExpertQuestions__c&quot;,&quot;GEHCCommunityPublicGroup__c&quot;,&quot;GEHCDSA__Cat_Content_Junction__c&quot;,&quot;GEHCDSA__CategoryMobileConfig__c&quot;,&quot;GEHCDSA__Category__c&quot;,&quot;GEHCDSA__ContentReview__c&quot;,&quot;GEHCDSA__DSA_App_Setting__c&quot;,&quot;GEHCDSA__DSA_Playlist__c&quot;,&quot;GEHCDSA__MobileAppConfig__c&quot;,&quot;GEHCDSA__Playlist_Content_Junction__c&quot;,&quot;GEHCTopicCategoryHeaderCustomLabels__c&quot;,&quot;GEHCTrainingVideo__c&quot;,&quot;GEHC_All_Country_Region__c&quot;,&quot;GEHC_BC_Custom_Batch_Filter_Support__c&quot;,&quot;GEHC_Community_Topic_Translations__c&quot;,&quot;GEHC_ForsevaConfiguration__c&quot;,&quot;GEIDPBatchQuery__c&quot;,&quot;GEIDPContactMaskTestQuery__c&quot;,&quot;GEIDPContact_Opt_Out__c&quot;,&quot;GEIDPCountryListISO__c&quot;,&quot;GEIDPCustomAttributeClassInfo__c&quot;,&quot;GEIDPGSSAppIntegration__c&quot;,&quot;GEIDPGSSWelcomeMailLinks__c&quot;,&quot;GEIDPHLSEndPointURL__c&quot;,&quot;GEIDPLanguageList__c&quot;,&quot;GEIDPLocaleList__c&quot;,&quot;GEIDPLoginTextInfo__c&quot;,&quot;GEIDPProfileUpdateReqFieldsMapping__c&quot;,&quot;GEIDPProgressiveAppMandatoryParam__c&quot;,&quot;GEIDPRegistrationClassInfo__c&quot;,&quot;GEIDPSocial_Email_Domain__c&quot;,&quot;GEIDPUDXRegionConfig__c&quot;,&quot;GEIDP_ByPass_Components__c&quot;,&quot;GEIDP_Google_Captcha__c&quot;,&quot;GEIDP_LeadContactMapping__c&quot;,&quot;GEMDM__GEMDMCountryList__c&quot;,&quot;GEMDM__GEMDMCustomerSearch__c&quot;,&quot;GEMDM__GEMDMStateList__c&quot;,&quot;GEMDM__GE_MDM_Account_Field_Mapping__c&quot;,&quot;GEMDM__GE_MDM_Account_Search_Facets__c&quot;,&quot;GEMDM__GE_MDM_Account_Search_Field_Mapping__c&quot;,&quot;GEMDM__GE_MDM_Commercial_Hierarchy_Fields__c&quot;,&quot;GEMDM__GE_MDM_DUNS_Number_API_Name__c&quot;,&quot;GEMDM__GE_MDM_Event_Processing_Field_Mapping__c&quot;,&quot;GEMDM__GE_MDM_Event_Processing__c&quot;,&quot;GEMDM__GE_MDM_Failure_Notification_Recipient__c&quot;,&quot;GEMDM__GE_MDM_General_Package_Settings__c&quot;,&quot;GEMDM__GE_MDM_Integration_Activity_Settings__c&quot;,&quot;GEMDM__GE_MDM_MDM_Integration_Settings__c&quot;,&quot;GEMDM__GE_MDM_Master_Approved_Record_Type__c&quot;,&quot;GEMDM__GE_MDM_Merge_History__c&quot;,&quot;GEMDM__GE_MDM_OneKYC_Address_Label__c&quot;,&quot;GEMDM__GE_MDM_OneKYC_Inputs__c&quot;,&quot;GEMDM__GE_MDM_OneKYC_Sentry_Web_Services__c&quot;,&quot;GEMDM__GE_MDM_Start_KYC_Record_Type__c&quot;,&quot;GEMDM__GE_MDM_Subscription_Web_Service_Inputs__c&quot;,&quot;GEMDM__GE_MDM_Upload_Documents__c&quot;,&quot;GE_Goal__c&quot;,&quot;GE_HC_MT_Catalog__c&quot;,&quot;GE_HC_MT_PTDModality__c&quot;,&quot;GE_HC_MT_PTD_AgendaModuleTable__c&quot;,&quot;GE_HC_MT_SFDCForm__c&quot;,&quot;GE_HC_MT_TrainingMasterSearchFilters__c&quot;,&quot;GE_HC_MT_TrainingMaster__c&quot;,&quot;GE_HC_MT_Trigger_Setting__c&quot;,&quot;GE_X_Sell__GE_xSell_Account_Field_Mapping__c&quot;,&quot;GE_X_Sell__GE_xSell_MDM_Account_Criteria__c&quot;,&quot;GE_X_Sell__GE_xSell_Opportunity_Field_Mapping__c&quot;,&quot;GE_X_Sell__GE_xSell_Referral_Field_Mapping__c&quot;,&quot;GE_X_Sell__Lead_Sharing_Statistics_c__x&quot;,&quot;GE_X_Sell__Opportunity__x&quot;,&quot;GE_X_Sell__Referral__x&quot;,&quot;GE_X_Sell__User_Manager_Tree__c&quot;,&quot;GGO_NUTS_Settings__c&quot;,&quot;GON_Notify__c&quot;,&quot;GON_SO__c&quot;,&quot;GPMEndpoints__c&quot;,&quot;GPMRegionMapping__c&quot;,&quot;GPM_Product_Tier_Map__c&quot;,&quot;General_Settings__c&quot;,&quot;GeneratedDocument&quot;,&quot;GeneratedDocumentSection&quot;,&quot;GeneratedWaste&quot;,&quot;GenericVisitTask&quot;,&quot;GenericVisitTaskContext&quot;,&quot;Geo_Status__c&quot;,&quot;Global_EQ_AutoReapprovals__c&quot;,&quot;Global_Geography_Hierarchy__c&quot;,&quot;Global_Product_Hierarchy__c&quot;,&quot;Global_Region_CPQ_Settings__c&quot;,&quot;Global_Region_Name__c&quot;,&quot;Global_Region_Term_vs_Annual_Amount__c&quot;,&quot;Global_Region__c&quot;,&quot;Global_Region_for_Automatic_Oppty__c&quot;,&quot;Global_Region_for_Order_to_Oppty_Update__c&quot;,&quot;Global_Roll_UP_P_L_Definition__c&quot;,&quot;Global_Sub_Region_Geography_Names__c&quot;,&quot;GnrcVstKeyPerformanceInd&quot;,&quot;GnrcVstTaskContextRelation&quot;,&quot;Goal_Action__c&quot;,&quot;GroundTravelEmssnFctr&quot;,&quot;GroundTravelEnrgyUse&quot;,&quot;GuestBuyerProfile&quot;,&quot;HCIT_Product_Portfolio_Based_Approvals__c&quot;,&quot;HFS_Rate_Card__c&quot;,&quot;HealthCareDiagnosis&quot;,&quot;HealthCareProcedure&quot;,&quot;HealthCondition&quot;,&quot;HealthConditionDetail&quot;,&quot;HealthcareFacility&quot;,&quot;HealthcareFacilityNetwork&quot;,&quot;HealthcarePayerNetwork&quot;,&quot;HealthcarePractitionerFacility&quot;,&quot;HealthcareProvider&quot;,&quot;HealthcareProviderNpi&quot;,&quot;HealthcareProviderSpecialty&quot;,&quot;HealthcareProviderTaxonomy&quot;,&quot;Helium_Information__c&quot;,&quot;Holiday&quot;,&quot;HomePageNotification__c&quot;,&quot;HotelStayEmssnFctr&quot;,&quot;HotelStayEnrgyUse&quot;,&quot;IBAutomation__c&quot;,&quot;IB_Asset_Attribute__c&quot;,&quot;IB_Asset_Custom_Access__c&quot;,&quot;IB_Asset__c&quot;,&quot;IB_Product__c&quot;,&quot;IB_Products_Subregions_Mapping__c&quot;,&quot;IB_Settings__c&quot;,&quot;IB_Source__c&quot;,&quot;IBautomationAccounts__c&quot;,&quot;IC_Unit_Services__c&quot;,&quot;IDQ_Country_List__c&quot;,&quot;IMO5IntegrationCS__c&quot;,&quot;IPAddressRange&quot;,&quot;ITOKYC_AcctStatePostalReq__c&quot;,&quot;ITOKYC_AdminProfileList__c&quot;,&quot;ITOKYC_EmailDL__c&quot;,&quot;ITOKYC_FMModalityEmails__c&quot;,&quot;ITOKYC_ITOTeamMapProvice__c&quot;,&quot;ITOKYC_Queue_Desc__c&quot;,&quot;ITOKYC_RegionOperation__c&quot;,&quot;ITOKYC_RegionValues__c&quot;,&quot;ITOKYC_SHS_Queue_Desc_Sendback__c&quot;,&quot;ITOKYC_SHS_Queue_Desc__c&quot;,&quot;ITOKYC_SelectTeamMapping__c&quot;,&quot;Identifier&quot;,&quot;IdentityDocument&quot;,&quot;IdentityResolution&quot;,&quot;Image&quot;,&quot;InStoreLocation&quot;,&quot;Incident&quot;,&quot;IncludedLicenseDefinition&quot;,&quot;India_Region_Quote_Setting__c&quot;,&quot;Individual&quot;,&quot;IndividualApplication&quot;,&quot;InflationRate&quot;,&quot;InfoAuthRequestForm&quot;,&quot;InfoAuthorizationRequest&quot;,&quot;InsightsApplication&quot;,&quot;InsightsExternalData&quot;,&quot;InsightsExternalDataPart&quot;,&quot;InspectionAssessmentInd&quot;,&quot;InspectionType&quot;,&quot;InspectionViolation&quot;,&quot;Install_Cost__c&quot;,&quot;Installation_Attachment_Type__c&quot;,&quot;Installation_Contacts__c&quot;,&quot;Installation_For_CFD_Mapping__c&quot;,&quot;Installation_Settings__c&quot;,&quot;Installation__c&quot;,&quot;InsuranceClaimAsset&quot;,&quot;InsurancePolicy&quot;,&quot;InsurancePolicyAsset&quot;,&quot;InsurancePolicyCoverage&quot;,&quot;InsurancePolicyMemberAsset&quot;,&quot;InsurancePolicyOwner&quot;,&quot;InsurancePolicyParticipant&quot;,&quot;InsurancePolicySurcharge&quot;,&quot;InsurancePolicyTransaction&quot;,&quot;InsuranceProfile&quot;,&quot;IntegrationFieldMap__c&quot;,&quot;Integration_General_Settings__c&quot;,&quot;Integration_Id_Values__c&quot;,&quot;Integration_System_Logs_Setting__c&quot;,&quot;Interaction&quot;,&quot;InteractionAttendee&quot;,&quot;InteractionParticipant&quot;,&quot;InteractionSumDiscussedAccount&quot;,&quot;InteractionSummary&quot;,&quot;InteractionSummaryParticipant&quot;,&quot;InternalOrganizationUnit&quot;,&quot;Invoice&quot;,&quot;InvoiceAddressGroup&quot;,&quot;InvoiceLine&quot;,&quot;Japan_Sales_Service_MCT_BR__c&quot;,&quot;JobFamily&quot;,&quot;JobPosition&quot;,&quot;JobProfile&quot;,&quot;JournalSubType&quot;,&quot;JournalType&quot;,&quot;KBMAX__Quote_Product__c&quot;,&quot;KBMAX__Quote__c&quot;,&quot;KnowledgeArticleVersion&quot;,&quot;LCT__c&quot;,&quot;LSAccountChatterPost__c&quot;,&quot;LS_Country_List__c&quot;,&quot;LS_German_Managers__c&quot;,&quot;LS_State_List__c&quot;,&quot;LTEVAlidationValues__c&quot;,&quot;LandingPage&quot;,&quot;LandingPageContent&quot;,&quot;Language_List__c&quot;,&quot;Language_To_ISO_Code__c&quot;,&quot;Languages_Available__c&quot;,&quot;Lead&quot;,&quot;Lead_Product_Line_Item__c&quot;,&quot;LearnerSkill&quot;,&quot;LearningItem&quot;,&quot;LegalEntity&quot;,&quot;Lens&quot;,&quot;LicensingError&quot;,&quot;LicensingRequest&quot;,&quot;LicensingRequestOrderItem&quot;,&quot;LicensingSnapshotRequest&quot;,&quot;Line_Item_Billing_Term__c&quot;,&quot;Line_Item_Product_Pricing_Detail__c&quot;,&quot;ListEmail&quot;,&quot;ListEmailSentResult&quot;,&quot;LiveAgentSession&quot;,&quot;LiveChatSensitiveDataRule&quot;,&quot;LiveChatTranscript&quot;,&quot;LiveChatVisitor&quot;,&quot;LoanApplicant&quot;,&quot;LoanApplicantAddress&quot;,&quot;LoanApplicantAsset&quot;,&quot;LoanApplicantDeclaration&quot;,&quot;LoanApplicantEmployment&quot;,&quot;LoanApplicantIncome&quot;,&quot;LoanApplicantLiability&quot;,&quot;LoanApplicationAsset&quot;,&quot;LoanApplicationFinancial&quot;,&quot;LoanApplicationLiability&quot;,&quot;LoanApplicationProperty&quot;,&quot;LoanApplicationTitleHolder&quot;,&quot;LocWaitlistMsgTemplate&quot;,&quot;Location&quot;,&quot;LocationGroup&quot;,&quot;LocationGroupAssignment&quot;,&quot;LocationTrustMeasure&quot;,&quot;LocationWaitlist&quot;,&quot;LocationWaitlistedParty&quot;,&quot;LoyaltyLedger&quot;,&quot;LoyaltyMemberCurrency&quot;,&quot;LoyaltyMemberTier&quot;,&quot;LoyaltyPartnerProduct&quot;,&quot;LoyaltyPgmGroupMbrRlnsp&quot;,&quot;LoyaltyProgram&quot;,&quot;LoyaltyProgramCurrency&quot;,&quot;LoyaltyProgramMbrPromotion&quot;,&quot;LoyaltyProgramMember&quot;,&quot;LoyaltyProgramMemberCase&quot;,&quot;LoyaltyProgramPartner&quot;,&quot;LoyaltyProgramProcess&quot;,&quot;LoyaltyProgramProcessParameter&quot;,&quot;LoyaltyProgramProcessRule&quot;,&quot;LoyaltyTier&quot;,&quot;LoyaltyTierBenefit&quot;,&quot;LoyaltyTierGroup&quot;,&quot;MCTCustomSettings__c&quot;,&quot;MCTSalesArea__c&quot;,&quot;MCT_Europe_Report_Language__c&quot;,&quot;MCT_Integration_User__c&quot;,&quot;MDM_ManageAccountConfig__c&quot;,&quot;MPM4_BASE__Milestone1_Expense__c&quot;,&quot;MPM4_BASE__Milestone1_Log__c&quot;,&quot;MPM4_BASE__Milestone1_Milestone__c&quot;,&quot;MPM4_BASE__Milestone1_Program__c&quot;,&quot;MPM4_BASE__Milestone1_Project__c&quot;,&quot;MPM4_BASE__Milestone1_Settings__c&quot;,&quot;MPM4_BASE__Milestone1_Task__c&quot;,&quot;MPM4_BASE__Milestone1_Time__c&quot;,&quot;MPM4_BASE__Risk__c&quot;,&quot;MPM4_BASE__TH_User_Settings__c&quot;,&quot;MS_BillingTerm_Template_Items__c&quot;,&quot;MS_BillingTerm_Template__c&quot;,&quot;MS_BillingTerm__c&quot;,&quot;MUST_Integration_Country_Mapping__c&quot;,&quot;Macro&quot;,&quot;Magnetic_Containment__c&quot;,&quot;MaintenanceAsset&quot;,&quot;MaintenancePlan&quot;,&quot;MaintenanceWorkRule&quot;,&quot;ManagedContentVariant&quot;,&quot;Manufacturing_Site_SPC__c&quot;,&quot;MarketSegment&quot;,&quot;MarketSegmentActivation&quot;,&quot;MarketingAppExtActivity&quot;,&quot;MarketingAppExtAssignment&quot;,&quot;MarketingAppExtension&quot;,&quot;MarketingForm&quot;,&quot;MarketingLink&quot;,&quot;MarketingLinkContent&quot;,&quot;MediaChannel&quot;,&quot;MediaContentTitle&quot;,&quot;Medication&quot;,&quot;MedicationRequest&quot;,&quot;MedicationStatement&quot;,&quot;MedicinalIngredient&quot;,&quot;MemberBenefit&quot;,&quot;MemberPlan&quot;,&quot;MessagingChannel&quot;,&quot;MessagingDeliveryError&quot;,&quot;MessagingEndUser&quot;,&quot;MessagingSession&quot;,&quot;MessagingTemplate&quot;,&quot;MktCalculatedInsight&quot;,&quot;MobileSettingsAssignment&quot;,&quot;ModalityList__c&quot;,&quot;Modality_For_Eset_Link__c&quot;,&quot;Modality_For_VSA_Finish__c&quot;,&quot;Modality__c&quot;,&quot;Monitoring_Assignment_Matrix__c&quot;,&quot;Monthly_Operating_Rates__c&quot;,&quot;MultipartyInfoAuthRequest&quot;,&quot;MyPBackOfficeTask__c&quot;,&quot;My_Favorites_Settings__c&quot;,&quot;NETDET_IP_Addresses__c&quot;,&quot;NL_Price_Matrix_Japan__c&quot;,&quot;NamespaceRegistry&quot;,&quot;NeedHelpLinks__c&quot;,&quot;NetworkReferencedObject&quot;,&quot;Note&quot;,&quot;Notification_Criteria_Fields__c&quot;,&quot;Notification_Defaults__c&quot;,&quot;Notification_Framework_Settings__c&quot;,&quot;Notification_Items__c&quot;,&quot;Notification_Queue_Email__c&quot;,&quot;Notification_Queue__c&quot;,&quot;Notification_Record_Ownership__c&quot;,&quot;Notification_Rule__c&quot;,&quot;Notification_Setting__c&quot;,&quot;Notification_Template_Fields__c&quot;,&quot;OAuthCredentials__c&quot;,&quot;OAuthToken__c&quot;,&quot;OCCR_AddConfig_Parameter__c&quot;,&quot;OCCR_Reporting__c&quot;,&quot;OCLI_LostReason_Settings__c&quot;,&quot;OCLI_Status_Settings__c&quot;,&quot;OCLI_Type_Settings__c&quot;,&quot;ODS_Product_Protfolio__c&quot;,&quot;OP_Target_Master__c&quot;,&quot;ObjectStateDefinition&quot;,&quot;ObjectStateTransition&quot;,&quot;ObjectStateValue&quot;,&quot;ObjectTerritory2Association&quot;,&quot;Object_Landing_Page_Settings__c&quot;,&quot;OccupationLicenseApplication&quot;,&quot;OcrDocumentScanResult&quot;,&quot;Omitted_Functionality__c&quot;,&quot;OmniDataPack&quot;,&quot;OmniDataTransform&quot;,&quot;OmniDataTransformItem&quot;,&quot;OmniESignatureTemplate&quot;,&quot;OmniProcess&quot;,&quot;OmniProcessCompilation&quot;,&quot;OmniProcessElement&quot;,&quot;OmniProcessTransientData&quot;,&quot;OmniScriptSavedSession&quot;,&quot;OmniUiCard&quot;,&quot;OpenActivity&quot;,&quot;OperatingHours&quot;,&quot;OperatingHoursHoliday&quot;,&quot;OperatingUnitMap__c&quot;,&quot;Opp_Close_Step__c&quot;,&quot;Opp_Close_To_Future_RecordType_Settings__c&quot;,&quot;Opp_Products_Report__c&quot;,&quot;Opp_Sync_Mail__c&quot;,&quot;Opp_Tender_Status_Settings__c&quot;,&quot;Opportunity&quot;,&quot;OpportunityContactRole&quot;,&quot;OpportunityContactRoleSuggestionInsight&quot;,&quot;OpportunityHistory&quot;,&quot;OpportunityIBAssetJunction__c&quot;,&quot;OpportunityInsight&quot;,&quot;OpportunityLineItem&quot;,&quot;OpportunityLineItemSchedule&quot;,&quot;OpportunityParticipant&quot;,&quot;OpportunityPartner&quot;,&quot;OpportunitySplit&quot;,&quot;OpportunityTeamMember&quot;,&quot;Opportunity_Amendment_Request_Settings__c&quot;,&quot;Opportunity_Amendment_Result_Settings__c&quot;,&quot;Opportunity_Competitor_Setting__c&quot;,&quot;Opportunity_Competitor__c&quot;,&quot;Opportunity_GE_Bid_Decision_Settings__c&quot;,&quot;Opportunity_Order_Package__c&quot;,&quot;Opportunity_Owner_History__c&quot;,&quot;Opportunity_Sales_Forecast_Category__c&quot;,&quot;Opportunity_Step_settings__c&quot;,&quot;Opportunity_Tender_Type_Settings__c&quot;,&quot;Opportunity_owner_update_settings__c&quot;,&quot;Oppty_Primary_Reason_for_No_Bid_Settings__c&quot;,&quot;Oppty_Territory_Mapping__c&quot;,&quot;Order&quot;,&quot;OrderAction&quot;,&quot;OrderAdjustmentGroup&quot;,&quot;OrderAdjustmentGroupSummary&quot;,&quot;OrderChangeLog&quot;,&quot;OrderDeliveryGroup&quot;,&quot;OrderDeliveryGroupSummary&quot;,&quot;OrderDeliveryMethod&quot;,&quot;OrderItem&quot;,&quot;OrderItemAdjustmentLineItem&quot;,&quot;OrderItemAdjustmentLineSummary&quot;,&quot;OrderItemConsumptionRate&quot;,&quot;OrderItemConsumptionSchedule&quot;,&quot;OrderItemSummary&quot;,&quot;OrderItemSummaryChange&quot;,&quot;OrderItemTaxLineItem&quot;,&quot;OrderItemTaxLineItemSummary&quot;,&quot;OrderPaymentSummary&quot;,&quot;OrderPreview_Permission__c&quot;,&quot;OrderPreview_Select_Template__c&quot;,&quot;OrderRTLOV__c&quot;,&quot;OrderSummary&quot;,&quot;OrderSummaryRoutingSchedule&quot;,&quot;Order_Change_Detail__c&quot;,&quot;Order_Detail_Task_LTV_Code__c&quot;,&quot;Order_Detail_Task__c&quot;,&quot;Order_Forecast_Category_Settings__c&quot;,&quot;Order_Forecast_Dimension__c&quot;,&quot;Order_Forecast_History__c&quot;,&quot;Order_Forecast_OP__c&quot;,&quot;Order_Header_Global__c&quot;,&quot;Order_Header__c&quot;,&quot;Order_Notification__c&quot;,&quot;Order_Preview_Mandatory_Fields__c&quot;,&quot;Order_RTS_Interface_Log__c&quot;,&quot;Order_Shortage_Detail__c&quot;,&quot;Order_Status__c&quot;,&quot;Order__c&quot;,&quot;OrgMetric&quot;,&quot;OrgMetricScanResult&quot;,&quot;OrgMetricScanSummary&quot;,&quot;OtherComponentTask&quot;,&quot;OtherEmssnFctrSet&quot;,&quot;OtherEmssnFctrSetItem&quot;,&quot;PEGA_Order_Package__c&quot;,&quot;POS_Email_Notifications__c&quot;,&quot;Parent_Opportunity_Settings__c&quot;,&quot;Parent_Opportunity__c&quot;,&quot;Parent_Quote_GR_Mapping__c&quot;,&quot;PartnerFundAllocation&quot;,&quot;PartnerFundClaim&quot;,&quot;PartnerFundRequest&quot;,&quot;PartnerMarketingBudget&quot;,&quot;PartyConsent&quot;,&quot;PartyIncome&quot;,&quot;PatientHealthReaction&quot;,&quot;PatientImmunization&quot;,&quot;PatientMedicalProcedure&quot;,&quot;PatientMedicalProcedureDetail&quot;,&quot;PatientMedicationDosage&quot;,&quot;Payment&quot;,&quot;PaymentApplicationMethod&quot;,&quot;PaymentAuthAdjustment&quot;,&quot;PaymentAuthorization&quot;,&quot;PaymentBatchRun&quot;,&quot;PaymentGateway&quot;,&quot;PaymentGatewayLog&quot;,&quot;PaymentLineInvoice&quot;,&quot;PaymentPolicy&quot;,&quot;PaymentSchedule&quot;,&quot;PaymentScheduleItem&quot;,&quot;PaymentTerm&quot;,&quot;PaymentTermItem&quot;,&quot;PaymentTreatment&quot;,&quot;PcmtEmssnFctrSet&quot;,&quot;PcmtEmssnFctrSetItem&quot;,&quot;PegaPE__Pega_Gadget_Configuration__c&quot;,&quot;Pega_Global_Regions__c&quot;,&quot;PendingOrderSummary&quot;,&quot;People_soft_field_Maping__c&quot;,&quot;PersonAccount&quot;,&quot;PersonEducation&quot;,&quot;PersonEmployment&quot;,&quot;PersonExamination&quot;,&quot;PersonLanguage&quot;,&quot;PersonLifeEvent&quot;,&quot;PersonList&quot;,&quot;PersonListMember&quot;,&quot;PersonName&quot;,&quot;PgmRebateTypBnftMapping&quot;,&quot;PlanBenefit&quot;,&quot;PlanBenefitItem&quot;,&quot;PlatformLicenseDefinition&quot;,&quot;PoS_Term_Opportunity_PortFolio_Matrix__c&quot;,&quot;Policy_Risk_Flag__c&quot;,&quot;Polygon&quot;,&quot;Postal_Code__c&quot;,&quot;Pre_Install_Items__c&quot;,&quot;Pre_Order_Consultation_POC__c&quot;,&quot;Precise_Address__c&quot;,&quot;PreliminaryApplicationRef&quot;,&quot;Prevent_Task_Types_Duplicate__c&quot;,&quot;PriceAdjustmentSchedule&quot;,&quot;Pricebook2&quot;,&quot;PricebookEntry&quot;,&quot;Primary_Secondary_ReasonMapping__c&quot;,&quot;Probe_and_Coil_Addition__c&quot;,&quot;Probe_and_Coil_Data1__c&quot;,&quot;Problem&quot;,&quot;ProblemIncident&quot;,&quot;Problem_Case_Scoring__c&quot;,&quot;ProcessException&quot;,&quot;ProcessInstanceHistory&quot;,&quot;ProcessInstanceStep&quot;,&quot;ProcessInstanceWorkitem&quot;,&quot;Producer&quot;,&quot;ProducerCommission&quot;,&quot;ProducerPolicyAssignment&quot;,&quot;Product2&quot;,&quot;Product2DataTranslation&quot;,&quot;Product2__c&quot;,&quot;ProductAttribute&quot;,&quot;ProductAttributeSet&quot;,&quot;ProductAttributeSetItem&quot;,&quot;ProductAttributeSetProduct&quot;,&quot;ProductAvailabilityProjection&quot;,&quot;ProductCatalog&quot;,&quot;ProductCategory&quot;,&quot;ProductCategoryDataTranslation&quot;,&quot;ProductCategoryMedia&quot;,&quot;ProductCategoryProduct&quot;,&quot;ProductConsumed&quot;,&quot;ProductConsumedState&quot;,&quot;ProductConsumptionSchedule&quot;,&quot;ProductCoverage&quot;,&quot;ProductCoverageLimit&quot;,&quot;ProductFulfillmentLocation&quot;,&quot;ProductItem&quot;,&quot;ProductItemTransaction&quot;,&quot;ProductLicenseMap&quot;,&quot;ProductMedia&quot;,&quot;ProductQuantityRule&quot;,&quot;ProductRequest&quot;,&quot;ProductRequestLineItem&quot;,&quot;ProductRequired&quot;,&quot;ProductSellingModel&quot;,&quot;ProductSellingModelOption&quot;,&quot;ProductServiceCampaign&quot;,&quot;ProductServiceCampaignItem&quot;,&quot;ProductTransfer&quot;,&quot;ProductTransferState&quot;,&quot;ProductWarrantyTerm&quot;,&quot;Product_Access__c&quot;,&quot;Product_Activity_Detail__c&quot;,&quot;Product_Area_Code_Details__c&quot;,&quot;Product_Attribute_Value_Ext_1__c&quot;,&quot;Product_Charge_Type_Mapping__c&quot;,&quot;Product_Commercial_LifeCycle__c&quot;,&quot;Product_Complexity_Score_Settings__c&quot;,&quot;Product_Country_Material_Setting__c&quot;,&quot;Product_Country_Name_Setting__c&quot;,&quot;Product_Integration_Object__c&quot;,&quot;Product_Lead_Time__c&quot;,&quot;Product_Master__c&quot;,&quot;Product_Portfolio__c&quot;,&quot;Product_Pricing_Detail__c&quot;,&quot;Product_Pricing_Information__c&quot;,&quot;Product_Score_Chevron_Settings__c&quot;,&quot;Product_Special_Access_Request__c&quot;,&quot;Product_Special_Access__c&quot;,&quot;ProgramRebateTypPayoutSrc&quot;,&quot;ProgramRebateType&quot;,&quot;ProgramRebateTypeBenefit&quot;,&quot;ProgramRebateTypeFilter&quot;,&quot;ProgramRebateTypePayout&quot;,&quot;ProgramRebateTypeProduct&quot;,&quot;ProgramRebateTypeReference&quot;,&quot;Project_Contacts__c&quot;,&quot;Project_Stakeholder__c&quot;,&quot;Promotion&quot;,&quot;PromotionChannel&quot;,&quot;PromotionLoyaltyPtnrProdt&quot;,&quot;PromotionMarketSegment&quot;,&quot;PromotionProduct&quot;,&quot;PromotionProductCategory&quot;,&quot;PromotionQualifier&quot;,&quot;PromotionSegment&quot;,&quot;PromotionSegmentBuyerGroup&quot;,&quot;PromotionSegmentSalesStore&quot;,&quot;PromotionTarget&quot;,&quot;Proposal_Line_Item_Billing_Term__c&quot;,&quot;ProrationPolicy&quot;,&quot;ProviderNetworkContract&quot;,&quot;ProviderNetworkTier&quot;,&quot;ProviderSearchSyncLog&quot;,&quot;ProvisioningRun&quot;,&quot;ProvisioningRunEvent&quot;,&quot;PublicComplaint&quot;,&quot;PublicProgram&quot;,&quot;PurchaseQuantityRule&quot;,&quot;PurchaserPlan&quot;,&quot;PurchaserPlanAssn&quot;,&quot;QuickText&quot;,&quot;Quote&quot;,&quot;QuoteExtension__c&quot;,&quot;QuoteItemTaxItem&quot;,&quot;QuoteLineItem&quot;,&quot;QuoteStatusDetails__c&quot;,&quot;Quote_Contact_Role__c&quot;,&quot;Quote_Defaults__c&quot;,&quot;Quote_Remediate1__c&quot;,&quot;Quote_Remediate2__c&quot;,&quot;Quote_Remediate__c&quot;,&quot;RR_from_Task_Custom_Setting__c&quot;,&quot;RTSInterfaceCS__c&quot;,&quot;RTS_Enhancement__c&quot;,&quot;RebateMemberProductAggregate&quot;,&quot;RebatePayment&quot;,&quot;RebatePayoutAdjustment&quot;,&quot;RebateProgram&quot;,&quot;RebateProgramMember&quot;,&quot;RebateProgramMemberPayout&quot;,&quot;RebateProgramPayoutPeriod&quot;,&quot;RecalcDateUpdate__c&quot;,&quot;ReceivedDocument&quot;,&quot;Recommendation&quot;,&quot;RecordAction&quot;,&quot;RecordAlert&quot;,&quot;RecordMergeHistory&quot;,&quot;RecordType&quot;,&quot;RecordsetFilterCriteria&quot;,&quot;RecordsetFilterCriteriaRule&quot;,&quot;RefrigerantEmssnFctr&quot;,&quot;Refund&quot;,&quot;RefundLinePayment&quot;,&quot;RegAuthorizationTypeProduct&quot;,&quot;Region_For_VSA_Finish__c&quot;,&quot;Region_List__c&quot;,&quot;Region_Listing__c&quot;,&quot;Region_Settings__c&quot;,&quot;Regions_For_Eset_Link__c&quot;,&quot;RegulatoryAuthority&quot;,&quot;RegulatoryAuthorizationType&quot;,&quot;RegulatoryCode&quot;,&quot;RegulatoryCodeAssessmentInd&quot;,&quot;RegulatoryCodeViolation&quot;,&quot;RegulatoryTrxnFee&quot;,&quot;RegulatoryTrxnFeeItem&quot;,&quot;RegulatoryTrxnFeePayment&quot;,&quot;Reltio_Attribute_Data_type_mapping__c&quot;,&quot;Reltio_Country_Attributes__c&quot;,&quot;Reminder_Time_List__c&quot;,&quot;RentalCarEmssnFctr&quot;,&quot;RentalCarEnrgyUse&quot;,&quot;ReplyText&quot;,&quot;Report&quot;,&quot;ReportAnomalyEventStore&quot;,&quot;Reservation_buffer_days__c&quot;,&quot;ResidentialLoanApplication&quot;,&quot;ResourceAbsence&quot;,&quot;ResourcePreference&quot;,&quot;Resource_Request_Record_Types__c&quot;,&quot;RetailLocationGroup&quot;,&quot;RetailStore&quot;,&quot;RetailStoreGroupAssignment&quot;,&quot;RetailStoreKpi&quot;,&quot;RetailVisitKpi&quot;,&quot;ReturnOrder&quot;,&quot;ReturnOrderItemAdjustment&quot;,&quot;ReturnOrderItemTax&quot;,&quot;ReturnOrderLineItem&quot;,&quot;RevRecogTreatmentItemGroup&quot;,&quot;RevenueDistributionMethod&quot;,&quot;RevenueElement&quot;,&quot;RevenueElementDistribution&quot;,&quot;RevenueRecogTreatmentItem&quot;,&quot;RevenueRecognitionPolicy&quot;,&quot;RevenueRecognitionTreatment&quot;,&quot;RevenueTransactionErrorLog&quot;,&quot;Revenue__c&quot;,&quot;ReviewRequests__c&quot;,&quot;SCORE_Approval_Threshold_Matrix__c&quot;,&quot;SCORE_Policy_6_0__c&quot;,&quot;SCORE_Product_Portfolio_Matrix__c&quot;,&quot;SDI_Business_Type__c&quot;,&quot;SFDCFieldTranslations__c&quot;,&quot;SFDC_Siebel_Integration__c&quot;,&quot;SF_License_Costs__c&quot;,&quot;SMAXAttributeSettings__c&quot;,&quot;SSO_API__c&quot;,&quot;SSO_ID__c&quot;,&quot;SVMXC__Batch_Lot_Master__c&quot;,&quot;SVMXC__Config_Change_Detail__c&quot;,&quot;SVMXC__Field_Default_Rules__c&quot;,&quot;SVMXC__SM_Application_Feature__c&quot;,&quot;SVMXC__SM_Appointment_Status__c&quot;,&quot;SVMXC__SM_Batch_Lot__c&quot;,&quot;SVMXC__SM_Change_Order_Configuration__c&quot;,&quot;SVMXC__SM_Change_Order_Criteria__c&quot;,&quot;SVMXC__SM_Change_Order_Line__c&quot;,&quot;SVMXC__SM_Change_Order_Log__c&quot;,&quot;SVMXC__SM_Change_Order_Parts__c&quot;,&quot;SVMXC__SM_Change_Order__c&quot;,&quot;SVMXC__SM_Crew_Resource__c&quot;,&quot;SVMXC__SM_Crew__c&quot;,&quot;SVMXC__SM_Feature_Permission__c&quot;,&quot;SVMXC__SM_IG_Job_Child__c&quot;,&quot;SVMXC__SM_IG_Job_Request__c&quot;,&quot;SVMXC__SM_IoT_Field_Mapping__c&quot;,&quot;SVMXC__SM_Recent_Items__c&quot;,&quot;SVMXC__SM_SB_Queue_Inbound__c&quot;,&quot;SVMXC__SM_SB_Queue_Outbound__c&quot;,&quot;SVMXC__SM_SFA_Process__c&quot;,&quot;SVMXC__SM_SFMTransactionSync__c&quot;,&quot;SVMXC__SPM_Mean_Time_Between_Failure__c&quot;,&quot;SWB_General_Settings__c&quot;,&quot;SalesAgreement&quot;,&quot;SalesAgreementProduct&quot;,&quot;SalesAgreementProductSchedule&quot;,&quot;SalesChannel&quot;,&quot;Sales_Coach_Activity__c&quot;,&quot;Sales_Coach_Admin__c&quot;,&quot;Sales_Coach_Role__c&quot;,&quot;Sales_Coach_Section_Item__c&quot;,&quot;Sales_Coach_Section__c&quot;,&quot;Sales_Coach_Stage__c&quot;,&quot;Salesforce_General_Setting__c&quot;,&quot;Schedule__c&quot;,&quot;SchedulingConstraint&quot;,&quot;Scope3CrbnFtprnt&quot;,&quot;Scope3EmssnSrc&quot;,&quot;Scope3PcmtItem&quot;,&quot;Scope3PcmtSummary&quot;,&quot;Score_Global_Flag_Help_Menu_Settings__c&quot;,&quot;Scorecard&quot;,&quot;ScorecardAssociation&quot;,&quot;ScorecardMetric&quot;,&quot;ScratchOrgInfo&quot;,&quot;SearchPromotionRule&quot;,&quot;SecuritiesHolding&quot;,&quot;Seller&quot;,&quot;Send_Email_to_Users_Settings__c&quot;,&quot;Send_Welcome_Email_to_Users__c&quot;,&quot;SerializedProduct&quot;,&quot;SerializedProductTransaction&quot;,&quot;ServiceAppointment&quot;,&quot;ServiceAppointmentCapacityUsage&quot;,&quot;ServiceContract&quot;,&quot;ServiceCrew&quot;,&quot;ServiceCrewMember&quot;,&quot;ServiceReport&quot;,&quot;ServiceResource&quot;,&quot;ServiceResourceCapacity&quot;,&quot;ServiceResourcePreference&quot;,&quot;ServiceResourceSkill&quot;,&quot;ServiceTerritory&quot;,&quot;ServiceTerritoryLocation&quot;,&quot;ServiceTerritoryMember&quot;,&quot;ServiceTerritoryWorkType&quot;,&quot;Service_CPQ_General_Setting__c&quot;,&quot;Service_Contract_Schedule_Detail__c&quot;,&quot;Service_Oppty_Country_with_USD__c&quot;,&quot;Service_Region_Country_List__c&quot;,&quot;Service_Request__c&quot;,&quot;Service_Staging_Object__c&quot;,&quot;SessionHijackingEventStore&quot;,&quot;SettingUsageDefinition&quot;,&quot;SettingUsageMap&quot;,&quot;SetupAssistantStep&quot;,&quot;Shadow_Activity_Detail__c&quot;,&quot;Shadow_Activity__c&quot;,&quot;SharingRecordCollection&quot;,&quot;SharingRecordCollectionItem&quot;,&quot;Shift&quot;,&quot;ShiftPattern&quot;,&quot;ShiftPatternEntry&quot;,&quot;ShiftSchedulingOperation&quot;,&quot;ShiftTemplate&quot;,&quot;Shipment&quot;,&quot;ShipmentItem&quot;,&quot;Shipment_Detail__c&quot;,&quot;Siebel_General_Settings__c&quot;,&quot;SignatureTask&quot;,&quot;SignatureTaskLineItem&quot;,&quot;SiqExchangeConnection&quot;,&quot;Site_Ready_Risk__c&quot;,&quot;SkillLevelDefinition&quot;,&quot;SkillRequirement&quot;,&quot;Skip_Validation_for_Lead_Conversion__c&quot;,&quot;Snippet&quot;,&quot;SnippetAssignment&quot;,&quot;SocialPersona&quot;,&quot;SocialPost&quot;,&quot;SpreadCallback_Criteria__c&quot;,&quot;Stakeholder_Relationship_Map_Settings__c&quot;,&quot;Stakeholder__c&quot;,&quot;StandardPermissionSet&quot;,&quot;State_List__c&quot;,&quot;StnryAssetCrbnFtprnt&quot;,&quot;StnryAssetCrbnFtprntItm&quot;,&quot;StnryAssetEnrgyUse&quot;,&quot;StnryAssetEnvrSrc&quot;,&quot;StoreActionPlanTemplate&quot;,&quot;StoreAssortment&quot;,&quot;StoreProduct&quot;,&quot;StreamingChannel&quot;,&quot;StreamingChannel__c&quot;,&quot;SubTotalCFD__c&quot;,&quot;SubTotalValues__c&quot;,&quot;Sub_Region_Settings__c&quot;,&quot;SubmITO_P_L_Mapping__c&quot;,&quot;Subtotal_Map__c&quot;,&quot;SupportPageSection__c&quot;,&quot;SupportSettings__c&quot;,&quot;Survey&quot;,&quot;SurveyEmailBranding&quot;,&quot;SurveyInvitation&quot;,&quot;SurveyQuestion&quot;,&quot;SurveyQuestionChoice&quot;,&quot;SurveyQuestionResponse&quot;,&quot;SurveyResponse&quot;,&quot;SurveyVersion&quot;,&quot;SvcCatalogReqRelatedItem&quot;,&quot;SvcCatalogRequest&quot;,&quot;Swarm&quot;,&quot;SwarmMember&quot;,&quot;System_Component__c&quot;,&quot;TASKRAY_LTNG__trLTNGGlobalSettings__c&quot;,&quot;TASKRAY__Project_Task_PublicAttrs__c&quot;,&quot;TASKRAY__Project_Task__c&quot;,&quot;TASKRAY__Project__c&quot;,&quot;TASKRAY__ViewProjectTasks__c&quot;,&quot;TASKRAY__trBaseline_Project__c&quot;,&quot;TASKRAY__trBaseline_Task_Group__c&quot;,&quot;TASKRAY__trBaseline_Task__c&quot;,&quot;TASKRAY__trBoardFilterDetails__c&quot;,&quot;TASKRAY__trBoardFilterShareJunction__c&quot;,&quot;TASKRAY__trBoardFilterUserJunction__c&quot;,&quot;TASKRAY__trBoardFilter__c&quot;,&quot;TASKRAY__trBoardPowerFilter__c&quot;,&quot;TASKRAY__trChecklistGroup__c&quot;,&quot;TASKRAY__trChecklistItem__c&quot;,&quot;TASKRAY__trContributor__c&quot;,&quot;TASKRAY__trDependency__c&quot;,&quot;TASKRAY__trGlobalSettings__c&quot;,&quot;TASKRAY__trHistory__c&quot;,&quot;TASKRAY__trMetadataCache__c&quot;,&quot;TASKRAY__trPendingInterview__c&quot;,&quot;TASKRAY__trProjectInboxNotification__c&quot;,&quot;TASKRAY__trProjectNotification__c&quot;,&quot;TASKRAY__trRecordTypeMapping__c&quot;,&quot;TASKRAY__trSettings__c&quot;,&quot;TASKRAY__trTaskGroup__c&quot;,&quot;TASKRAY__trTaskInboxNotification__c&quot;,&quot;TASKRAY__trTaskNotification__c&quot;,&quot;TASKRAY__trTaskTime__c&quot;,&quot;TCO_Cost_Data__c&quot;,&quot;TabDefinition&quot;,&quot;Task&quot;,&quot;TaskRay_CustomerContact__c&quot;,&quot;TaskRay_Helium_Information__c&quot;,&quot;TaskRay_Install_Cost__c&quot;,&quot;TaskRay_Pre_Install_Items__c&quot;,&quot;TaskRay_Stakeholder__c&quot;,&quot;Task_Types_For_Eset_Link__c&quot;,&quot;Task_Types_for_Date_Update__c&quot;,&quot;Taskray_Change_Order__c&quot;,&quot;Taskray_Construction_Rev_Quote_PO__c&quot;,&quot;Taskray_DCR__c&quot;,&quot;Taskray_Eset_Link__c&quot;,&quot;Taskray_Magnetic_Containment__c&quot;,&quot;Taskray_Order_Shortage_Detail__c&quot;,&quot;Taskray_Project_Settings__c&quot;,&quot;Taskray_REST_Project_Status__c&quot;,&quot;Taskray_Site_Ready_Risk__c&quot;,&quot;Taskray_Survey_Languages_Mapping__c&quot;,&quot;Taskray_Task_Types_For_Project__c&quot;,&quot;Taskray_Task_Types_For_RR__c&quot;,&quot;Taskray_eOMRegions__c&quot;,&quot;Taskray_eOM_event_log__c&quot;,&quot;TaxCertificate&quot;,&quot;TaxEngine&quot;,&quot;TaxEngineInteractionLog&quot;,&quot;TaxPolicy&quot;,&quot;TaxTreatment&quot;,&quot;TempCareAreaRemediation__c&quot;,&quot;Template_Product_Information__c&quot;,&quot;Template_Tender_Term_Information__c&quot;,&quot;Tenant&quot;,&quot;TenantParameterMap&quot;,&quot;Term_Exceptions__c&quot;,&quot;TermsFieldEditableProfiles__c&quot;,&quot;Territory_Account__c&quot;,&quot;Territory__c&quot;,&quot;TestCustom__c&quot;,&quot;Test_Classes_Settings__c&quot;,&quot;ThreatDetectionFeedback&quot;,&quot;Tiba_Custom_Settings__c&quot;,&quot;Tier1_Level_Thresholds__c&quot;,&quot;TimeSheet&quot;,&quot;TimeSheetEntry&quot;,&quot;TimeSheetTemplate&quot;,&quot;TimeSlot&quot;,&quot;Top_X_Designation__c&quot;,&quot;Topic&quot;,&quot;Trade_In_Valuation_Settings__c&quot;,&quot;TrainingCourseParticipant&quot;,&quot;TransactionJournal&quot;,&quot;TravelMode&quot;,&quot;TrialEnvironmentSignup&quot;,&quot;Trigger_For_Box__c&quot;,&quot;TrnCourse&quot;,&quot;USERLocale__c&quot;,&quot;UnifiedEmail&quot;,&quot;UnitOfMeasure&quot;,&quot;UnitOfMeasureConversion&quot;,&quot;UsageEntitlement&quot;,&quot;UsageEntitlementPeriod&quot;,&quot;UsageEntitlementUsage&quot;,&quot;UsageFactor&quot;,&quot;User&quot;,&quot;UserAppMenuItem&quot;,&quot;UserLicenseDefinition&quot;,&quot;User_Action__c&quot;,&quot;User_Link__c&quot;,&quot;User_Log_Setting__c&quot;,&quot;VCP_All_Region_BU__c&quot;,&quot;VCP_Setting__c&quot;,&quot;Validate_VAT_Country__c&quot;,&quot;VehicleAssetCrbnFtprnt&quot;,&quot;VehicleAssetEmssnSrc&quot;,&quot;VehicleAssetEnrgyUse&quot;,&quot;VehicleUserAssignment&quot;,&quot;Vendor_Cost_Matrix__c&quot;,&quot;Vendor__c&quot;,&quot;VideoCall&quot;,&quot;ViolationEnforcementAction&quot;,&quot;ViolationInspAssessmentInd&quot;,&quot;ViolationType&quot;,&quot;ViolationTypeAssessmentInd&quot;,&quot;VisionPredictionSettings&quot;,&quot;Visit&quot;,&quot;VisitOps__Agenda_Survey__c&quot;,&quot;VisitOps__Agenda__c&quot;,&quot;VisitOps__AttendeeImportInstructions__c&quot;,&quot;VisitOps__Attendee__c&quot;,&quot;VisitOps__CSVHeaderForAttendees__c&quot;,&quot;VisitOps__Caterer__c&quot;,&quot;VisitOps__CateringProductsAndServices__c&quot;,&quot;VisitOps__Company__c&quot;,&quot;VisitOps__Content_Custom_Setting__c&quot;,&quot;VisitOps__Expense__c&quot;,&quot;VisitOps__Expertise_Area__c&quot;,&quot;VisitOps__Innovation_Board__c&quot;,&quot;VisitOps__LocationTypeLink__c&quot;,&quot;VisitOps__Location_Product_Category__c&quot;,&quot;VisitOps__Location_Product_Link__c&quot;,&quot;VisitOps__Location_Product__c&quot;,&quot;VisitOps__Location__c&quot;,&quot;VisitOps__Logistics_Supplier_Link__c&quot;,&quot;VisitOps__Mobile_Visit_Roles__c&quot;,&quot;VisitOps__Place__c&quot;,&quot;VisitOps__Presenter_Agenda_Link__c&quot;,&quot;VisitOps__Presenter_Expertise_Link__c&quot;,&quot;VisitOps__Presenter_Survey__c&quot;,&quot;VisitOps__Presenter__c&quot;,&quot;VisitOps__Products_and_Services__c&quot;,&quot;VisitOps__Program_Location_Link__c&quot;,&quot;VisitOps__Program_Type_Link__c&quot;,&quot;VisitOps__Program__c&quot;,&quot;VisitOps__Room_Schedule__c&quot;,&quot;VisitOps__Room__c&quot;,&quot;VisitOps__Status_Mapping__c&quot;,&quot;VisitOps__Status__c&quot;,&quot;VisitOps__Supplier__c&quot;,&quot;VisitOps__Survey__c&quot;,&quot;VisitOps__Topic_Category__c&quot;,&quot;VisitOps__Topic__c&quot;,&quot;VisitOps__VisitBundle__c&quot;,&quot;VisitOps__VisitType__c&quot;,&quot;VisitOps__Visit_Content__c&quot;,&quot;VisitOps__Visit_Control__c&quot;,&quot;VisitOps__Visit_Logistics__c&quot;,&quot;VisitOps__Visit__c&quot;,&quot;VisitTask&quot;,&quot;VisitTaskContext&quot;,&quot;VisitTaskContextRelation&quot;,&quot;VisitedParty&quot;,&quot;Visitor&quot;,&quot;VoiceCall&quot;,&quot;VolunteerProject&quot;,&quot;Voucher&quot;,&quot;VoucherDefinition&quot;,&quot;W2CGlobRegionSvcSubRegionMapping__c&quot;,&quot;WM4SF3__WalkMeExtension__c&quot;,&quot;WM4SF3__WalkMeLicense__c&quot;,&quot;WarrantyTerm&quot;,&quot;WasteFootprint&quot;,&quot;WasteFootprintItem&quot;,&quot;WaveAutoInstallRequest&quot;,&quot;WebCart&quot;,&quot;WebStore&quot;,&quot;WebStoreBuyerGroup&quot;,&quot;WebStoreCatalog&quot;,&quot;WebStorePricebook&quot;,&quot;WebStoreSearchProdSettings&quot;,&quot;WebserviceIntegration__c&quot;,&quot;WorkCapacityLimit&quot;,&quot;WorkCapacityUsage&quot;,&quot;WorkContract&quot;,&quot;WorkForecastRun&quot;,&quot;WorkOrder&quot;,&quot;WorkOrderLineItem&quot;,&quot;WorkPlan&quot;,&quot;WorkPlanSelectionRule&quot;,&quot;WorkPlanTemplate&quot;,&quot;WorkPlanTemplateEntry&quot;,&quot;WorkSkillRouting&quot;,&quot;WorkStep&quot;,&quot;WorkStepTemplate&quot;,&quot;WorkType&quot;,&quot;WorkTypeCareSpecialty&quot;,&quot;WorkTypeCodeSetBundle&quot;,&quot;WorkTypeGroup&quot;,&quot;WorkTypeGroupMember&quot;,&quot;WorkerCompCoverageClass&quot;,&quot;Workflow_Master_Deactivation__c&quot;,&quot;WorkforceCapacityPlan&quot;,&quot;WstDispoEmssnFctrSet&quot;,&quot;WstDispoEmssnFctrSetItm&quot;,&quot;Zone_List__c&quot;,&quot;Zone_Settings__c&quot;,&quot;Zone__c&quot;,&quot;analyticsadopt__DatasetDetails__c&quot;,&quot;analyticsadopt__DatasetSpecs__c&quot;,&quot;box__BOSS_Exception__c&quot;,&quot;box__FRUP__c&quot;,&quot;box__Folder_Details__c&quot;,&quot;box__Folder_Meta__c&quot;,&quot;box__ItemMoveQueue__c&quot;,&quot;box__LeadConvertQueue__c&quot;,&quot;box__Lead_Setting__c&quot;,&quot;box__SSO_Setting__c&quot;,&quot;catalogitems__c&quot;,&quot;ctcoach__CT_Coach_Assessment__c&quot;,&quot;ctcoach__CT_Coach_Score__c&quot;,&quot;dfsle__EOS_Type__c&quot;,&quot;eBluebook_TradeIn_application__c&quot;,&quot;eContacts__Queue_Item__c&quot;,&quot;eContacts__Settings__c&quot;,&quot;eOMRegions__c&quot;,&quot;eOM_Auth__c&quot;,&quot;eOM_Batch_Audit__c&quot;,&quot;eOM_CountryCode_Region_Mapping__c&quot;,&quot;eOM_Disabled_Modalities__c&quot;,&quot;eOM_Integration_Configuration__c&quot;,&quot;eOM_OU_Region_Mapping__c&quot;,&quot;eOM_Status_Mapping__c&quot;,&quot;email_alert__c&quot;,&quot;footprint__footprint_Listview__c&quot;,&quot;galigeo__Category__c&quot;,&quot;galigeo__Dashboard__c&quot;,&quot;galigeo__Data_Source__c&quot;,&quot;galigeo__GGO_Custom_Object__c&quot;,&quot;galigeo__GeoFilter_Condition__c&quot;,&quot;galigeo__GeoFilter_Definition__c&quot;,&quot;galigeo__Geographic_Layer__c&quot;,&quot;galigeo__Map_Object_Action__c&quot;,&quot;galigeo__Map_Object_Field__c&quot;,&quot;galigeo__Query_Field__c&quot;,&quot;galigeo__Query_Layer__c&quot;,&quot;galigeo__SW_Map_Object__c&quot;,&quot;galigeo__SellWhereConfig__c&quot;,&quot;galigeo__SellWhereConfiguration__c&quot;,&quot;galigeo__SellWhereImages__c&quot;,&quot;galigeo__SellWhereMapConfig__c&quot;,&quot;galigeo__Symbology__c&quot;,&quot;galigeo__Thematic__c&quot;,&quot;galigeo__Visual_Analytic__c&quot;,&quot;galigeo__Visual_DataSet__c&quot;,&quot;galigeo__Visual_Object__c&quot;,&quot;gecorpcoebox__Box_Administrator__c&quot;,&quot;gecorpcoebox__Device_Name__c&quot;,&quot;gecorpcoebox__GE_Box_Permission_Set__c&quot;,&quot;ltngsharing__PrivateTestObject__c&quot;,&quot;ltngsharing__ReadOnlyTestObject__c&quot;,&quot;maps__MapsSetting__c&quot;,&quot;mkto_si__MarketoSettings__c&quot;,&quot;mkto_si__UserPreferences__c&quot;,&quot;quote_hub_user_preference__c&quot;,&quot;refedge__Advanced_Routing__c&quot;,&quot;refedge__POR_App_Configuration__c&quot;,&quot;refedge__User_Profile__c&quot;,&quot;rtsync__LoggerSettings__c&quot;,&quot;rtsync__Reltio_Sbc_Filter_Setting__c&quot;,&quot;rtsync__Reltio_Sync_Settings__c&quot;,&quot;taskRay_resource_request__c&quot;,&quot;taskray_Customer_Event__c&quot;,&quot;tinderbox__Document__c&quot;,&quot;tinderbox__Proposal__c&quot;,&quot;tinderbox__TinderBox_Accounts__c&quot;,&quot;tinderbox__TinderBox_Log__c&quot;,&quot;tinderbox__TinderBox__c&quot;,&quot;tinderbox__content__c&quot;],&quot;appId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;storable&quot;:true},{&quot;id&quot;:&quot;1669;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getKeyPrefixesWithRecordTypes&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true},{&quot;id&quot;:&quot;1670;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getIsLWCFlexipageEnabled&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;sObjectNames&quot;:[&quot;A360ReportsGlobalRegion__c&quot;,&quot;A360_Manage_Widgets__c&quot;,&quot;A360_W2W_columns__c&quot;,&quot;AATEST2__c&quot;,&quot;AISentimentResult&quot;,&quot;ALIAutomation__c&quot;,&quot;API_Authorization__c&quot;,&quot;APTPS_Tender_Term_Description__c&quot;,&quot;APTPS_Tender_Term_Group_Approval__c&quot;,&quot;APTPS_Tender_Term__c&quot;,&quot;APTS_Display_Fields__c&quot;,&quot;APTS_Display_Settings__c&quot;,&quot;APTS_Features_Settings__c&quot;,&quot;APTS_Invoice__c&quot;,&quot;APTS_Product_Area_Code__c&quot;,&quot;APTS_ProposalFieldValidation__c&quot;,&quot;APTS_Query_Settings__c&quot;,&quot;APTS_ReApproval_Config__c&quot;,&quot;APXT_CongaSign__CongaSign_Settings__c&quot;,&quot;APXT_CongaSign__Recipient__c&quot;,&quot;APXT_CongaSign__Transaction__c&quot;,&quot;Accessory_Modality_Code__c&quot;,&quot;Account&quot;,&quot;AccountBrand&quot;,&quot;AccountContactRelation&quot;,&quot;AccountForecast&quot;,&quot;AccountForecastAdjustment&quot;,&quot;AccountForecastPeriodMetric&quot;,&quot;AccountHospitalGrade__c&quot;,&quot;AccountInsight&quot;,&quot;AccountParticipant&quot;,&quot;AccountPartner&quot;,&quot;AccountProductForecast&quot;,&quot;AccountProductPeriodForecast&quot;,&quot;AccountRelationship&quot;,&quot;AccountStrategicViewSetting__c&quot;,&quot;AccountTeamMember&quot;,&quot;AccountUserTerritory2View&quot;,&quot;Account_360_DB_User_default_widgets__c&quot;,&quot;Account_Agreement_Association__c&quot;,&quot;Account_Hierarchy_Setting__c&quot;,&quot;Account_Plan_Competitor__c&quot;,&quot;Account_Plan_Contacts__c&quot;,&quot;Account_Plan_KPI__c&quot;,&quot;Account_Plan__c&quot;,&quot;Account_Prioritization__c&quot;,&quot;Account_Request_Settings__c&quot;,&quot;Account_Team_Audit_Trail_Settings__c&quot;,&quot;Account_Team_Audit_Trail_Test_Settings__c&quot;,&quot;Account_Team_Audit_Trail__c&quot;,&quot;Account_Team_Request_Settings__c&quot;,&quot;Account_Test_Settings__c&quot;,&quot;Accreditation&quot;,&quot;AcctMgrPeriodicTargetDstr&quot;,&quot;AcctMgrTarget&quot;,&quot;AcctMgrTargetDstr&quot;,&quot;ActionCadence&quot;,&quot;ActionPlan&quot;,&quot;ActionPlanItem&quot;,&quot;ActionPlanItemDependency&quot;,&quot;ActionPlanTemplate&quot;,&quot;ActionPlanTemplateItem&quot;,&quot;ActionPlanTemplateItemValue&quot;,&quot;ActionPlanTemplateVersion&quot;,&quot;ActionPlanTmplItmAssessmentInd&quot;,&quot;ActionPlnTmplItmDependency&quot;,&quot;Activate_OTD_process__c&quot;,&quot;ActivationTarget&quot;,&quot;ActiveScratchOrg&quot;,&quot;ActivityHistory&quot;,&quot;ActivityTiming&quot;,&quot;Activity_Library__c&quot;,&quot;Activity_Logger_Switch__c&quot;,&quot;AdCreativeSizeType&quot;,&quot;AdOrderItem&quot;,&quot;AdQuote&quot;,&quot;AdQuoteLine&quot;,&quot;AdServer&quot;,&quot;AdServerAccount&quot;,&quot;AdServerUser&quot;,&quot;AdSpaceCreativeSizeType&quot;,&quot;AdSpaceGroupMember&quot;,&quot;AdSpaceSpecification&quot;,&quot;AddOnDefinition&quot;,&quot;Address&quot;,&quot;AdvAccountForecastFact&quot;,&quot;AdvAcctForecastSetPartner&quot;,&quot;AgentTraining&quot;,&quot;Agreement_Contact_Role__c&quot;,&quot;Agreement_Product_Line_Item_Detail__c&quot;,&quot;Agreement_Product_Portfolio__c&quot;,&quot;AiDataset&quot;,&quot;AiImageDetectedObject&quot;,&quot;AiImageObject&quot;,&quot;AiImageTrainingObject&quot;,&quot;AiVisionModel&quot;,&quot;AiVisionModelMetric&quot;,&quot;AiVisionModelObjectMetric&quot;,&quot;AiVisitRecommendRequest&quot;,&quot;AiVisitRecommendation&quot;,&quot;AiVisitSummary&quot;,&quot;AiVisitTaskRcmd&quot;,&quot;AiVisitTaskRcmdRequest&quot;,&quot;AirTravelEmssnFctr&quot;,&quot;AirTravelEnrgyUse&quot;,&quot;AllergyIntolerance&quot;,&quot;AlternativePaymentMethod&quot;,&quot;ApiAnomalyEventStore&quot;,&quot;AppAnalyticsQueryRequest&quot;,&quot;AppExtension&quot;,&quot;AppMenuItem&quot;,&quot;AppUsageAssignment&quot;,&quot;ApplicationCase&quot;,&quot;AppointmentReason&quot;,&quot;AppointmentTopicTimeSlot&quot;,&quot;Approver_Detail__c&quot;,&quot;ApptBundleAggrDurDnscale&quot;,&quot;ApptBundleAggrPolicy&quot;,&quot;ApptBundleConfig&quot;,&quot;ApptBundlePolicy&quot;,&quot;ApptBundlePolicySvcTerr&quot;,&quot;ApptBundlePropagatePolicy&quot;,&quot;ApptBundleRestrictPolicy&quot;,&quot;ApptBundleSortPolicy&quot;,&quot;Apttus_Approval__ApprovalProcessInstance__c&quot;,&quot;Apttus_Approval__ApprovalRuleAssignee__c&quot;,&quot;Apttus_Approval__ApprovalRuleDimension__c&quot;,&quot;Apttus_Approval__ApprovalRuleEntry__c&quot;,&quot;Apttus_Approval__ApprovalRule__c&quot;,&quot;Apttus_Approval__Approval_Matrix__c&quot;,&quot;Apttus_Approval__Approval_Process__c&quot;,&quot;Apttus_Approval__Approval_Request_History__c&quot;,&quot;Apttus_Approval__Approval_Request__c&quot;,&quot;Apttus_Approval__ApprovalsCustomClasses__c&quot;,&quot;Apttus_Approval__ApprovalsCustomConfig__c&quot;,&quot;Apttus_Approval__ApprovalsSystemProperties__c&quot;,&quot;Apttus_Approval__Backup_Approver__c&quot;,&quot;Apttus_Approval__FormulaField__c&quot;,&quot;Apttus_Approval__SearchFilter__c&quot;,&quot;Apttus_Base2__BasePrivateProperties__c&quot;,&quot;Apttus_Base2__TurboEngineAdminProperties__c&quot;,&quot;Apttus_CMConfig__AgreementAdjustmentLineItem__c&quot;,&quot;Apttus_CMConfig__AgreementFootnote__c&quot;,&quot;Apttus_CMConfig__AgreementProductAttributeValueExt2__c&quot;,&quot;Apttus_CMConfig__AgreementProductAttributeValueExt3__c&quot;,&quot;Apttus_CMConfig__AgreementProductAttributeValueExt__c&quot;,&quot;Apttus_CMConfig__AgreementProductAttributeValue__c&quot;,&quot;Apttus_CMConfig__AgreementRelatedLineItem__c&quot;,&quot;Apttus_CMConfig__AgreementSummaryGroup__c&quot;,&quot;Apttus_CMConfig__AgreementSummary__c&quot;,&quot;Apttus_CMConfig__AgreementUsagePriceTier__c&quot;,&quot;Apttus_Config2__AccountLocation__c&quot;,&quot;Apttus_Config2__AdHocGroup__c&quot;,&quot;Apttus_Config2__AdjustmentLineItem__c&quot;,&quot;Apttus_Config2__AgreementPriceRule__c&quot;,&quot;Apttus_Config2__AgreementPriceTier__c&quot;,&quot;Apttus_Config2__AppliedExpressionInfo__c&quot;,&quot;Apttus_Config2__AppliedRuleActionInfo__c&quot;,&quot;Apttus_Config2__AppliedRuleInfo__c&quot;,&quot;Apttus_Config2__AssetAttributeValue__c&quot;,&quot;Apttus_Config2__AssetLineItem__c&quot;,&quot;Apttus_Config2__AssetUsagePriceTier__c&quot;,&quot;Apttus_Config2__BannerSettings__c&quot;,&quot;Apttus_Config2__BatchJob__c&quot;,&quot;Apttus_Config2__BillingPlanItem__c&quot;,&quot;Apttus_Config2__BillingPlan__c&quot;,&quot;Apttus_Config2__BillingPreference__c&quot;,&quot;Apttus_Config2__BundleComponentView__c&quot;,&quot;Apttus_Config2__ChargeGroupMember__c&quot;,&quot;Apttus_Config2__ChargeGroup__c&quot;,&quot;Apttus_Config2__ChargeType__c&quot;,&quot;Apttus_Config2__ClassificationHierarchy__c&quot;,&quot;Apttus_Config2__ClassificationName__c&quot;,&quot;Apttus_Config2__ConfigAssetPricingCriteriaFields__c&quot;,&quot;Apttus_Config2__ConfigAssetPricingDefault__c&quot;,&quot;Apttus_Config2__ConfigConstraintCriteriaFields__c&quot;,&quot;Apttus_Config2__ConfigCustomClasses__c&quot;,&quot;Apttus_Config2__ConfigCustomDisplayActions__c&quot;,&quot;Apttus_Config2__ConfigCustomDisplayColumns__c&quot;,&quot;Apttus_Config2__ConfigFieldExpressionsCriteriaFields__c&quot;,&quot;Apttus_Config2__ConfigFieldSet__c&quot;,&quot;Apttus_Config2__ConfigFlow__c&quot;,&quot;Apttus_Config2__ConfigHeaderCriteriaFields__c&quot;,&quot;Apttus_Config2__ConfigLineItemCriteriaFields__c&quot;,&quot;Apttus_Config2__ConfigLineItemCustomFields__c&quot;,&quot;Apttus_Config2__ConfigLineItemLimitFields__c&quot;,&quot;Apttus_Config2__ConfigRelatedPricingGroupFields__c&quot;,&quot;Apttus_Config2__ConfigSelectBundleOptionsSettings__c&quot;,&quot;Apttus_Config2__ConfigSelectConfigProductsSettings__c&quot;,&quot;Apttus_Config2__ConfigSmartSearchSettings__c&quot;,&quot;Apttus_Config2__ConfigSystemProperties__c&quot;,&quot;Apttus_Config2__ConfigUnusedObjects__c&quot;,&quot;Apttus_Config2__ConfigUserPreferences__c&quot;,&quot;Apttus_Config2__ConstraintRuleAction__c&quot;,&quot;Apttus_Config2__ConstraintRuleCondition__c&quot;,&quot;Apttus_Config2__ConstraintRule__c&quot;,&quot;Apttus_Config2__CustomMessage__c&quot;,&quot;Apttus_Config2__DataCache__c&quot;,&quot;Apttus_Config2__ExtOrderSummaryItemCriteriaFields__c&quot;,&quot;Apttus_Config2__FavoriteConfiguration__c&quot;,&quot;Apttus_Config2__FeatureSet__c&quot;,&quot;Apttus_Config2__Feature__c&quot;,&quot;Apttus_Config2__FieldExpression__c&quot;,&quot;Apttus_Config2__Footnote__c&quot;,&quot;Apttus_Config2__FormulaField__c&quot;,&quot;Apttus_Config2__FrequencyConversionRate__c&quot;,&quot;Apttus_Config2__GLAccountMapEntry__c&quot;,&quot;Apttus_Config2__GLAccountMapRule__c&quot;,&quot;Apttus_Config2__GuidedQuestion__c&quot;,&quot;Apttus_Config2__GuidedSearchRuleEntry__c&quot;,&quot;Apttus_Config2__GuidedSearchRuleFilter__c&quot;,&quot;Apttus_Config2__GuidedSearchRule__c&quot;,&quot;Apttus_Config2__IncentiveBenefitData__c&quot;,&quot;Apttus_Config2__IncentiveCoupon__c&quot;,&quot;Apttus_Config2__IncentiveCustomDisplayActions__c&quot;,&quot;Apttus_Config2__IncentiveCustomDisplaySetting__c&quot;,&quot;Apttus_Config2__IncentiveGroup__c&quot;,&quot;Apttus_Config2__IncentiveLimitData__c&quot;,&quot;Apttus_Config2__IncentiveLimit__c&quot;,&quot;Apttus_Config2__IncentiveSystemProperties__c&quot;,&quot;Apttus_Config2__Incentive__c&quot;,&quot;Apttus_Config2__InstalledProductsSettings__c&quot;,&quot;Apttus_Config2__LineItemRollup__c&quot;,&quot;Apttus_Config2__LineItem__c&quot;,&quot;Apttus_Config2__LookupFieldSettings__c&quot;,&quot;Apttus_Config2__LoyaltyPointAccrualLevelSettings__c&quot;,&quot;Apttus_Config2__ObjectSummarySettings__c&quot;,&quot;Apttus_Config2__OrderLineItemCriteriaFields__c&quot;,&quot;Apttus_Config2__OrderLineItemLimitFields__c&quot;,&quot;Apttus_Config2__OrderLineItemMapFields__c&quot;,&quot;Apttus_Config2__OrderLineItem__c&quot;,&quot;Apttus_Config2__OrderProductAttributeValue__c&quot;,&quot;Apttus_Config2__OrderSourceCustomFields__c&quot;,&quot;Apttus_Config2__OrderSystemProperties__c&quot;,&quot;Apttus_Config2__OrderTaxBreakup__c&quot;,&quot;Apttus_Config2__OrderUsagePriceTier__c&quot;,&quot;Apttus_Config2__Order__c&quot;,&quot;Apttus_Config2__PaymentTerm__c&quot;,&quot;Apttus_Config2__PriceBreakup__c&quot;,&quot;Apttus_Config2__PriceDimension__c&quot;,&quot;Apttus_Config2__PriceListCategory__c&quot;,&quot;Apttus_Config2__PriceListItem__c&quot;,&quot;Apttus_Config2__PriceList__c&quot;,&quot;Apttus_Config2__PriceMatrixEntry__c&quot;,&quot;Apttus_Config2__PriceMatrix__c&quot;,&quot;Apttus_Config2__PriceRuleEntry__c&quot;,&quot;Apttus_Config2__PriceRule__c&quot;,&quot;Apttus_Config2__PriceRuleset__c&quot;,&quot;Apttus_Config2__ProductAttributeGroupMember__c&quot;,&quot;Apttus_Config2__ProductAttributeGroup__c&quot;,&quot;Apttus_Config2__ProductAttributeValue__c&quot;,&quot;Apttus_Config2__ProductAttribute__c&quot;,&quot;Apttus_Config2__ProductClassification__c&quot;,&quot;Apttus_Config2__ProductConfiguration__c&quot;,&quot;Apttus_Config2__ProductConstraintEntry__c&quot;,&quot;Apttus_Config2__ProductConstraintView__c&quot;,&quot;Apttus_Config2__ProductConstraint__c&quot;,&quot;Apttus_Config2__ProductDefaultRuleFilter__c&quot;,&quot;Apttus_Config2__ProductDefaultRule__c&quot;,&quot;Apttus_Config2__ProductDefaultValue__c&quot;,&quot;Apttus_Config2__ProductFeatureValue__c&quot;,&quot;Apttus_Config2__ProductFeature__c&quot;,&quot;Apttus_Config2__ProductFilterView__c&quot;,&quot;Apttus_Config2__ProductFootnote__c&quot;,&quot;Apttus_Config2__ProductGroupMember__c&quot;,&quot;Apttus_Config2__ProductGroup__c&quot;,&quot;Apttus_Config2__ProductHierarchyView__c&quot;,&quot;Apttus_Config2__ProductInformation__c&quot;,&quot;Apttus_Config2__ProductOptionComponent__c&quot;,&quot;Apttus_Config2__ProductOptionGroup__c&quot;,&quot;Apttus_Config2__ProductOptionPrice__c&quot;,&quot;Apttus_Config2__ProductTranslation__c&quot;,&quot;Apttus_Config2__PublishedFavorite__c&quot;,&quot;Apttus_Config2__RelatedAccountLocation__c&quot;,&quot;Apttus_Config2__RelatedAssetLineItem__c&quot;,&quot;Apttus_Config2__RelatedIncentive__c&quot;,&quot;Apttus_Config2__RelatedLineItem__c&quot;,&quot;Apttus_Config2__RelatedOpportunityLineItemColl__c&quot;,&quot;Apttus_Config2__RelatedOpportunityLineItem__c&quot;,&quot;Apttus_Config2__RelatedPriceListItem__c&quot;,&quot;Apttus_Config2__RelatedProduct__c&quot;,&quot;Apttus_Config2__RevRecPolicy__c&quot;,&quot;Apttus_Config2__SearchAttributeValue__c&quot;,&quot;Apttus_Config2__SearchFilter__c&quot;,&quot;Apttus_Config2__SummaryGroup__c&quot;,&quot;Apttus_Config2__TaxBreakup__c&quot;,&quot;Apttus_Config2__TaxCertificate__c&quot;,&quot;Apttus_Config2__TaxCode__c&quot;,&quot;Apttus_Config2__TempDisplayColumn__c&quot;,&quot;Apttus_Config2__TempFilter__c&quot;,&quot;Apttus_Config2__TempIncentiveBenefitData__c&quot;,&quot;Apttus_Config2__TempIncentiveLimitData__c&quot;,&quot;Apttus_Config2__TempObject__c&quot;,&quot;Apttus_Config2__TempRenew__c&quot;,&quot;Apttus_Config2__UsagePriceTier__c&quot;,&quot;Apttus_Other_Variable_Cost__c&quot;,&quot;Apttus_Proposal__ProposalCustomClasses__c&quot;,&quot;Apttus_Proposal__ProposalSystemProperties__c&quot;,&quot;Apttus_Proposal__Proposal_Document_Output_Format__c&quot;,&quot;Apttus_Proposal__Proposal_Line_Item__c&quot;,&quot;Apttus_Proposal__Proposal_Request__c&quot;,&quot;Apttus_Proposal__Proposal__c&quot;,&quot;Apttus_QPConfig__ProposalAdjustmentLineItem__c&quot;,&quot;Apttus_QPConfig__ProposalFootnote__c&quot;,&quot;Apttus_QPConfig__ProposalIncentiveBenefitData__c&quot;,&quot;Apttus_QPConfig__ProposalIncentiveLimitData__c&quot;,&quot;Apttus_QPConfig__ProposalProductAttributeValueExt2__c&quot;,&quot;Apttus_QPConfig__ProposalProductAttributeValueExt3__c&quot;,&quot;Apttus_QPConfig__ProposalProductAttributeValueExt__c&quot;,&quot;Apttus_QPConfig__ProposalProductAttributeValue__c&quot;,&quot;Apttus_QPConfig__ProposalRelatedLineItem__c&quot;,&quot;Apttus_QPConfig__ProposalSummaryGroup__c&quot;,&quot;Apttus_QPConfig__ProposalSummary__c&quot;,&quot;Apttus_QPConfig__ProposalUsagePriceTier__c&quot;,&quot;Apttus_Reporting_Bundles__c&quot;,&quot;Apttus_XApps__Application__c&quot;,&quot;Apttus_XApps__XAuthorForExcelSystemProperties__c&quot;,&quot;Apttus__APTS_Agreement__c&quot;,&quot;Apttus__APTS_Related_Agreement__c&quot;,&quot;Apttus__APTS_Template__c&quot;,&quot;Apttus__AgreementLineItem__c&quot;,&quot;Apttus__Agreement_Clause__c&quot;,&quot;Apttus__Agreement_Protection__c&quot;,&quot;Apttus__Agreement_Rule_Condition__c&quot;,&quot;Apttus__Agreement_Rule__c&quot;,&quot;Apttus__AsyncMergeCall__c&quot;,&quot;Apttus__ComplyCustomClasses__c&quot;,&quot;Apttus__ComplyCustomProperties__c&quot;,&quot;Apttus__ComplySystemProperties__c&quot;,&quot;Apttus__DocAssemblyComponent__c&quot;,&quot;Apttus__DocAssemblyRule__c&quot;,&quot;Apttus__DocAssemblyRuleset__c&quot;,&quot;Apttus__DocumentVersionDetail__c&quot;,&quot;Apttus__DocumentVersionProperties__c&quot;,&quot;Apttus__DocumentVersion__c&quot;,&quot;Apttus__Document_Output_Format__c&quot;,&quot;Apttus__FormulaField__c&quot;,&quot;Apttus__IDEJobClauseExtraction__c&quot;,&quot;Apttus__IDEJobFieldExtraction__c&quot;,&quot;Apttus__IDEJob__c&quot;,&quot;Apttus__IDEMapClauseProvision__c&quot;,&quot;Apttus__IDEMapFieldProvision__c&quot;,&quot;Apttus__IDEMapProjectRecordType__c&quot;,&quot;Apttus__IDEMapProvisionRecordType__c&quot;,&quot;Apttus__IDEProvision__c&quot;,&quot;Apttus__LiteUserException__c&quot;,&quot;Apttus__LiteUserSummary__c&quot;,&quot;Apttus__Locale__c&quot;,&quot;Apttus__LoginHistory__c&quot;,&quot;Apttus__MSTeamsDetail__c&quot;,&quot;Apttus__QueryTemplateFilter__c&quot;,&quot;Apttus__QueryTemplateQualifier__c&quot;,&quot;Apttus__QueryTemplate__c&quot;,&quot;Apttus__ReviewCycle__c&quot;,&quot;Apttus__Reviewer__c&quot;,&quot;Apttus__SearchFilter__c&quot;,&quot;Apttus__TempObject__c&quot;,&quot;Apttus__TemplateClauseReference__c&quot;,&quot;Apttus__TemplateDatasourceFilter__c&quot;,&quot;Apttus__TemplateDynamicSection__c&quot;,&quot;Assessment&quot;,&quot;AssessmentIndDefinedValue&quot;,&quot;AssessmentIndValue&quot;,&quot;AssessmentIndicatorDefinition&quot;,&quot;AssessmentQuestion&quot;,&quot;AssessmentQuestionResponse&quot;,&quot;AssessmentQuestionSet&quot;,&quot;AssessmentQuestionVersion&quot;,&quot;AssessmentTask&quot;,&quot;AssessmentTaskContentDocument&quot;,&quot;AssessmentTaskDefinition&quot;,&quot;AssessmentTaskIndDefinition&quot;,&quot;AssessmentTaskOrder&quot;,&quot;Asset&quot;,&quot;AssetAction&quot;,&quot;AssetActionSource&quot;,&quot;AssetAttribute&quot;,&quot;AssetDowntimePeriod&quot;,&quot;AssetRelationship&quot;,&quot;AssetStatePeriod&quot;,&quot;AssetWarranty&quot;,&quot;AssignedResource&quot;,&quot;AssistantText&quot;,&quot;AssociatedLocation&quot;,&quot;Assortment&quot;,&quot;AssortmentProduct&quot;,&quot;AsyncOperationLog&quot;,&quot;AttachedContentNote&quot;,&quot;AttributeDefinition&quot;,&quot;Audit_Trail__c&quot;,&quot;AuthApplicationAsset&quot;,&quot;AuthApplicationPlace&quot;,&quot;AuthFormRequestRecord&quot;,&quot;AuthLocationAccessSchedule&quot;,&quot;AuthorNote&quot;,&quot;AuthorizationForm&quot;,&quot;AuthorizationFormConsent&quot;,&quot;AuthorizationFormDataUse&quot;,&quot;AuthorizationFormText&quot;,&quot;AuthorizedInsuranceLine&quot;,&quot;Award&quot;,&quot;BCEntityPermission&quot;,&quot;BCEntityPermissionSet&quot;,&quot;BCFieldPermission&quot;,&quot;BCParticipant&quot;,&quot;BCParticipantAccess&quot;,&quot;BCPermissionSet&quot;,&quot;BCRecordAccess&quot;,&quot;BCRecordAccessApproval&quot;,&quot;BCRelatedParticipant&quot;,&quot;Bad_Jobs__c&quot;,&quot;Banker&quot;,&quot;BatchJob&quot;,&quot;BatchJobPart&quot;,&quot;BatchJobPartFailedRecord&quot;,&quot;Batch_In_Sequence__c&quot;,&quot;Benefit&quot;,&quot;BenefitParameterValue&quot;,&quot;BenefitType&quot;,&quot;BillingPeriodItem&quot;,&quot;BillingPeriodTaxItem&quot;,&quot;BillingPolicy&quot;,&quot;BillingSchedule&quot;,&quot;BillingScheduleCreationStatus&quot;,&quot;BillingScheduleGroup&quot;,&quot;BillingTreatment&quot;,&quot;BillingTreatmentItem&quot;,&quot;Billing_Frequency_Matrix__c&quot;,&quot;BioprodPreBilledType__c&quot;,&quot;BldgEnrgyIntensity&quot;,&quot;BldgEnrgyIntensityVal&quot;,&quot;BldgSizeCategory&quot;,&quot;BlockchainAppMember&quot;,&quot;BlockchainApplication&quot;,&quot;BlockchainEntity&quot;,&quot;BlockchainField&quot;,&quot;BlockchainMember&quot;,&quot;BoardCertification&quot;,&quot;BranchUnit&quot;,&quot;BranchUnitBusinessMember&quot;,&quot;BranchUnitCustomer&quot;,&quot;BranchUnitRelatedRecord&quot;,&quot;Budget&quot;,&quot;BudgetAllocation&quot;,&quot;BulkPublishAccount_CS__c&quot;,&quot;BusRegAuthTypeDependency&quot;,&quot;BusRegAuthorizationType&quot;,&quot;BusinessBrand&quot;,&quot;BusinessHours&quot;,&quot;BusinessLicense&quot;,&quot;BusinessLicenseApplication&quot;,&quot;BusinessMilestone&quot;,&quot;BusinessProfile&quot;,&quot;BusinessType&quot;,&quot;BusinessUnitMember&quot;,&quot;Business_Profile_Custom_Settings__c&quot;,&quot;Buy_Back_Item_Type__c&quot;,&quot;BuyerAccount&quot;,&quot;BuyerGroup&quot;,&quot;BuyerGroupMember&quot;,&quot;BuyerGroupPricebook&quot;,&quot;ByPass_PCL_Check__c&quot;,&quot;CCP_APIInformation__c&quot;,&quot;CCP_BatchConfig__c&quot;,&quot;CCP_ContactUsHistory__c&quot;,&quot;CCP_CurrentOutage__c&quot;,&quot;CCP_EmailDistributionList__c&quot;,&quot;CCP_InstallationStatus__c&quot;,&quot;CCP_LanguageList__c&quot;,&quot;CCP_PartsOrderType__c&quot;,&quot;CCP_PerferenceSetting__c&quot;,&quot;CCP_RoleToPageMapping__c&quot;,&quot;CCP_SavedFilter__c&quot;,&quot;CCP_TrackingURLMapping__c&quot;,&quot;CFDJapanDescriptionSelectable__c&quot;,&quot;CFDSubtotal_GroupValues__c&quot;,&quot;CFD_Data__c&quot;,&quot;CFD_IB_Asset_Order__c&quot;,&quot;CFD_Line_Item__c&quot;,&quot;CFD_Print_Option_User_Preferences__c&quot;,&quot;CFO_Assignment_Matrix__c&quot;,&quot;CLI_Automation__c&quot;,&quot;CLM_Agreement_Rev_Rec_Conclusion__c&quot;,&quot;CLM_Entitlement_Tab__c&quot;,&quot;CLM_Feature_Settings__c&quot;,&quot;CMSetting__c&quot;,&quot;CP_GEHC_Custom_Batch_Filter_Support__c&quot;,&quot;CSO_W2C_SSO_Integration_API__c&quot;,&quot;CalcProcStepRelationship&quot;,&quot;CalculationMatrix&quot;,&quot;CalculationMatrixColumn&quot;,&quot;CalculationMatrixRow&quot;,&quot;CalculationMatrixVersion&quot;,&quot;CalculationProcedure&quot;,&quot;CalculationProcedureStep&quot;,&quot;CalculationProcedureVariable&quot;,&quot;CalculationProcedureVersion&quot;,&quot;CallTemplate&quot;,&quot;Campaign&quot;,&quot;CampaignInfluence&quot;,&quot;CampaignInsight&quot;,&quot;CampaignMember&quot;,&quot;CampaignMemberStatus&quot;,&quot;CardPaymentMethod&quot;,&quot;CareBarrier&quot;,&quot;CareBarrierDeterminant&quot;,&quot;CareBarrierType&quot;,&quot;CareBenefitVerifyRequest&quot;,&quot;CareDeterminant&quot;,&quot;CareDeterminantType&quot;,&quot;CareDiagnosis&quot;,&quot;CareInterventionType&quot;,&quot;CareLimitType&quot;,&quot;CareMetricTarget&quot;,&quot;CareObservation&quot;,&quot;CareObservationComponent&quot;,&quot;CarePerformer&quot;,&quot;CarePgmProvHealthcareProvider&quot;,&quot;CarePractnFacilityAppt&quot;,&quot;CarePreauth&quot;,&quot;CarePreauthItem&quot;,&quot;CareProgram&quot;,&quot;CareProgramCampaign&quot;,&quot;CareProgramEligibilityRule&quot;,&quot;CareProgramEnrollee&quot;,&quot;CareProgramEnrolleeProduct&quot;,&quot;CareProgramEnrollmentCard&quot;,&quot;CareProgramGoal&quot;,&quot;CareProgramProduct&quot;,&quot;CareProgramProvider&quot;,&quot;CareProgramTeamMember&quot;,&quot;CareProviderAdverseAction&quot;,&quot;CareProviderFacilitySpecialty&quot;,&quot;CareProviderSearchableField&quot;,&quot;CareRegisteredDevice&quot;,&quot;CareRequest&quot;,&quot;CareRequestDrug&quot;,&quot;CareRequestExtension&quot;,&quot;CareRequestItem&quot;,&quot;CareRequestReviewer&quot;,&quot;CareSpecialty&quot;,&quot;CareSpecialtyTaxonomy&quot;,&quot;CareTaxonomy&quot;,&quot;CartItem&quot;,&quot;Case&quot;,&quot;CaseComment&quot;,&quot;CaseContactRole&quot;,&quot;CaseEvalFormMapping__c&quot;,&quot;CaseMilestone&quot;,&quot;CaseProblemStatusCloseForm__c&quot;,&quot;CaseRelatedIssue&quot;,&quot;Case_Activities__c&quot;,&quot;Case_Comment__c&quot;,&quot;Case_Severity_Matrix__c&quot;,&quot;Case_To_CommEx_Interceptor__c&quot;,&quot;ChangeRequest&quot;,&quot;ChangeRequestRelatedIssue&quot;,&quot;ChannelObjectLinkingRule&quot;,&quot;ChannelProgram&quot;,&quot;ChannelProgramLevel&quot;,&quot;ChannelProgramMember&quot;,&quot;CharketSettings__c&quot;,&quot;Charket__CharketContext__c&quot;,&quot;Charket__Log__c&quot;,&quot;Charket__SkillContext__c&quot;,&quot;Charket__Skill__c&quot;,&quot;Charket__SurveyAnswer__c&quot;,&quot;Charket__SurveyQuestion__c&quot;,&quot;Charket__SurveyResponse__c&quot;,&quot;Charket__SurveyTaken__c&quot;,&quot;Charket__Survey__c&quot;,&quot;Charket__WeChatAccount__c&quot;,&quot;Charket__WeChatAgent__c&quot;,&quot;Charket__WeChatCouponDelivery__c&quot;,&quot;Charket__WeChatCoupon__c&quot;,&quot;Charket__WeChatEvent__c&quot;,&quot;Charket__WeChatFollowerPass__c&quot;,&quot;Charket__WeChatFollower__c&quot;,&quot;Charket__WeChatMenuFilters__c&quot;,&quot;Charket__WeChatMenuItem__c&quot;,&quot;Charket__WeChatMenu__c&quot;,&quot;Charket__WeChatMessageAttachment__c&quot;,&quot;Charket__WeChatMessage__c&quot;,&quot;Charket__WeChatNotificationTemplate__c&quot;,&quot;Charket__WeChatPass__c&quot;,&quot;Charket__WeChatQRCode__c&quot;,&quot;Charket__WeChatResponseItem__c&quot;,&quot;Charket__WeChatResponseKeyword__c&quot;,&quot;Charket__WeChatResponse__c&quot;,&quot;Charket__WeChatTagAssignment__c&quot;,&quot;Charket__WeChatTagLink__c&quot;,&quot;Charket__WeChatTag__c&quot;,&quot;Charket__WeChatTranscriptItem__c&quot;,&quot;Charket__WeChatTranscript__c&quot;,&quot;Chatter_Settings__c&quot;,&quot;China_BatchSize__c&quot;,&quot;China_Config_Setting__c&quot;,&quot;China_LS_Core_Imaging_PP__c&quot;,&quot;China_Profiles_Bypass_Validation__c&quot;,&quot;China_SalesFunct_PriceList_Map__c&quot;,&quot;China_Tender_Reserve_Details__c&quot;,&quot;Claim&quot;,&quot;ClaimCase&quot;,&quot;ClaimCovPaymentAdjustment&quot;,&quot;ClaimCovReserveAdjustment&quot;,&quot;ClaimCoverage&quot;,&quot;ClaimCoveragePaymentDetail&quot;,&quot;ClaimCoverageReserveDetail&quot;,&quot;ClaimItem&quot;,&quot;ClaimParticipant&quot;,&quot;ClaimPaymentSummary&quot;,&quot;ClinicalAlert&quot;,&quot;ClinicalEncounter&quot;,&quot;ClinicalEncounterDiagnosis&quot;,&quot;ClinicalEncounterFacility&quot;,&quot;ClinicalEncounterIdentifier&quot;,&quot;ClinicalEncounterProvider&quot;,&quot;ClinicalEncounterReason&quot;,&quot;ClinicalEncounterSvcRequest&quot;,&quot;ClinicalServiceRequest&quot;,&quot;ClinicalServiceRequestDetail&quot;,&quot;CloudServiceProvider&quot;,&quot;Cloudspm_Fusion__CustomHeaderColour__c&quot;,&quot;Cloudspm_Fusion__DocSign_Config__c&quot;,&quot;Cloudspm_Fusion__Fiscal_Year_Setting__c&quot;,&quot;Cloudspm_Fusion__Scheduler_Manager_Setting__c&quot;,&quot;CodeSet&quot;,&quot;CodeSetBundle&quot;,&quot;CollaborationGroup&quot;,&quot;CommEx_IT_SLA_Score_Matrix__c&quot;,&quot;CommEx_Support__c&quot;,&quot;CommSubscription&quot;,&quot;CommSubscriptionChannelType&quot;,&quot;CommSubscriptionConsent&quot;,&quot;CommSubscriptionTiming&quot;,&quot;CommerceEntitlementBuyerGroup&quot;,&quot;CommerceEntitlementPolicy&quot;,&quot;CommerceEntitlementProduct&quot;,&quot;CommexProductionSLAScoreMatrix__c&quot;,&quot;Commex_Case__c&quot;,&quot;CommissionSchedule&quot;,&quot;CommissionScheduleAssignment&quot;,&quot;Community_Article_Topics_connection__c&quot;,&quot;Community_Asset__c&quot;,&quot;Community_Event_Topics_connection__c&quot;,&quot;Community_Topic__c&quot;,&quot;Community_Training__c&quot;,&quot;Community_article_usage_details__c&quot;,&quot;Community_event__c&quot;,&quot;Community_points_management__c&quot;,&quot;Community_question__c&quot;,&quot;Community_template__c&quot;,&quot;Competitor_Attributes__c&quot;,&quot;Competitor__c&quot;,&quot;ComplaintCase&quot;,&quot;Config_Data_Map__c&quot;,&quot;Conga_OCC__OCCSettings__c&quot;,&quot;ConsentMetric&quot;,&quot;ConsentUsageMetric&quot;,&quot;Construction_Rev_Quote_PO__c&quot;,&quot;ConsumptionRate&quot;,&quot;ConsumptionSchedule&quot;,&quot;Contact&quot;,&quot;ContactEncounter&quot;,&quot;ContactEncounterParticipant&quot;,&quot;ContactPointAddress&quot;,&quot;ContactPointConsent&quot;,&quot;ContactPointEmail&quot;,&quot;ContactPointPhone&quot;,&quot;ContactPointTypeConsent&quot;,&quot;ContactRequest&quot;,&quot;ContactSuggestionInsight&quot;,&quot;Contact_Activity_Detail__c&quot;,&quot;Contact_Additional_Information__c&quot;,&quot;Contact_Relationship__c&quot;,&quot;ContentDocument&quot;,&quot;ContentDocumentListViewMapping&quot;,&quot;ContentNote&quot;,&quot;ContentVersion&quot;,&quot;ContentWorkspace&quot;,&quot;Contract&quot;,&quot;ContractContactRole&quot;,&quot;ContractLineItem&quot;,&quot;Contract_Line_Item__c&quot;,&quot;Contract__c&quot;,&quot;ConversationBroadcast&quot;,&quot;ConversationBroadcastEntry&quot;,&quot;Convert_Currency__c&quot;,&quot;CountryLangCurr_List__c&quot;,&quot;CountryNumberFormatMapping__c&quot;,&quot;CountryStateCity_Hieraracy__c&quot;,&quot;Country_List__c&quot;,&quot;County_List__c&quot;,&quot;CourseOffering&quot;,&quot;CoverageBenefit&quot;,&quot;CoverageBenefitItem&quot;,&quot;CoverageBenefitItemLimit&quot;,&quot;CoverageLimit&quot;,&quot;CoverageType&quot;,&quot;Covid_19_Surcharges__c&quot;,&quot;Covid_Exceptions__c&quot;,&quot;CrbnEmssnScopeAlloc&quot;,&quot;CrbnEmssnScopeAllocVal&quot;,&quot;Create_Quote_Local_Selection__c&quot;,&quot;CredentialStuffingEventStore&quot;,&quot;CreditInfoPageLayouts__c&quot;,&quot;CreditMemo&quot;,&quot;CreditMemoInvApplication&quot;,&quot;CreditMemoLine&quot;,&quot;Crisis&quot;,&quot;CustomAdminSetting__c&quot;,&quot;Custom_Favorite_Revision__c&quot;,&quot;Custom_Group_Name_Mapping__c&quot;,&quot;Custom_Picklist_Values__c&quot;,&quot;Customer&quot;,&quot;CustomerProperty&quot;,&quot;Customer_Event__c&quot;,&quot;Customer_Goal__c&quot;,&quot;Customer_Initiative__c&quot;,&quot;Customer_Project_Opportunity__c&quot;,&quot;Customer_Project_Parent_Opportunities__c&quot;,&quot;Customer_Project__c&quot;,&quot;Customer_Strategy_Opportunity__c&quot;,&quot;Customer_Strategy__c&quot;,&quot;Customer_Survey_Feedback__c&quot;,&quot;CventEvents__DataRefreshSettings__c&quot;,&quot;CventEvents__EnvironmentSettings__c&quot;,&quot;CventEvents__EventPurgeSettings__c&quot;,&quot;CventEvents__FieldsMapping__c&quot;,&quot;CventEvents__LogPurgeSettings__c&quot;,&quot;CventEvents__NominationRequestField__c&quot;,&quot;CventEvents__RecordMatchingCriteria__c&quot;,&quot;CventEvents__RecordMatchingRule__c&quot;,&quot;CventEvents__RecordTypeMatchingSettings__c&quot;,&quot;DG_Color_Settings__c&quot;,&quot;DMAPP__Dealmaker_AM_Plan_Unit_List__c&quot;,&quot;DMAPP__Dealmaker_AM_Report_List__c&quot;,&quot;DMAPP__Dealmaker_AM_Settings__c&quot;,&quot;DMAPP__Dealmaker_Account_Field__c&quot;,&quot;DMAPP__Dealmaker_Activity_Field__c&quot;,&quot;DMAPP__Dealmaker_Coach_Settings__c&quot;,&quot;DMAPP__Dealmaker_Contact_Field__c&quot;,&quot;DMAPP__Dealmaker_Core_Settings__c&quot;,&quot;DMAPP__Dealmaker_Insight_Settings__c&quot;,&quot;DMAPP__Dealmaker_Opp_Map_Filter_List__c&quot;,&quot;DMAPP__Dealmaker_Opportunity_Field__c&quot;,&quot;DMAPP__Dealmaker_Playbook_Settings__c&quot;,&quot;DMAPP__Dealmaker_Political_Map_Buyer_Roles__c&quot;,&quot;DMAPP__Dealmaker_Political_Map_Settings2__c&quot;,&quot;DMAPP__Dealmaker_Powerpoint__c&quot;,&quot;DMAPP__Dealmaker_Send_Usage_Settings__c&quot;,&quot;DMAPP__Dealmaker_Smart_OM_Settings__c&quot;,&quot;DMAPP__Made_To_Measure_Fields__c&quot;,&quot;DMAPP__Team_View_Plus_Views__c&quot;,&quot;DMMAX__DIESetting__c&quot;,&quot;DMMAX__MaxOpportunityPanelCfg__c&quot;,&quot;DMPPT__PPT_Customization__c&quot;,&quot;DMPPT__Secure_Folder_Settings__c&quot;,&quot;DOSMapping__c&quot;,&quot;DQA__c&quot;,&quot;DRM_DCS_Step_Names__c&quot;,&quot;DRM_Report_Dashboard_Analysis__c&quot;,&quot;Dashboard&quot;,&quot;DataAction&quot;,&quot;DataActionTarget&quot;,&quot;DataConnectorS3&quot;,&quot;DataLakeObjectInstance&quot;,&quot;DataStream&quot;,&quot;DataUseLegalBasis&quot;,&quot;DataUsePurpose&quot;,&quot;Data_Remediation_Config__c&quot;,&quot;DealChange_Concession_question_answers__c&quot;,&quot;DealGuidance__c&quot;,&quot;Deal_Change_Concession_Questions__c&quot;,&quot;Deal_Change_Root_Cause_Code__c&quot;,&quot;Deal_Overview_Permission__c&quot;,&quot;Deal_Terms__c&quot;,&quot;Deal_Version_Manager__c&quot;,&quot;Dealer_Entitlement_PLI__c&quot;,&quot;Default_Opportunity_Product__c&quot;,&quot;Default_Term_Classification_Type__c&quot;,&quot;DefinedSkill&quot;,&quot;DelegatedAccount&quot;,&quot;DeleteEvent&quot;,&quot;DeliveryTask&quot;,&quot;Department__c&quot;,&quot;Design_Center_Global_Region_Mapping__c&quot;,&quot;Design_Center_Request__c&quot;,&quot;DiagnosticSummary&quot;,&quot;DiagnosticSummaryDetail&quot;,&quot;DigitalSignature&quot;,&quot;DigitalWallet&quot;,&quot;Discount_Reason_Check__c&quot;,&quot;DistributorAuthorization&quot;,&quot;DocTemplateSectionCondition&quot;,&quot;DocumentChecklistItem&quot;,&quot;DocumentGenerationProcess&quot;,&quot;DocumentRecipient&quot;,&quot;DocumentTemplate&quot;,&quot;DocumentTemplateClause&quot;,&quot;DocumentTemplateContentDoc&quot;,&quot;DocumentTemplateSection&quot;,&quot;DocumentTemplateToken&quot;,&quot;Document_Output_Option__c&quot;,&quot;DrugDisplayTerm&quot;,&quot;DsarPolicyLog&quot;,&quot;DuplicateRecordItem&quot;,&quot;DuplicateRecordSet&quot;,&quot;ELTONGEHC__ELTON_Inventory_Org_Control__c&quot;,&quot;ELTONGEHC__Image_paths__c&quot;,&quot;ELTON__Data_Interface_Processing_History__c&quot;,&quot;ELTON__Data_Interface__c&quot;,&quot;ELTON__Equipment_AssignLoan_Settings__c&quot;,&quot;ELTON__Equipment_Assignment__c&quot;,&quot;ELTON__Equipment_Calendar__c&quot;,&quot;ELTON__Equipment_Chatter_Settings__c&quot;,&quot;ELTON__Equipment_Consumables__c&quot;,&quot;ELTON__Equipment_Count__c&quot;,&quot;ELTON__Equipment_Labels__c&quot;,&quot;ELTON__Equipment_Loan__c&quot;,&quot;ELTON__Equipment_Maintenance__c&quot;,&quot;ELTON__Equipment_Order_Line__c&quot;,&quot;ELTON__Equipment_Order__c&quot;,&quot;ELTON__Equipment_Quantity_Adjustment_History__c&quot;,&quot;ELTON__Equipment_Request_Preferences__c&quot;,&quot;ELTON__Equipment_Request__c&quot;,&quot;ELTON__Equipment_Reservation__c&quot;,&quot;ELTON__Equipment_Selection__c&quot;,&quot;ELTON__Equipment_Shipment__c&quot;,&quot;ELTON__Equipment_Status_Controls__c&quot;,&quot;ELTON__Equipment_Type__c&quot;,&quot;ELTON__Equipment__c&quot;,&quot;ELTON__Field_Mapping__c&quot;,&quot;ELTON__Insurance__c&quot;,&quot;ELTON__MobileScannerApplication__c&quot;,&quot;ELTON__Other__c&quot;,&quot;ELTON__Trigger_Control_Setting__c&quot;,&quot;ELTON__Users_on_Hold__c&quot;,&quot;EOMBillingAccountMap__c&quot;,&quot;EOMFieldMapping__c&quot;,&quot;ER_SR_Product_Portfolio__c&quot;,&quot;EdgeMart&quot;,&quot;EditionDefinition&quot;,&quot;Einstein_DataFlowJobId__c&quot;,&quot;ElectricityEmssnFctrSet&quot;,&quot;ElectronicMediaGroup&quot;,&quot;EmailContent&quot;,&quot;EmailMessage&quot;,&quot;EmailMessageRelation&quot;,&quot;EmailTemplate&quot;,&quot;Email_CFD_Templates__c&quot;,&quot;EmbeddedServiceConfig&quot;,&quot;EmbeddedServiceLiveAgent&quot;,&quot;EmbeddedServiceMenuSettings&quot;,&quot;EmpUserProvisionProcessErr&quot;,&quot;EmpUserProvisioningProcess&quot;,&quot;Employee&quot;,&quot;EmployeeAsset&quot;,&quot;EmployeeContact&quot;,&quot;EmployeeCrisisAssessment&quot;,&quot;EmployeeJob&quot;,&quot;EmployeeJobPosition&quot;,&quot;EngagementChannelType&quot;,&quot;EngagementProgram&quot;,&quot;EngagementProgramVersion&quot;,&quot;EnhancedEmailTemplate&quot;,&quot;EnhancedLetterhead&quot;,&quot;EnrolleeBenefit&quot;,&quot;EnrollmentEligibilityCriteria&quot;,&quot;Entitlement&quot;,&quot;EntityArchivingException&quot;,&quot;EntityArchivingJob&quot;,&quot;EntityArchivingSetup&quot;,&quot;EntityMilestone&quot;,&quot;EnvironmentHubMember&quot;,&quot;Equipment_De_Installation__c&quot;,&quot;Evaluate_Pharma_Tags__c&quot;,&quot;Event&quot;,&quot;Examination&quot;,&quot;Expense&quot;,&quot;ExpenseReport&quot;,&quot;ExpenseReportEntry&quot;,&quot;ExternalAccountHierarchy&quot;,&quot;Favorite_Event_Monitoring__c&quot;,&quot;Favorites__c&quot;,&quot;Feature_Switch__c&quot;,&quot;FeedItem&quot;,&quot;FieldServiceMobileExtension&quot;,&quot;FieldServiceMobileSettings&quot;,&quot;Field_Trip__Logistics__c&quot;,&quot;FileExtensionList__c&quot;,&quot;FinanceBalanceSnapshot&quot;,&quot;FinanceBook&quot;,&quot;FinancePeriod&quot;,&quot;FinanceTransaction&quot;,&quot;FinanceTransactionErrorLog&quot;,&quot;FinancialDeal&quot;,&quot;FinancialDealInteraction&quot;,&quot;FinancialDealParticipant&quot;,&quot;FinancialDealParty&quot;,&quot;FinancialDealProduct&quot;,&quot;FinclDealInteractionSummary&quot;,&quot;Fixed_Software_Costs__c&quot;,&quot;FlowDefinitionView&quot;,&quot;FlowOrchestrationHistory&quot;,&quot;FlowOrchestrationInstance&quot;,&quot;FlowOrchestrationStageInstance&quot;,&quot;FlowOrchestrationStepInstance&quot;,&quot;FlowOrchestrationWorkItem&quot;,&quot;FlowRecordTypeMapping__c&quot;,&quot;Folder&quot;,&quot;Forecasting_Filter_Setting__c&quot;,&quot;FrgtHaulingEmssnFctr&quot;,&quot;FrgtHaulingEnrgyUse&quot;,&quot;FtestAllContactPoint&quot;,&quot;FtestApplication2CInterface&quot;,&quot;FtestBigObjectLookup&quot;,&quot;FtestConcrete&quot;,&quot;FtestConcrete6&quot;,&quot;FtestConcrete7&quot;,&quot;FtestConcrete8&quot;,&quot;FtestContactPointEmail&quot;,&quot;FtestContactPointPhone&quot;,&quot;FtestZosUiPrototypeChild1&quot;,&quot;FtestZosUiPrototypeChild2&quot;,&quot;FtestZosUiPrototypeParent&quot;,&quot;FulfillmentOrder&quot;,&quot;FulfillmentOrderLineItem&quot;,&quot;GBLite__GBTestSettings__c&quot;,&quot;GBLite__GB_Global_Meta__c&quot;,&quot;GBLite__GB_Grid_Folder__c&quot;,&quot;GBLite__GB_Load_Cache__c&quot;,&quot;GBLite__GB_Save_Cache__c&quot;,&quot;GBLite__GB_User_Field_Settings__c&quot;,&quot;GBLite__GB_User_Filter_Settings__c&quot;,&quot;GBLite__GridBuddySettings__c&quot;,&quot;GBLite__GridBuddy_Usage_Analytics__c&quot;,&quot;GDPR_Language_Codes__c&quot;,&quot;GDPR_Regional_Mailbox__c&quot;,&quot;GDPR_Sender_Email__c&quot;,&quot;GECares_Community_Setting__c&quot;,&quot;GEDG__DG_Settings__c&quot;,&quot;GEDG__Deal_Guidance_Workspace__c&quot;,&quot;GEHCAskExpertQuestions__c&quot;,&quot;GEHCCommunityPublicGroup__c&quot;,&quot;GEHCDSA__Cat_Content_Junction__c&quot;,&quot;GEHCDSA__CategoryMobileConfig__c&quot;,&quot;GEHCDSA__Category__c&quot;,&quot;GEHCDSA__ContentReview__c&quot;,&quot;GEHCDSA__DSA_App_Setting__c&quot;,&quot;GEHCDSA__DSA_Playlist__c&quot;,&quot;GEHCDSA__MobileAppConfig__c&quot;,&quot;GEHCDSA__Playlist_Content_Junction__c&quot;,&quot;GEHCTopicCategoryHeaderCustomLabels__c&quot;,&quot;GEHCTrainingVideo__c&quot;,&quot;GEHC_All_Country_Region__c&quot;,&quot;GEHC_BC_Custom_Batch_Filter_Support__c&quot;,&quot;GEHC_Community_Topic_Translations__c&quot;,&quot;GEHC_ForsevaConfiguration__c&quot;,&quot;GEIDPBatchQuery__c&quot;,&quot;GEIDPContactMaskTestQuery__c&quot;,&quot;GEIDPContact_Opt_Out__c&quot;,&quot;GEIDPCountryListISO__c&quot;,&quot;GEIDPCustomAttributeClassInfo__c&quot;,&quot;GEIDPGSSAppIntegration__c&quot;,&quot;GEIDPGSSWelcomeMailLinks__c&quot;,&quot;GEIDPHLSEndPointURL__c&quot;,&quot;GEIDPLanguageList__c&quot;,&quot;GEIDPLocaleList__c&quot;,&quot;GEIDPLoginTextInfo__c&quot;,&quot;GEIDPProfileUpdateReqFieldsMapping__c&quot;,&quot;GEIDPProgressiveAppMandatoryParam__c&quot;,&quot;GEIDPRegistrationClassInfo__c&quot;,&quot;GEIDPSocial_Email_Domain__c&quot;,&quot;GEIDPUDXRegionConfig__c&quot;,&quot;GEIDP_ByPass_Components__c&quot;,&quot;GEIDP_Google_Captcha__c&quot;,&quot;GEIDP_LeadContactMapping__c&quot;,&quot;GEMDM__GEMDMCountryList__c&quot;,&quot;GEMDM__GEMDMCustomerSearch__c&quot;,&quot;GEMDM__GEMDMStateList__c&quot;,&quot;GEMDM__GE_MDM_Account_Field_Mapping__c&quot;,&quot;GEMDM__GE_MDM_Account_Search_Facets__c&quot;,&quot;GEMDM__GE_MDM_Account_Search_Field_Mapping__c&quot;,&quot;GEMDM__GE_MDM_Commercial_Hierarchy_Fields__c&quot;,&quot;GEMDM__GE_MDM_DUNS_Number_API_Name__c&quot;,&quot;GEMDM__GE_MDM_Event_Processing_Field_Mapping__c&quot;,&quot;GEMDM__GE_MDM_Event_Processing__c&quot;,&quot;GEMDM__GE_MDM_Failure_Notification_Recipient__c&quot;,&quot;GEMDM__GE_MDM_General_Package_Settings__c&quot;,&quot;GEMDM__GE_MDM_Integration_Activity_Settings__c&quot;,&quot;GEMDM__GE_MDM_MDM_Integration_Settings__c&quot;,&quot;GEMDM__GE_MDM_Master_Approved_Record_Type__c&quot;,&quot;GEMDM__GE_MDM_Merge_History__c&quot;,&quot;GEMDM__GE_MDM_OneKYC_Address_Label__c&quot;,&quot;GEMDM__GE_MDM_OneKYC_Inputs__c&quot;,&quot;GEMDM__GE_MDM_OneKYC_Sentry_Web_Services__c&quot;,&quot;GEMDM__GE_MDM_Start_KYC_Record_Type__c&quot;,&quot;GEMDM__GE_MDM_Subscription_Web_Service_Inputs__c&quot;,&quot;GEMDM__GE_MDM_Upload_Documents__c&quot;,&quot;GE_Goal__c&quot;,&quot;GE_HC_MT_Catalog__c&quot;,&quot;GE_HC_MT_PTDModality__c&quot;,&quot;GE_HC_MT_PTD_AgendaModuleTable__c&quot;,&quot;GE_HC_MT_SFDCForm__c&quot;,&quot;GE_HC_MT_TrainingMasterSearchFilters__c&quot;,&quot;GE_HC_MT_TrainingMaster__c&quot;,&quot;GE_HC_MT_Trigger_Setting__c&quot;,&quot;GE_X_Sell__GE_xSell_Account_Field_Mapping__c&quot;,&quot;GE_X_Sell__GE_xSell_MDM_Account_Criteria__c&quot;,&quot;GE_X_Sell__GE_xSell_Opportunity_Field_Mapping__c&quot;,&quot;GE_X_Sell__GE_xSell_Referral_Field_Mapping__c&quot;,&quot;GE_X_Sell__Lead_Sharing_Statistics_c__x&quot;,&quot;GE_X_Sell__Opportunity__x&quot;,&quot;GE_X_Sell__Referral__x&quot;,&quot;GE_X_Sell__User_Manager_Tree__c&quot;,&quot;GGO_NUTS_Settings__c&quot;,&quot;GON_Notify__c&quot;,&quot;GON_SO__c&quot;,&quot;GPMEndpoints__c&quot;,&quot;GPMRegionMapping__c&quot;,&quot;GPM_Product_Tier_Map__c&quot;,&quot;General_Settings__c&quot;,&quot;GeneratedDocument&quot;,&quot;GeneratedDocumentSection&quot;,&quot;GeneratedWaste&quot;,&quot;GenericVisitTask&quot;,&quot;GenericVisitTaskContext&quot;,&quot;Geo_Status__c&quot;,&quot;Global_EQ_AutoReapprovals__c&quot;,&quot;Global_Geography_Hierarchy__c&quot;,&quot;Global_Product_Hierarchy__c&quot;,&quot;Global_Region_CPQ_Settings__c&quot;,&quot;Global_Region_Name__c&quot;,&quot;Global_Region_Term_vs_Annual_Amount__c&quot;,&quot;Global_Region__c&quot;,&quot;Global_Region_for_Automatic_Oppty__c&quot;,&quot;Global_Region_for_Order_to_Oppty_Update__c&quot;,&quot;Global_Roll_UP_P_L_Definition__c&quot;,&quot;Global_Sub_Region_Geography_Names__c&quot;,&quot;GnrcVstKeyPerformanceInd&quot;,&quot;GnrcVstTaskContextRelation&quot;,&quot;Goal_Action__c&quot;,&quot;GroundTravelEmssnFctr&quot;,&quot;GroundTravelEnrgyUse&quot;,&quot;GuestBuyerProfile&quot;,&quot;HCIT_Product_Portfolio_Based_Approvals__c&quot;,&quot;HFS_Rate_Card__c&quot;,&quot;HealthCareDiagnosis&quot;,&quot;HealthCareProcedure&quot;,&quot;HealthCondition&quot;,&quot;HealthConditionDetail&quot;,&quot;HealthcareFacility&quot;,&quot;HealthcareFacilityNetwork&quot;,&quot;HealthcarePayerNetwork&quot;,&quot;HealthcarePractitionerFacility&quot;,&quot;HealthcareProvider&quot;,&quot;HealthcareProviderNpi&quot;,&quot;HealthcareProviderSpecialty&quot;,&quot;HealthcareProviderTaxonomy&quot;,&quot;Helium_Information__c&quot;,&quot;Holiday&quot;,&quot;HomePageNotification__c&quot;,&quot;HotelStayEmssnFctr&quot;,&quot;HotelStayEnrgyUse&quot;,&quot;IBAutomation__c&quot;,&quot;IB_Asset_Attribute__c&quot;,&quot;IB_Asset_Custom_Access__c&quot;,&quot;IB_Asset__c&quot;,&quot;IB_Product__c&quot;,&quot;IB_Products_Subregions_Mapping__c&quot;,&quot;IB_Settings__c&quot;,&quot;IB_Source__c&quot;,&quot;IBautomationAccounts__c&quot;,&quot;IC_Unit_Services__c&quot;,&quot;IDQ_Country_List__c&quot;,&quot;IMO5IntegrationCS__c&quot;,&quot;IPAddressRange&quot;,&quot;ITOKYC_AcctStatePostalReq__c&quot;,&quot;ITOKYC_AdminProfileList__c&quot;,&quot;ITOKYC_EmailDL__c&quot;,&quot;ITOKYC_FMModalityEmails__c&quot;,&quot;ITOKYC_ITOTeamMapProvice__c&quot;,&quot;ITOKYC_Queue_Desc__c&quot;,&quot;ITOKYC_RegionOperation__c&quot;,&quot;ITOKYC_RegionValues__c&quot;,&quot;ITOKYC_SHS_Queue_Desc_Sendback__c&quot;,&quot;ITOKYC_SHS_Queue_Desc__c&quot;,&quot;ITOKYC_SelectTeamMapping__c&quot;,&quot;Identifier&quot;,&quot;IdentityDocument&quot;,&quot;IdentityResolution&quot;,&quot;Image&quot;,&quot;InStoreLocation&quot;,&quot;Incident&quot;,&quot;IncludedLicenseDefinition&quot;,&quot;India_Region_Quote_Setting__c&quot;,&quot;Individual&quot;,&quot;IndividualApplication&quot;,&quot;InflationRate&quot;,&quot;InfoAuthRequestForm&quot;,&quot;InfoAuthorizationRequest&quot;,&quot;InsightsApplication&quot;,&quot;InsightsExternalData&quot;,&quot;InsightsExternalDataPart&quot;,&quot;InspectionAssessmentInd&quot;,&quot;InspectionType&quot;,&quot;InspectionViolation&quot;,&quot;Install_Cost__c&quot;,&quot;Installation_Attachment_Type__c&quot;,&quot;Installation_Contacts__c&quot;,&quot;Installation_For_CFD_Mapping__c&quot;,&quot;Installation_Settings__c&quot;,&quot;Installation__c&quot;,&quot;InsuranceClaimAsset&quot;,&quot;InsurancePolicy&quot;,&quot;InsurancePolicyAsset&quot;,&quot;InsurancePolicyCoverage&quot;,&quot;InsurancePolicyMemberAsset&quot;,&quot;InsurancePolicyOwner&quot;,&quot;InsurancePolicyParticipant&quot;,&quot;InsurancePolicySurcharge&quot;,&quot;InsurancePolicyTransaction&quot;,&quot;InsuranceProfile&quot;,&quot;IntegrationFieldMap__c&quot;,&quot;Integration_General_Settings__c&quot;,&quot;Integration_Id_Values__c&quot;,&quot;Integration_System_Logs_Setting__c&quot;,&quot;Interaction&quot;,&quot;InteractionAttendee&quot;,&quot;InteractionParticipant&quot;,&quot;InteractionSumDiscussedAccount&quot;,&quot;InteractionSummary&quot;,&quot;InteractionSummaryParticipant&quot;,&quot;InternalOrganizationUnit&quot;,&quot;Invoice&quot;,&quot;InvoiceAddressGroup&quot;,&quot;InvoiceLine&quot;,&quot;Japan_Sales_Service_MCT_BR__c&quot;,&quot;JobFamily&quot;,&quot;JobPosition&quot;,&quot;JobProfile&quot;,&quot;JournalSubType&quot;,&quot;JournalType&quot;,&quot;KBMAX__Quote_Product__c&quot;,&quot;KBMAX__Quote__c&quot;,&quot;KnowledgeArticleVersion&quot;,&quot;LCT__c&quot;,&quot;LSAccountChatterPost__c&quot;,&quot;LS_Country_List__c&quot;,&quot;LS_German_Managers__c&quot;,&quot;LS_State_List__c&quot;,&quot;LTEVAlidationValues__c&quot;,&quot;LandingPage&quot;,&quot;LandingPageContent&quot;,&quot;Language_List__c&quot;,&quot;Language_To_ISO_Code__c&quot;,&quot;Languages_Available__c&quot;,&quot;Lead&quot;,&quot;Lead_Product_Line_Item__c&quot;,&quot;LearnerSkill&quot;,&quot;LearningItem&quot;,&quot;LegalEntity&quot;,&quot;Lens&quot;,&quot;LicensingError&quot;,&quot;LicensingRequest&quot;,&quot;LicensingRequestOrderItem&quot;,&quot;LicensingSnapshotRequest&quot;,&quot;Line_Item_Billing_Term__c&quot;,&quot;Line_Item_Product_Pricing_Detail__c&quot;,&quot;ListEmail&quot;,&quot;ListEmailSentResult&quot;,&quot;LiveAgentSession&quot;,&quot;LiveChatSensitiveDataRule&quot;,&quot;LiveChatTranscript&quot;,&quot;LiveChatVisitor&quot;,&quot;LoanApplicant&quot;,&quot;LoanApplicantAddress&quot;,&quot;LoanApplicantAsset&quot;,&quot;LoanApplicantDeclaration&quot;,&quot;LoanApplicantEmployment&quot;,&quot;LoanApplicantIncome&quot;,&quot;LoanApplicantLiability&quot;,&quot;LoanApplicationAsset&quot;,&quot;LoanApplicationFinancial&quot;,&quot;LoanApplicationLiability&quot;,&quot;LoanApplicationProperty&quot;,&quot;LoanApplicationTitleHolder&quot;,&quot;LocWaitlistMsgTemplate&quot;,&quot;Location&quot;,&quot;LocationGroup&quot;,&quot;LocationGroupAssignment&quot;,&quot;LocationTrustMeasure&quot;,&quot;LocationWaitlist&quot;,&quot;LocationWaitlistedParty&quot;,&quot;LoyaltyLedger&quot;,&quot;LoyaltyMemberCurrency&quot;,&quot;LoyaltyMemberTier&quot;,&quot;LoyaltyPartnerProduct&quot;,&quot;LoyaltyPgmGroupMbrRlnsp&quot;,&quot;LoyaltyProgram&quot;,&quot;LoyaltyProgramCurrency&quot;,&quot;LoyaltyProgramMbrPromotion&quot;,&quot;LoyaltyProgramMember&quot;,&quot;LoyaltyProgramMemberCase&quot;,&quot;LoyaltyProgramPartner&quot;,&quot;LoyaltyProgramProcess&quot;,&quot;LoyaltyProgramProcessParameter&quot;,&quot;LoyaltyProgramProcessRule&quot;,&quot;LoyaltyTier&quot;,&quot;LoyaltyTierBenefit&quot;,&quot;LoyaltyTierGroup&quot;,&quot;MCTCustomSettings__c&quot;,&quot;MCTSalesArea__c&quot;,&quot;MCT_Europe_Report_Language__c&quot;,&quot;MCT_Integration_User__c&quot;,&quot;MDM_ManageAccountConfig__c&quot;,&quot;MPM4_BASE__Milestone1_Expense__c&quot;,&quot;MPM4_BASE__Milestone1_Log__c&quot;,&quot;MPM4_BASE__Milestone1_Milestone__c&quot;,&quot;MPM4_BASE__Milestone1_Program__c&quot;,&quot;MPM4_BASE__Milestone1_Project__c&quot;,&quot;MPM4_BASE__Milestone1_Settings__c&quot;,&quot;MPM4_BASE__Milestone1_Task__c&quot;,&quot;MPM4_BASE__Milestone1_Time__c&quot;,&quot;MPM4_BASE__Risk__c&quot;,&quot;MPM4_BASE__TH_User_Settings__c&quot;,&quot;MS_BillingTerm_Template_Items__c&quot;,&quot;MS_BillingTerm_Template__c&quot;,&quot;MS_BillingTerm__c&quot;,&quot;MUST_Integration_Country_Mapping__c&quot;,&quot;Macro&quot;,&quot;Magnetic_Containment__c&quot;,&quot;MaintenanceAsset&quot;,&quot;MaintenancePlan&quot;,&quot;MaintenanceWorkRule&quot;,&quot;ManagedContentVariant&quot;,&quot;Manufacturing_Site_SPC__c&quot;,&quot;MarketSegment&quot;,&quot;MarketSegmentActivation&quot;,&quot;MarketingAppExtActivity&quot;,&quot;MarketingAppExtAssignment&quot;,&quot;MarketingAppExtension&quot;,&quot;MarketingForm&quot;,&quot;MarketingLink&quot;,&quot;MarketingLinkContent&quot;,&quot;MediaChannel&quot;,&quot;MediaContentTitle&quot;,&quot;Medication&quot;,&quot;MedicationRequest&quot;,&quot;MedicationStatement&quot;,&quot;MedicinalIngredient&quot;,&quot;MemberBenefit&quot;,&quot;MemberPlan&quot;,&quot;MessagingChannel&quot;,&quot;MessagingDeliveryError&quot;,&quot;MessagingEndUser&quot;,&quot;MessagingSession&quot;,&quot;MessagingTemplate&quot;,&quot;MktCalculatedInsight&quot;,&quot;MobileSettingsAssignment&quot;,&quot;ModalityList__c&quot;,&quot;Modality_For_Eset_Link__c&quot;,&quot;Modality_For_VSA_Finish__c&quot;,&quot;Modality__c&quot;,&quot;Monitoring_Assignment_Matrix__c&quot;,&quot;Monthly_Operating_Rates__c&quot;,&quot;MultipartyInfoAuthRequest&quot;,&quot;MyPBackOfficeTask__c&quot;,&quot;My_Favorites_Settings__c&quot;,&quot;NETDET_IP_Addresses__c&quot;,&quot;NL_Price_Matrix_Japan__c&quot;,&quot;NamespaceRegistry&quot;,&quot;NeedHelpLinks__c&quot;,&quot;NetworkReferencedObject&quot;,&quot;Note&quot;,&quot;Notification_Criteria_Fields__c&quot;,&quot;Notification_Defaults__c&quot;,&quot;Notification_Framework_Settings__c&quot;,&quot;Notification_Items__c&quot;,&quot;Notification_Queue_Email__c&quot;,&quot;Notification_Queue__c&quot;,&quot;Notification_Record_Ownership__c&quot;,&quot;Notification_Rule__c&quot;,&quot;Notification_Setting__c&quot;,&quot;Notification_Template_Fields__c&quot;,&quot;OAuthCredentials__c&quot;,&quot;OAuthToken__c&quot;,&quot;OCCR_AddConfig_Parameter__c&quot;,&quot;OCCR_Reporting__c&quot;,&quot;OCLI_LostReason_Settings__c&quot;,&quot;OCLI_Status_Settings__c&quot;,&quot;OCLI_Type_Settings__c&quot;,&quot;ODS_Product_Protfolio__c&quot;,&quot;OP_Target_Master__c&quot;,&quot;ObjectStateDefinition&quot;,&quot;ObjectStateTransition&quot;,&quot;ObjectStateValue&quot;,&quot;ObjectTerritory2Association&quot;,&quot;Object_Landing_Page_Settings__c&quot;,&quot;OccupationLicenseApplication&quot;,&quot;OcrDocumentScanResult&quot;,&quot;Omitted_Functionality__c&quot;,&quot;OmniDataPack&quot;,&quot;OmniDataTransform&quot;,&quot;OmniDataTransformItem&quot;,&quot;OmniESignatureTemplate&quot;,&quot;OmniProcess&quot;,&quot;OmniProcessCompilation&quot;,&quot;OmniProcessElement&quot;,&quot;OmniProcessTransientData&quot;,&quot;OmniScriptSavedSession&quot;,&quot;OmniUiCard&quot;,&quot;OpenActivity&quot;,&quot;OperatingHours&quot;,&quot;OperatingHoursHoliday&quot;,&quot;OperatingUnitMap__c&quot;,&quot;Opp_Close_Step__c&quot;,&quot;Opp_Close_To_Future_RecordType_Settings__c&quot;,&quot;Opp_Products_Report__c&quot;,&quot;Opp_Sync_Mail__c&quot;,&quot;Opp_Tender_Status_Settings__c&quot;,&quot;Opportunity&quot;,&quot;OpportunityContactRole&quot;,&quot;OpportunityContactRoleSuggestionInsight&quot;,&quot;OpportunityHistory&quot;,&quot;OpportunityIBAssetJunction__c&quot;,&quot;OpportunityInsight&quot;,&quot;OpportunityLineItem&quot;,&quot;OpportunityLineItemSchedule&quot;,&quot;OpportunityParticipant&quot;,&quot;OpportunityPartner&quot;,&quot;OpportunitySplit&quot;,&quot;OpportunityTeamMember&quot;,&quot;Opportunity_Amendment_Request_Settings__c&quot;,&quot;Opportunity_Amendment_Result_Settings__c&quot;,&quot;Opportunity_Competitor_Setting__c&quot;,&quot;Opportunity_Competitor__c&quot;,&quot;Opportunity_GE_Bid_Decision_Settings__c&quot;,&quot;Opportunity_Order_Package__c&quot;,&quot;Opportunity_Owner_History__c&quot;,&quot;Opportunity_Sales_Forecast_Category__c&quot;,&quot;Opportunity_Step_settings__c&quot;,&quot;Opportunity_Tender_Type_Settings__c&quot;,&quot;Opportunity_owner_update_settings__c&quot;,&quot;Oppty_Primary_Reason_for_No_Bid_Settings__c&quot;,&quot;Oppty_Territory_Mapping__c&quot;,&quot;Order&quot;,&quot;OrderAction&quot;,&quot;OrderAdjustmentGroup&quot;,&quot;OrderAdjustmentGroupSummary&quot;,&quot;OrderChangeLog&quot;,&quot;OrderDeliveryGroup&quot;,&quot;OrderDeliveryGroupSummary&quot;,&quot;OrderDeliveryMethod&quot;,&quot;OrderItem&quot;,&quot;OrderItemAdjustmentLineItem&quot;,&quot;OrderItemAdjustmentLineSummary&quot;,&quot;OrderItemConsumptionRate&quot;,&quot;OrderItemConsumptionSchedule&quot;,&quot;OrderItemSummary&quot;,&quot;OrderItemSummaryChange&quot;,&quot;OrderItemTaxLineItem&quot;,&quot;OrderItemTaxLineItemSummary&quot;,&quot;OrderPaymentSummary&quot;,&quot;OrderPreview_Permission__c&quot;,&quot;OrderPreview_Select_Template__c&quot;,&quot;OrderRTLOV__c&quot;,&quot;OrderSummary&quot;,&quot;OrderSummaryRoutingSchedule&quot;,&quot;Order_Change_Detail__c&quot;,&quot;Order_Detail_Task_LTV_Code__c&quot;,&quot;Order_Detail_Task__c&quot;,&quot;Order_Forecast_Category_Settings__c&quot;,&quot;Order_Forecast_Dimension__c&quot;,&quot;Order_Forecast_History__c&quot;,&quot;Order_Forecast_OP__c&quot;,&quot;Order_Header_Global__c&quot;,&quot;Order_Header__c&quot;,&quot;Order_Notification__c&quot;,&quot;Order_Preview_Mandatory_Fields__c&quot;,&quot;Order_RTS_Interface_Log__c&quot;,&quot;Order_Shortage_Detail__c&quot;,&quot;Order_Status__c&quot;,&quot;Order__c&quot;,&quot;OrgMetric&quot;,&quot;OrgMetricScanResult&quot;,&quot;OrgMetricScanSummary&quot;,&quot;OtherComponentTask&quot;,&quot;OtherEmssnFctrSet&quot;,&quot;OtherEmssnFctrSetItem&quot;,&quot;PEGA_Order_Package__c&quot;,&quot;POS_Email_Notifications__c&quot;,&quot;Parent_Opportunity_Settings__c&quot;,&quot;Parent_Opportunity__c&quot;,&quot;Parent_Quote_GR_Mapping__c&quot;,&quot;PartnerFundAllocation&quot;,&quot;PartnerFundClaim&quot;,&quot;PartnerFundRequest&quot;,&quot;PartnerMarketingBudget&quot;,&quot;PartyConsent&quot;,&quot;PartyIncome&quot;,&quot;PatientHealthReaction&quot;,&quot;PatientImmunization&quot;,&quot;PatientMedicalProcedure&quot;,&quot;PatientMedicalProcedureDetail&quot;,&quot;PatientMedicationDosage&quot;,&quot;Payment&quot;,&quot;PaymentApplicationMethod&quot;,&quot;PaymentAuthAdjustment&quot;,&quot;PaymentAuthorization&quot;,&quot;PaymentBatchRun&quot;,&quot;PaymentGateway&quot;,&quot;PaymentGatewayLog&quot;,&quot;PaymentLineInvoice&quot;,&quot;PaymentPolicy&quot;,&quot;PaymentSchedule&quot;,&quot;PaymentScheduleItem&quot;,&quot;PaymentTerm&quot;,&quot;PaymentTermItem&quot;,&quot;PaymentTreatment&quot;,&quot;PcmtEmssnFctrSet&quot;,&quot;PcmtEmssnFctrSetItem&quot;,&quot;PegaPE__Pega_Gadget_Configuration__c&quot;,&quot;Pega_Global_Regions__c&quot;,&quot;PendingOrderSummary&quot;,&quot;People_soft_field_Maping__c&quot;,&quot;PersonAccount&quot;,&quot;PersonEducation&quot;,&quot;PersonEmployment&quot;,&quot;PersonExamination&quot;,&quot;PersonLanguage&quot;,&quot;PersonLifeEvent&quot;,&quot;PersonList&quot;,&quot;PersonListMember&quot;,&quot;PersonName&quot;,&quot;PgmRebateTypBnftMapping&quot;,&quot;PlanBenefit&quot;,&quot;PlanBenefitItem&quot;,&quot;PlatformLicenseDefinition&quot;,&quot;PoS_Term_Opportunity_PortFolio_Matrix__c&quot;,&quot;Policy_Risk_Flag__c&quot;,&quot;Polygon&quot;,&quot;Postal_Code__c&quot;,&quot;Pre_Install_Items__c&quot;,&quot;Pre_Order_Consultation_POC__c&quot;,&quot;Precise_Address__c&quot;,&quot;PreliminaryApplicationRef&quot;,&quot;Prevent_Task_Types_Duplicate__c&quot;,&quot;PriceAdjustmentSchedule&quot;,&quot;Pricebook2&quot;,&quot;PricebookEntry&quot;,&quot;Primary_Secondary_ReasonMapping__c&quot;,&quot;Probe_and_Coil_Addition__c&quot;,&quot;Probe_and_Coil_Data1__c&quot;,&quot;Problem&quot;,&quot;ProblemIncident&quot;,&quot;Problem_Case_Scoring__c&quot;,&quot;ProcessException&quot;,&quot;ProcessInstanceHistory&quot;,&quot;ProcessInstanceStep&quot;,&quot;ProcessInstanceWorkitem&quot;,&quot;Producer&quot;,&quot;ProducerCommission&quot;,&quot;ProducerPolicyAssignment&quot;,&quot;Product2&quot;,&quot;Product2DataTranslation&quot;,&quot;Product2__c&quot;,&quot;ProductAttribute&quot;,&quot;ProductAttributeSet&quot;,&quot;ProductAttributeSetItem&quot;,&quot;ProductAttributeSetProduct&quot;,&quot;ProductAvailabilityProjection&quot;,&quot;ProductCatalog&quot;,&quot;ProductCategory&quot;,&quot;ProductCategoryDataTranslation&quot;,&quot;ProductCategoryMedia&quot;,&quot;ProductCategoryProduct&quot;,&quot;ProductConsumed&quot;,&quot;ProductConsumedState&quot;,&quot;ProductConsumptionSchedule&quot;,&quot;ProductCoverage&quot;,&quot;ProductCoverageLimit&quot;,&quot;ProductFulfillmentLocation&quot;,&quot;ProductItem&quot;,&quot;ProductItemTransaction&quot;,&quot;ProductLicenseMap&quot;,&quot;ProductMedia&quot;,&quot;ProductQuantityRule&quot;,&quot;ProductRequest&quot;,&quot;ProductRequestLineItem&quot;,&quot;ProductRequired&quot;,&quot;ProductSellingModel&quot;,&quot;ProductSellingModelOption&quot;,&quot;ProductServiceCampaign&quot;,&quot;ProductServiceCampaignItem&quot;,&quot;ProductTransfer&quot;,&quot;ProductTransferState&quot;,&quot;ProductWarrantyTerm&quot;,&quot;Product_Access__c&quot;,&quot;Product_Activity_Detail__c&quot;,&quot;Product_Area_Code_Details__c&quot;,&quot;Product_Attribute_Value_Ext_1__c&quot;,&quot;Product_Charge_Type_Mapping__c&quot;,&quot;Product_Commercial_LifeCycle__c&quot;,&quot;Product_Complexity_Score_Settings__c&quot;,&quot;Product_Country_Material_Setting__c&quot;,&quot;Product_Country_Name_Setting__c&quot;,&quot;Product_Integration_Object__c&quot;,&quot;Product_Lead_Time__c&quot;,&quot;Product_Master__c&quot;,&quot;Product_Portfolio__c&quot;,&quot;Product_Pricing_Detail__c&quot;,&quot;Product_Pricing_Information__c&quot;,&quot;Product_Score_Chevron_Settings__c&quot;,&quot;Product_Special_Access_Request__c&quot;,&quot;Product_Special_Access__c&quot;,&quot;ProgramRebateTypPayoutSrc&quot;,&quot;ProgramRebateType&quot;,&quot;ProgramRebateTypeBenefit&quot;,&quot;ProgramRebateTypeFilter&quot;,&quot;ProgramRebateTypePayout&quot;,&quot;ProgramRebateTypeProduct&quot;,&quot;ProgramRebateTypeReference&quot;,&quot;Project_Contacts__c&quot;,&quot;Project_Stakeholder__c&quot;,&quot;Promotion&quot;,&quot;PromotionChannel&quot;,&quot;PromotionLoyaltyPtnrProdt&quot;,&quot;PromotionMarketSegment&quot;,&quot;PromotionProduct&quot;,&quot;PromotionProductCategory&quot;,&quot;PromotionQualifier&quot;,&quot;PromotionSegment&quot;,&quot;PromotionSegmentBuyerGroup&quot;,&quot;PromotionSegmentSalesStore&quot;,&quot;PromotionTarget&quot;,&quot;Proposal_Line_Item_Billing_Term__c&quot;,&quot;ProrationPolicy&quot;,&quot;ProviderNetworkContract&quot;,&quot;ProviderNetworkTier&quot;,&quot;ProviderSearchSyncLog&quot;,&quot;ProvisioningRun&quot;,&quot;ProvisioningRunEvent&quot;,&quot;PublicComplaint&quot;,&quot;PublicProgram&quot;,&quot;PurchaseQuantityRule&quot;,&quot;PurchaserPlan&quot;,&quot;PurchaserPlanAssn&quot;,&quot;QuickText&quot;,&quot;Quote&quot;,&quot;QuoteExtension__c&quot;,&quot;QuoteItemTaxItem&quot;,&quot;QuoteLineItem&quot;,&quot;QuoteStatusDetails__c&quot;,&quot;Quote_Contact_Role__c&quot;,&quot;Quote_Defaults__c&quot;,&quot;Quote_Remediate1__c&quot;,&quot;Quote_Remediate2__c&quot;,&quot;Quote_Remediate__c&quot;,&quot;RR_from_Task_Custom_Setting__c&quot;,&quot;RTSInterfaceCS__c&quot;,&quot;RTS_Enhancement__c&quot;,&quot;RebateMemberProductAggregate&quot;,&quot;RebatePayment&quot;,&quot;RebatePayoutAdjustment&quot;,&quot;RebateProgram&quot;,&quot;RebateProgramMember&quot;,&quot;RebateProgramMemberPayout&quot;,&quot;RebateProgramPayoutPeriod&quot;,&quot;RecalcDateUpdate__c&quot;,&quot;ReceivedDocument&quot;,&quot;Recommendation&quot;,&quot;RecordAction&quot;,&quot;RecordAlert&quot;,&quot;RecordMergeHistory&quot;,&quot;RecordType&quot;,&quot;RecordsetFilterCriteria&quot;,&quot;RecordsetFilterCriteriaRule&quot;,&quot;RefrigerantEmssnFctr&quot;,&quot;Refund&quot;,&quot;RefundLinePayment&quot;,&quot;RegAuthorizationTypeProduct&quot;,&quot;Region_For_VSA_Finish__c&quot;,&quot;Region_List__c&quot;,&quot;Region_Listing__c&quot;,&quot;Region_Settings__c&quot;,&quot;Regions_For_Eset_Link__c&quot;,&quot;RegulatoryAuthority&quot;,&quot;RegulatoryAuthorizationType&quot;,&quot;RegulatoryCode&quot;,&quot;RegulatoryCodeAssessmentInd&quot;,&quot;RegulatoryCodeViolation&quot;,&quot;RegulatoryTrxnFee&quot;,&quot;RegulatoryTrxnFeeItem&quot;,&quot;RegulatoryTrxnFeePayment&quot;,&quot;Reltio_Attribute_Data_type_mapping__c&quot;,&quot;Reltio_Country_Attributes__c&quot;,&quot;Reminder_Time_List__c&quot;,&quot;RentalCarEmssnFctr&quot;,&quot;RentalCarEnrgyUse&quot;,&quot;ReplyText&quot;,&quot;Report&quot;,&quot;ReportAnomalyEventStore&quot;,&quot;Reservation_buffer_days__c&quot;,&quot;ResidentialLoanApplication&quot;,&quot;ResourceAbsence&quot;,&quot;ResourcePreference&quot;,&quot;Resource_Request_Record_Types__c&quot;,&quot;RetailLocationGroup&quot;,&quot;RetailStore&quot;,&quot;RetailStoreGroupAssignment&quot;,&quot;RetailStoreKpi&quot;,&quot;RetailVisitKpi&quot;,&quot;ReturnOrder&quot;,&quot;ReturnOrderItemAdjustment&quot;,&quot;ReturnOrderItemTax&quot;,&quot;ReturnOrderLineItem&quot;,&quot;RevRecogTreatmentItemGroup&quot;,&quot;RevenueDistributionMethod&quot;,&quot;RevenueElement&quot;,&quot;RevenueElementDistribution&quot;,&quot;RevenueRecogTreatmentItem&quot;,&quot;RevenueRecognitionPolicy&quot;,&quot;RevenueRecognitionTreatment&quot;,&quot;RevenueTransactionErrorLog&quot;,&quot;Revenue__c&quot;,&quot;ReviewRequests__c&quot;,&quot;SCORE_Approval_Threshold_Matrix__c&quot;,&quot;SCORE_Policy_6_0__c&quot;,&quot;SCORE_Product_Portfolio_Matrix__c&quot;,&quot;SDI_Business_Type__c&quot;,&quot;SFDCFieldTranslations__c&quot;,&quot;SFDC_Siebel_Integration__c&quot;,&quot;SF_License_Costs__c&quot;,&quot;SMAXAttributeSettings__c&quot;,&quot;SSO_API__c&quot;,&quot;SSO_ID__c&quot;,&quot;SVMXC__Batch_Lot_Master__c&quot;,&quot;SVMXC__Config_Change_Detail__c&quot;,&quot;SVMXC__Field_Default_Rules__c&quot;,&quot;SVMXC__SM_Application_Feature__c&quot;,&quot;SVMXC__SM_Appointment_Status__c&quot;,&quot;SVMXC__SM_Batch_Lot__c&quot;,&quot;SVMXC__SM_Change_Order_Configuration__c&quot;,&quot;SVMXC__SM_Change_Order_Criteria__c&quot;,&quot;SVMXC__SM_Change_Order_Line__c&quot;,&quot;SVMXC__SM_Change_Order_Log__c&quot;,&quot;SVMXC__SM_Change_Order_Parts__c&quot;,&quot;SVMXC__SM_Change_Order__c&quot;,&quot;SVMXC__SM_Crew_Resource__c&quot;,&quot;SVMXC__SM_Crew__c&quot;,&quot;SVMXC__SM_Feature_Permission__c&quot;,&quot;SVMXC__SM_IG_Job_Child__c&quot;,&quot;SVMXC__SM_IG_Job_Request__c&quot;,&quot;SVMXC__SM_IoT_Field_Mapping__c&quot;,&quot;SVMXC__SM_Recent_Items__c&quot;,&quot;SVMXC__SM_SB_Queue_Inbound__c&quot;,&quot;SVMXC__SM_SB_Queue_Outbound__c&quot;,&quot;SVMXC__SM_SFA_Process__c&quot;,&quot;SVMXC__SM_SFMTransactionSync__c&quot;,&quot;SVMXC__SPM_Mean_Time_Between_Failure__c&quot;,&quot;SWB_General_Settings__c&quot;,&quot;SalesAgreement&quot;,&quot;SalesAgreementProduct&quot;,&quot;SalesAgreementProductSchedule&quot;,&quot;SalesChannel&quot;,&quot;Sales_Coach_Activity__c&quot;,&quot;Sales_Coach_Admin__c&quot;,&quot;Sales_Coach_Role__c&quot;,&quot;Sales_Coach_Section_Item__c&quot;,&quot;Sales_Coach_Section__c&quot;,&quot;Sales_Coach_Stage__c&quot;,&quot;Salesforce_General_Setting__c&quot;,&quot;Schedule__c&quot;,&quot;SchedulingConstraint&quot;,&quot;Scope3CrbnFtprnt&quot;,&quot;Scope3EmssnSrc&quot;,&quot;Scope3PcmtItem&quot;,&quot;Scope3PcmtSummary&quot;,&quot;Score_Global_Flag_Help_Menu_Settings__c&quot;,&quot;Scorecard&quot;,&quot;ScorecardAssociation&quot;,&quot;ScorecardMetric&quot;,&quot;ScratchOrgInfo&quot;,&quot;SearchPromotionRule&quot;,&quot;SecuritiesHolding&quot;,&quot;Seller&quot;,&quot;Send_Email_to_Users_Settings__c&quot;,&quot;Send_Welcome_Email_to_Users__c&quot;,&quot;SerializedProduct&quot;,&quot;SerializedProductTransaction&quot;,&quot;ServiceAppointment&quot;,&quot;ServiceAppointmentCapacityUsage&quot;,&quot;ServiceContract&quot;,&quot;ServiceCrew&quot;,&quot;ServiceCrewMember&quot;,&quot;ServiceReport&quot;,&quot;ServiceResource&quot;,&quot;ServiceResourceCapacity&quot;,&quot;ServiceResourcePreference&quot;,&quot;ServiceResourceSkill&quot;,&quot;ServiceTerritory&quot;,&quot;ServiceTerritoryLocation&quot;,&quot;ServiceTerritoryMember&quot;,&quot;ServiceTerritoryWorkType&quot;,&quot;Service_CPQ_General_Setting__c&quot;,&quot;Service_Contract_Schedule_Detail__c&quot;,&quot;Service_Oppty_Country_with_USD__c&quot;,&quot;Service_Region_Country_List__c&quot;,&quot;Service_Request__c&quot;,&quot;Service_Staging_Object__c&quot;,&quot;SessionHijackingEventStore&quot;,&quot;SettingUsageDefinition&quot;,&quot;SettingUsageMap&quot;,&quot;SetupAssistantStep&quot;,&quot;Shadow_Activity_Detail__c&quot;,&quot;Shadow_Activity__c&quot;,&quot;SharingRecordCollection&quot;,&quot;SharingRecordCollectionItem&quot;,&quot;Shift&quot;,&quot;ShiftPattern&quot;,&quot;ShiftPatternEntry&quot;,&quot;ShiftSchedulingOperation&quot;,&quot;ShiftTemplate&quot;,&quot;Shipment&quot;,&quot;ShipmentItem&quot;,&quot;Shipment_Detail__c&quot;,&quot;Siebel_General_Settings__c&quot;,&quot;SignatureTask&quot;,&quot;SignatureTaskLineItem&quot;,&quot;SiqExchangeConnection&quot;,&quot;Site_Ready_Risk__c&quot;,&quot;SkillLevelDefinition&quot;,&quot;SkillRequirement&quot;,&quot;Skip_Validation_for_Lead_Conversion__c&quot;,&quot;Snippet&quot;,&quot;SnippetAssignment&quot;,&quot;SocialPersona&quot;,&quot;SocialPost&quot;,&quot;SpreadCallback_Criteria__c&quot;,&quot;Stakeholder_Relationship_Map_Settings__c&quot;,&quot;Stakeholder__c&quot;,&quot;StandardPermissionSet&quot;,&quot;State_List__c&quot;,&quot;StnryAssetCrbnFtprnt&quot;,&quot;StnryAssetCrbnFtprntItm&quot;,&quot;StnryAssetEnrgyUse&quot;,&quot;StnryAssetEnvrSrc&quot;,&quot;StoreActionPlanTemplate&quot;,&quot;StoreAssortment&quot;,&quot;StoreProduct&quot;,&quot;StreamingChannel&quot;,&quot;StreamingChannel__c&quot;,&quot;SubTotalCFD__c&quot;,&quot;SubTotalValues__c&quot;,&quot;Sub_Region_Settings__c&quot;,&quot;SubmITO_P_L_Mapping__c&quot;,&quot;Subtotal_Map__c&quot;,&quot;SupportPageSection__c&quot;,&quot;SupportSettings__c&quot;,&quot;Survey&quot;,&quot;SurveyEmailBranding&quot;,&quot;SurveyInvitation&quot;,&quot;SurveyQuestion&quot;,&quot;SurveyQuestionChoice&quot;,&quot;SurveyQuestionResponse&quot;,&quot;SurveyResponse&quot;,&quot;SurveyVersion&quot;,&quot;SvcCatalogReqRelatedItem&quot;,&quot;SvcCatalogRequest&quot;,&quot;Swarm&quot;,&quot;SwarmMember&quot;,&quot;System_Component__c&quot;,&quot;TASKRAY_LTNG__trLTNGGlobalSettings__c&quot;,&quot;TASKRAY__Project_Task_PublicAttrs__c&quot;,&quot;TASKRAY__Project_Task__c&quot;,&quot;TASKRAY__Project__c&quot;,&quot;TASKRAY__ViewProjectTasks__c&quot;,&quot;TASKRAY__trBaseline_Project__c&quot;,&quot;TASKRAY__trBaseline_Task_Group__c&quot;,&quot;TASKRAY__trBaseline_Task__c&quot;,&quot;TASKRAY__trBoardFilterDetails__c&quot;,&quot;TASKRAY__trBoardFilterShareJunction__c&quot;,&quot;TASKRAY__trBoardFilterUserJunction__c&quot;,&quot;TASKRAY__trBoardFilter__c&quot;,&quot;TASKRAY__trBoardPowerFilter__c&quot;,&quot;TASKRAY__trChecklistGroup__c&quot;,&quot;TASKRAY__trChecklistItem__c&quot;,&quot;TASKRAY__trContributor__c&quot;,&quot;TASKRAY__trDependency__c&quot;,&quot;TASKRAY__trGlobalSettings__c&quot;,&quot;TASKRAY__trHistory__c&quot;,&quot;TASKRAY__trMetadataCache__c&quot;,&quot;TASKRAY__trPendingInterview__c&quot;,&quot;TASKRAY__trProjectInboxNotification__c&quot;,&quot;TASKRAY__trProjectNotification__c&quot;,&quot;TASKRAY__trRecordTypeMapping__c&quot;,&quot;TASKRAY__trSettings__c&quot;,&quot;TASKRAY__trTaskGroup__c&quot;,&quot;TASKRAY__trTaskInboxNotification__c&quot;,&quot;TASKRAY__trTaskNotification__c&quot;,&quot;TASKRAY__trTaskTime__c&quot;,&quot;TCO_Cost_Data__c&quot;,&quot;TabDefinition&quot;,&quot;Task&quot;,&quot;TaskRay_CustomerContact__c&quot;,&quot;TaskRay_Helium_Information__c&quot;,&quot;TaskRay_Install_Cost__c&quot;,&quot;TaskRay_Pre_Install_Items__c&quot;,&quot;TaskRay_Stakeholder__c&quot;,&quot;Task_Types_For_Eset_Link__c&quot;,&quot;Task_Types_for_Date_Update__c&quot;,&quot;Taskray_Change_Order__c&quot;,&quot;Taskray_Construction_Rev_Quote_PO__c&quot;,&quot;Taskray_DCR__c&quot;,&quot;Taskray_Eset_Link__c&quot;,&quot;Taskray_Magnetic_Containment__c&quot;,&quot;Taskray_Order_Shortage_Detail__c&quot;,&quot;Taskray_Project_Settings__c&quot;,&quot;Taskray_REST_Project_Status__c&quot;,&quot;Taskray_Site_Ready_Risk__c&quot;,&quot;Taskray_Survey_Languages_Mapping__c&quot;,&quot;Taskray_Task_Types_For_Project__c&quot;,&quot;Taskray_Task_Types_For_RR__c&quot;,&quot;Taskray_eOMRegions__c&quot;,&quot;Taskray_eOM_event_log__c&quot;,&quot;TaxCertificate&quot;,&quot;TaxEngine&quot;,&quot;TaxEngineInteractionLog&quot;,&quot;TaxPolicy&quot;,&quot;TaxTreatment&quot;,&quot;TempCareAreaRemediation__c&quot;,&quot;Template_Product_Information__c&quot;,&quot;Template_Tender_Term_Information__c&quot;,&quot;Tenant&quot;,&quot;TenantParameterMap&quot;,&quot;Term_Exceptions__c&quot;,&quot;TermsFieldEditableProfiles__c&quot;,&quot;Territory_Account__c&quot;,&quot;Territory__c&quot;,&quot;TestCustom__c&quot;,&quot;Test_Classes_Settings__c&quot;,&quot;ThreatDetectionFeedback&quot;,&quot;Tiba_Custom_Settings__c&quot;,&quot;Tier1_Level_Thresholds__c&quot;,&quot;TimeSheet&quot;,&quot;TimeSheetEntry&quot;,&quot;TimeSheetTemplate&quot;,&quot;TimeSlot&quot;,&quot;Top_X_Designation__c&quot;,&quot;Topic&quot;,&quot;Trade_In_Valuation_Settings__c&quot;,&quot;TrainingCourseParticipant&quot;,&quot;TransactionJournal&quot;,&quot;TravelMode&quot;,&quot;TrialEnvironmentSignup&quot;,&quot;Trigger_For_Box__c&quot;,&quot;TrnCourse&quot;,&quot;USERLocale__c&quot;,&quot;UnifiedEmail&quot;,&quot;UnitOfMeasure&quot;,&quot;UnitOfMeasureConversion&quot;,&quot;UsageEntitlement&quot;,&quot;UsageEntitlementPeriod&quot;,&quot;UsageEntitlementUsage&quot;,&quot;UsageFactor&quot;,&quot;User&quot;,&quot;UserAppMenuItem&quot;,&quot;UserLicenseDefinition&quot;,&quot;User_Action__c&quot;,&quot;User_Link__c&quot;,&quot;User_Log_Setting__c&quot;,&quot;VCP_All_Region_BU__c&quot;,&quot;VCP_Setting__c&quot;,&quot;Validate_VAT_Country__c&quot;,&quot;VehicleAssetCrbnFtprnt&quot;,&quot;VehicleAssetEmssnSrc&quot;,&quot;VehicleAssetEnrgyUse&quot;,&quot;VehicleUserAssignment&quot;,&quot;Vendor_Cost_Matrix__c&quot;,&quot;Vendor__c&quot;,&quot;VideoCall&quot;,&quot;ViolationEnforcementAction&quot;,&quot;ViolationInspAssessmentInd&quot;,&quot;ViolationType&quot;,&quot;ViolationTypeAssessmentInd&quot;,&quot;VisionPredictionSettings&quot;,&quot;Visit&quot;,&quot;VisitOps__Agenda_Survey__c&quot;,&quot;VisitOps__Agenda__c&quot;,&quot;VisitOps__AttendeeImportInstructions__c&quot;,&quot;VisitOps__Attendee__c&quot;,&quot;VisitOps__CSVHeaderForAttendees__c&quot;,&quot;VisitOps__Caterer__c&quot;,&quot;VisitOps__CateringProductsAndServices__c&quot;,&quot;VisitOps__Company__c&quot;,&quot;VisitOps__Content_Custom_Setting__c&quot;,&quot;VisitOps__Expense__c&quot;,&quot;VisitOps__Expertise_Area__c&quot;,&quot;VisitOps__Innovation_Board__c&quot;,&quot;VisitOps__LocationTypeLink__c&quot;,&quot;VisitOps__Location_Product_Category__c&quot;,&quot;VisitOps__Location_Product_Link__c&quot;,&quot;VisitOps__Location_Product__c&quot;,&quot;VisitOps__Location__c&quot;,&quot;VisitOps__Logistics_Supplier_Link__c&quot;,&quot;VisitOps__Mobile_Visit_Roles__c&quot;,&quot;VisitOps__Place__c&quot;,&quot;VisitOps__Presenter_Agenda_Link__c&quot;,&quot;VisitOps__Presenter_Expertise_Link__c&quot;,&quot;VisitOps__Presenter_Survey__c&quot;,&quot;VisitOps__Presenter__c&quot;,&quot;VisitOps__Products_and_Services__c&quot;,&quot;VisitOps__Program_Location_Link__c&quot;,&quot;VisitOps__Program_Type_Link__c&quot;,&quot;VisitOps__Program__c&quot;,&quot;VisitOps__Room_Schedule__c&quot;,&quot;VisitOps__Room__c&quot;,&quot;VisitOps__Status_Mapping__c&quot;,&quot;VisitOps__Status__c&quot;,&quot;VisitOps__Supplier__c&quot;,&quot;VisitOps__Survey__c&quot;,&quot;VisitOps__Topic_Category__c&quot;,&quot;VisitOps__Topic__c&quot;,&quot;VisitOps__VisitBundle__c&quot;,&quot;VisitOps__VisitType__c&quot;,&quot;VisitOps__Visit_Content__c&quot;,&quot;VisitOps__Visit_Control__c&quot;,&quot;VisitOps__Visit_Logistics__c&quot;,&quot;VisitOps__Visit__c&quot;,&quot;VisitTask&quot;,&quot;VisitTaskContext&quot;,&quot;VisitTaskContextRelation&quot;,&quot;VisitedParty&quot;,&quot;Visitor&quot;,&quot;VoiceCall&quot;,&quot;VolunteerProject&quot;,&quot;Voucher&quot;,&quot;VoucherDefinition&quot;,&quot;W2CGlobRegionSvcSubRegionMapping__c&quot;,&quot;WM4SF3__WalkMeExtension__c&quot;,&quot;WM4SF3__WalkMeLicense__c&quot;,&quot;WarrantyTerm&quot;,&quot;WasteFootprint&quot;,&quot;WasteFootprintItem&quot;,&quot;WaveAutoInstallRequest&quot;,&quot;WebCart&quot;,&quot;WebStore&quot;,&quot;WebStoreBuyerGroup&quot;,&quot;WebStoreCatalog&quot;,&quot;WebStorePricebook&quot;,&quot;WebStoreSearchProdSettings&quot;,&quot;WebserviceIntegration__c&quot;,&quot;WorkCapacityLimit&quot;,&quot;WorkCapacityUsage&quot;,&quot;WorkContract&quot;,&quot;WorkForecastRun&quot;,&quot;WorkOrder&quot;,&quot;WorkOrderLineItem&quot;,&quot;WorkPlan&quot;,&quot;WorkPlanSelectionRule&quot;,&quot;WorkPlanTemplate&quot;,&quot;WorkPlanTemplateEntry&quot;,&quot;WorkSkillRouting&quot;,&quot;WorkStep&quot;,&quot;WorkStepTemplate&quot;,&quot;WorkType&quot;,&quot;WorkTypeCareSpecialty&quot;,&quot;WorkTypeCodeSetBundle&quot;,&quot;WorkTypeGroup&quot;,&quot;WorkTypeGroupMember&quot;,&quot;WorkerCompCoverageClass&quot;,&quot;Workflow_Master_Deactivation__c&quot;,&quot;WorkforceCapacityPlan&quot;,&quot;WstDispoEmssnFctrSet&quot;,&quot;WstDispoEmssnFctrSetItm&quot;,&quot;Zone_List__c&quot;,&quot;Zone_Settings__c&quot;,&quot;Zone__c&quot;,&quot;analyticsadopt__DatasetDetails__c&quot;,&quot;analyticsadopt__DatasetSpecs__c&quot;,&quot;box__BOSS_Exception__c&quot;,&quot;box__FRUP__c&quot;,&quot;box__Folder_Details__c&quot;,&quot;box__Folder_Meta__c&quot;,&quot;box__ItemMoveQueue__c&quot;,&quot;box__LeadConvertQueue__c&quot;,&quot;box__Lead_Setting__c&quot;,&quot;box__SSO_Setting__c&quot;,&quot;catalogitems__c&quot;,&quot;ctcoach__CT_Coach_Assessment__c&quot;,&quot;ctcoach__CT_Coach_Score__c&quot;,&quot;dfsle__EOS_Type__c&quot;,&quot;eBluebook_TradeIn_application__c&quot;,&quot;eContacts__Queue_Item__c&quot;,&quot;eContacts__Settings__c&quot;,&quot;eOMRegions__c&quot;,&quot;eOM_Auth__c&quot;,&quot;eOM_Batch_Audit__c&quot;,&quot;eOM_CountryCode_Region_Mapping__c&quot;,&quot;eOM_Disabled_Modalities__c&quot;,&quot;eOM_Integration_Configuration__c&quot;,&quot;eOM_OU_Region_Mapping__c&quot;,&quot;eOM_Status_Mapping__c&quot;,&quot;email_alert__c&quot;,&quot;footprint__footprint_Listview__c&quot;,&quot;galigeo__Category__c&quot;,&quot;galigeo__Dashboard__c&quot;,&quot;galigeo__Data_Source__c&quot;,&quot;galigeo__GGO_Custom_Object__c&quot;,&quot;galigeo__GeoFilter_Condition__c&quot;,&quot;galigeo__GeoFilter_Definition__c&quot;,&quot;galigeo__Geographic_Layer__c&quot;,&quot;galigeo__Map_Object_Action__c&quot;,&quot;galigeo__Map_Object_Field__c&quot;,&quot;galigeo__Query_Field__c&quot;,&quot;galigeo__Query_Layer__c&quot;,&quot;galigeo__SW_Map_Object__c&quot;,&quot;galigeo__SellWhereConfig__c&quot;,&quot;galigeo__SellWhereConfiguration__c&quot;,&quot;galigeo__SellWhereImages__c&quot;,&quot;galigeo__SellWhereMapConfig__c&quot;,&quot;galigeo__Symbology__c&quot;,&quot;galigeo__Thematic__c&quot;,&quot;galigeo__Visual_Analytic__c&quot;,&quot;galigeo__Visual_DataSet__c&quot;,&quot;galigeo__Visual_Object__c&quot;,&quot;gecorpcoebox__Box_Administrator__c&quot;,&quot;gecorpcoebox__Device_Name__c&quot;,&quot;gecorpcoebox__GE_Box_Permission_Set__c&quot;,&quot;ltngsharing__PrivateTestObject__c&quot;,&quot;ltngsharing__ReadOnlyTestObject__c&quot;,&quot;maps__MapsSetting__c&quot;,&quot;mkto_si__MarketoSettings__c&quot;,&quot;mkto_si__UserPreferences__c&quot;,&quot;quote_hub_user_preference__c&quot;,&quot;refedge__Advanced_Routing__c&quot;,&quot;refedge__POR_App_Configuration__c&quot;,&quot;refedge__User_Profile__c&quot;,&quot;rtsync__LoggerSettings__c&quot;,&quot;rtsync__Reltio_Sbc_Filter_Setting__c&quot;,&quot;rtsync__Reltio_Sync_Settings__c&quot;,&quot;taskRay_resource_request__c&quot;,&quot;taskray_Customer_Event__c&quot;,&quot;tinderbox__Document__c&quot;,&quot;tinderbox__Proposal__c&quot;,&quot;tinderbox__TinderBox_Accounts__c&quot;,&quot;tinderbox__TinderBox_Log__c&quot;,&quot;tinderbox__TinderBox__c&quot;,&quot;tinderbox__content__c&quot;]},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=21&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getActionOverrides=1&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getIsLWCFlexipageEnabled=1&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getKeyPrefixesWithRecordTypes=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">430620000005dfdc6a</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=24&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getFlexipageInfo=1-446" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1718;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getFlexipageInfo&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;flexipageOverrides&quot;:{&quot;Apttus_Config2__ProductConfiguration__c&quot;:[&quot;Product_Configuration_Record_Page&quot;],&quot;Apttus_Proposal__Proposal__c&quot;:[&quot;Global_Quote_Proposal&quot;,&quot;Global_Quote_Proposal&quot;,&quot;Global_Quote_Proposal&quot;,&quot;Global_Quote_Proposal&quot;,&quot;Equipment_Quote_Layout&quot;,&quot;Global_Quote_Proposal&quot;,&quot;Global_Quote_Proposal&quot;,&quot;Global_Quote_Proposal&quot;,&quot;ODS_Quote_Layout&quot;,&quot;Equipment_Quote_Layout&quot;,&quot;Global_Quote_Proposal&quot;,&quot;Global_Quote_Proposal&quot;,&quot;Global_Quote_Proposal&quot;,&quot;Global_Quote_Proposal&quot;,&quot;Global_Quote_Proposal&quot;],&quot;Account&quot;:[&quot;USCAN_Account&quot;,&quot;USCAN_Account&quot;,&quot;USCAN_Account&quot;,&quot;USCAN_Account&quot;,&quot;USCAN_Account&quot;],&quot;Taskray_DCR__c&quot;:[&quot;Design_Center_Request_Record_Page&quot;],&quot;IB_Asset__c&quot;:[&quot;Global_IB_Asset&quot;,&quot;Global_IB_Asset&quot;,&quot;USCAN_IB_Asset&quot;,&quot;USCAN_IB_Asset&quot;],&quot;Apttus__APTS_Agreement__c&quot;:[&quot;Global_Agreements&quot;,&quot;Global_Agreements&quot;,&quot;Equipment_Agreement&quot;,&quot;Equipment_Agreement&quot;,&quot;Global_Agreements&quot;,&quot;Global_Agreements&quot;,&quot;Global_Agreements&quot;,&quot;Global_Agreements&quot;,&quot;Global_Agreements&quot;,&quot;Global_Agreements&quot;,&quot;Global_Agreements&quot;,&quot;Global_Agreements&quot;,&quot;Global_Agreements&quot;,&quot;Global_Agreements&quot;,&quot;Agreement_Record_Page&quot;,&quot;Agreement_Record_Page&quot;],&quot;VisitOps__Visit__c&quot;:[&quot;VisitOps__Visit_Detail_Lightning&quot;],&quot;Opportunity&quot;:[&quot;USCAN_Opportunity&quot;,&quot;USCAN_Opportunity&quot;,&quot;USCAN_Opportunity&quot;,&quot;Opportunity_Orders_to_Go&quot;,&quot;USCAN_Opportunity&quot;,&quot;USCAN_Term_Opportunity&quot;,&quot;Opportunity_Record_Page1&quot;],&quot;Lead&quot;:[&quot;Global_Lead&quot;,&quot;Global_Lead&quot;,&quot;Global_Lead&quot;,&quot;Global_Lead&quot;,&quot;Global_Lead&quot;],&quot;Apttus_Config2__PriceListItem__c&quot;:[&quot;Price_List_Item_Record_Page1&quot;],&quot;ELTON__Equipment__c&quot;:[&quot;Equipment_Record_Page1&quot;],&quot;Parent_Opportunity__c&quot;:[&quot;Global_Parent_Opportunities_Projects1&quot;,&quot;Global_Parent_Opportunities_Projects1&quot;,&quot;Global_Parent_Opportunities_Projects1&quot;,&quot;Global_Parent_Opportunities_Projects1&quot;,&quot;Global_Parent_Opportunities_Projects1&quot;,&quot;Global_Parent_Opportunities_Projects1&quot;],&quot;TASKRAY__Project_Task__c&quot;:[&quot;TaskRay_Task_Record_Page1&quot;,&quot;TaskRay_Task_Record_Page1&quot;],&quot;Installation__c&quot;:[&quot;Global_Installations_all_record_types&quot;,&quot;Global_Installations_all_record_types&quot;,&quot;Global_Installations_all_record_types&quot;,&quot;Global_Installations_all_record_types&quot;,&quot;Global_Installations_all_record_types&quot;,&quot;Global_Installations_all_record_types&quot;,&quot;Global_Installations_all_record_types&quot;],&quot;Apttus__APTS_Template__c&quot;:[&quot;Template_Page&quot;],&quot;Case&quot;:[&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;],&quot;Contract_Line_Item__c&quot;:[&quot;Global_Contract_Line_Item1&quot;,&quot;Global_Contract_Line_Item1&quot;],&quot;VisitOps__Location_Product_Link__c&quot;:[&quot;VisitOps__Location_Product_Link_Record_Page&quot;],&quot;SCORE_Policy_6_0__c&quot;:[&quot;SCORE_Policy_6_0&quot;],&quot;TaskRay_CustomerContact__c&quot;:[&quot;Customer_Contact_Record_Page&quot;],&quot;IB_Product__c&quot;:[&quot;Global_IB_Products&quot;,&quot;Global_IB_Products&quot;],&quot;ELTON__Equipment_Order__c&quot;:[&quot;Global_Demo_Request&quot;,&quot;Global_Demo_Request&quot;,&quot;Global_Demo_Request&quot;,&quot;Global_Demo_Request&quot;,&quot;Global_Demo_Request&quot;,&quot;Global_Demo_Request&quot;,&quot;Global_Demo_Request&quot;],&quot;CommEx_Support__c&quot;:[&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;],&quot;ELTON__Equipment_Type__c&quot;:[&quot;Equipment_Type_Record_Page1&quot;],&quot;taskray_Customer_Event__c&quot;:[&quot;Customer_Event_Record_Page&quot;],&quot;Community_template__c&quot;:[&quot;Community_Template_Record_Page&quot;],&quot;TASKRAY__Project__c&quot;:[&quot;TaskRay_Project_Record_Page1&quot;,&quot;Taskray_project_Record_Page_LCS&quot;,&quot;TaskRay_Project_Record_Page1&quot;,&quot;TaskRay_Project_Record_Page2&quot;],&quot;Account_Prioritization__c&quot;:[&quot;Global_Account_Prioritization&quot;,&quot;Global_Account_Prioritization&quot;],&quot;ELTON__Equipment_Order_Line__c&quot;:[&quot;Demo_Request_items_Record_Page&quot;],&quot;taskRay_resource_request__c&quot;:[&quot;Resource_Request_Record_Page&quot;],&quot;Contract__c&quot;:[&quot;Global_Contract1&quot;,&quot;Global_Contract1&quot;,&quot;Global_Contract1&quot;],&quot;ELTON__Equipment_Loan__c&quot;:[&quot;Equipment_Loan_Record_Page&quot;],&quot;LiveChatTranscript&quot;:[&quot;AKA_Live_Agent_Chat_Transcript&quot;],&quot;Contact&quot;:[&quot;Global_Contact2_0&quot;,&quot;Global_Contact2_0&quot;,&quot;Global_Contact2_0&quot;]}},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=24&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getFlexipageInfo=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">460360000006a2edc5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cs192/auraCmpDef-443" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="one" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">one</stringProp>
                  <stringProp name="Argument.value">lexOnboardingManagerService,onePreloads</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">1358627691</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName8}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cs192/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=25&amp;ui-global-components-one-onboardingManager.OnboardingManager.getPayload=1-449" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1730;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.onboardingManager.OnboardingManagerController/ACTION$getPayload&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;contextualData&quot;:{&quot;appContainer&quot;:&quot;lex&quot;,&quot;appDefinition&quot;:{&quot;id&quot;:&quot;06m0c0000014dgDAAQ&quot;,&quot;developerName&quot;:&quot;USCAN_Sales&quot;},&quot;pageReference&quot;:{&quot;type&quot;:&quot;standard__namedPage&quot;,&quot;attributes&quot;:{&quot;pageName&quot;:&quot;home&quot;},&quot;state&quot;:{}},&quot;testModeEnabled&quot;:false,&quot;testModeShowSeen&quot;:false,&quot;authoringMode&quot;:false,&quot;skipDeclarativePrompts&quot;:false}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=25&amp;ui-global-components-one-onboardingManager.OnboardingManager.getPayload=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">4771000000076991e6</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=26&amp;ui-force-components-controllers-fingerprint.Fingerprint.logFingerprint=1-450" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1733;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.fingerprint.FingerprintController/ACTION$logFingerprint&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;fingerprint&quot;:&quot;{\&quot;platform\&quot;:\&quot;Win32\&quot;,\&quot;navigatorUserAgent\&quot;:\&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0\&quot;,\&quot;window\&quot;:\&quot;695x1295\&quot;,\&quot;screen\&quot;:\&quot;720x1280\&quot;,\&quot;color\&quot;:\&quot;24-24\&quot;,\&quot;timezoneOffset\&quot;:\&quot;-330\&quot;,\&quot;canvas\&quot;:\&quot;1463038862\&quot;,\&quot;sessionStorage\&quot;:\&quot;true\&quot;,\&quot;LocalStorage\&quot;:\&quot;true\&quot;,\&quot;indexDB\&quot;:\&quot;true\&quot;,\&quot;webSockets\&quot;:\&quot;true\&quot;,\&quot;plugins\&quot;:\&quot;\&quot;,\&quot;drm\&quot;:1,\&quot;languages\&quot;:\&quot;[\\\&quot;en-US\\\&quot;,\\\&quot;en\\\&quot;]\&quot;,\&quot;fonts\&quot;:\&quot;Zn--3338f-8=\&quot;,\&quot;codecs\&quot;:\&quot;gMGIqqqgRqoCqH4=\&quot;,\&quot;mediaDevices\&quot;:\&quot;videoinput::XwJhCpgR/9/NBgUe0OOa2RkvFPhbuqASs85vrojHhN4=\\naudioinput::QXm3VxOqXBc73xsoZ7JuZjhMRkYMZfv/5vJR1eJ2Px4=\\naudioinput::GqjzkuEuY/EpZBeSEzxVZpdOWSb31k0hpawWxIh8rvc=\\n\&quot;}&quot;,&quot;detailedLogging&quot;:true}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=26&amp;ui-force-components-controllers-fingerprint.Fingerprint.logFingerprint=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">51492000000492ff58</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="GE_CloneToSameOpp_06_SearchQuoteNumber" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=27&amp;ui-search-components-forcesearch-sgdp.MRUCache.getGlobalMrus=1-451" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1765;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.sgdp.MRUCacheController/ACTION$getGlobalMrus&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;maxResults&quot;:200,&quot;lastTenMrus&quot;:[&quot;${c_clkRecordId}AAA&quot;,&quot;a5k7d0000011KISAA2&quot;,&quot;a6R7d000000L1MyEAK&quot;,&quot;${c_recordId}&quot;,&quot;001a000001dLchaAAC&quot;,&quot;0067d00000Jaxf2AAB&quot;,&quot;5007d00000Bw2mCAAR&quot;,&quot;0067d00000JavZmAAJ&quot;,&quot;a5k7d0000011KIIAA2&quot;,&quot;01sa00000003ptzAAA&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=27&amp;ui-search-components-forcesearch-sgdp.MRUCache.getGlobalMrus=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">583290000003c47c2e</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=28&amp;ui-search-components-forcesearch-assistant.AssistantSuggestionsDataProvider.getSuggestions=1-452" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1779;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.assistant.AssistantSuggestionsDataProviderController/ACTION$getSuggestions&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;term&quot;:&quot;${p_QuoteNumber}&quot;,&quot;scopeMap&quot;:{&quot;type&quot;:&quot;TOP_RESULTS&quot;},&quot;maxRecords&quot;:&quot;5&quot;,&quot;maxQueries&quot;:&quot;20&quot;,&quot;maxTips&quot;:&quot;20&quot;,&quot;maxListViews&quot;:&quot;20&quot;,&quot;passedScopeMaps&quot;:[{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Account&quot;,&quot;nameField&quot;:&quot;Name&quot;,&quot;disambiguationField&quot;:&quot;Ultimate_P_Parent__c&quot;,&quot;disambiguationFieldType&quot;:&quot;STRING&quot;,&quot;labelPlural&quot;:&quot;Accounts&quot;,&quot;label&quot;:&quot;Account&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Opportunity&quot;,&quot;nameField&quot;:&quot;Name&quot;,&quot;disambiguationField&quot;:&quot;Account.Name&quot;,&quot;disambiguationFieldType&quot;:&quot;NESTED&quot;,&quot;labelPlural&quot;:&quot;Opportunities&quot;,&quot;label&quot;:&quot;Opportunity&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Lead&quot;,&quot;nameField&quot;:&quot;Name&quot;,&quot;disambiguationField&quot;:&quot;CreatedDate&quot;,&quot;disambiguationFieldType&quot;:&quot;DATETIME&quot;,&quot;labelPlural&quot;:&quot;Leads&quot;,&quot;label&quot;:&quot;Lead&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Contact&quot;,&quot;nameField&quot;:&quot;Name&quot;,&quot;disambiguationField&quot;:&quot;Account.Name&quot;,&quot;disambiguationFieldType&quot;:&quot;NESTED&quot;,&quot;labelPlural&quot;:&quot;Contacts&quot;,&quot;label&quot;:&quot;Contact&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Report&quot;,&quot;nameField&quot;:&quot;Name&quot;,&quot;disambiguationField&quot;:&quot;Description&quot;,&quot;disambiguationFieldType&quot;:&quot;STRING&quot;,&quot;labelPlural&quot;:&quot;Reports&quot;,&quot;label&quot;:&quot;Report&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Dashboard&quot;,&quot;nameField&quot;:&quot;Title&quot;,&quot;disambiguationField&quot;:&quot;Description&quot;,&quot;disambiguationFieldType&quot;:&quot;STRING&quot;,&quot;labelPlural&quot;:&quot;Dashboards&quot;,&quot;label&quot;:&quot;Dashboard&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Task&quot;,&quot;nameField&quot;:&quot;Subject&quot;,&quot;labelPlural&quot;:&quot;Tasks&quot;,&quot;label&quot;:&quot;Task&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Event&quot;,&quot;nameField&quot;:&quot;Subject&quot;,&quot;labelPlural&quot;:&quot;Events&quot;,&quot;label&quot;:&quot;Event&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Order_Header_Global__c&quot;,&quot;nameField&quot;:&quot;Name&quot;,&quot;disambiguationField&quot;:&quot;Global_Order_Number__c&quot;,&quot;disambiguationFieldType&quot;:&quot;STRING&quot;,&quot;labelPlural&quot;:&quot;Orders&quot;,&quot;label&quot;:&quot;Order&quot;}],&quot;context&quot;:{&quot;FILTERS&quot;:{}}},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=28&amp;ui-search-components-forcesearch-assistant.AssistantSuggestionsDataProvider.getSuggestions=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">5960800000026a3148</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=29&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1-453" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1785;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.instrumentation.components.beacon.InstrumentationBeaconController/ACTION$sendData&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;batch&quot;:[{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:42113,\&quot;duration\&quot;:2,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:assistantDialog\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getPermsAndPrefs\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1633063159651,\&quot;cacheHit\&quot;:true,\&quot;etCacheGet\&quot;:1,\&quot;tSending\&quot;:1633063159652,\&quot;etDataCopy\&quot;:0,\&quot;tEnd\&quot;:1633063159652,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getPermsAndPrefs\&quot;,\&quot;etTransaction\&quot;:1,\&quot;requestId\&quot;:\&quot;cacheBridge:0621b205-1ccb-4527-edb5-6c9448507aa2\&quot;,\&quot;requestCmp\&quot;:\&quot;cacheBridge\&quot;,\&quot;requestCmpId\&quot;:\&quot;0621b205-1ccb-4527-edb5-6c9448507aa2\&quot;,\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCachePermsAndPrefs\&quot;,\&quot;time\&quot;:1633063159653,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:42116,\&quot;duration\&quot;:1,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:assistantDialog\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getScopeMaps\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1633063159654,\&quot;cacheHit\&quot;:true,\&quot;etCacheGet\&quot;:1,\&quot;tSending\&quot;:1633063159655,\&quot;etDataCopy\&quot;:0,\&quot;tEnd\&quot;:1633063159655,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getScopeMaps\&quot;,\&quot;etTransaction\&quot;:1,\&quot;requestId\&quot;:\&quot;cacheBridge:da4747b8-005d-e8c5-3074-187f77b90d2d\&quot;,\&quot;requestCmp\&quot;:\&quot;cacheBridge\&quot;,\&quot;requestCmpId\&quot;:\&quot;da4747b8-005d-e8c5-3074-187f77b90d2d\&quot;,\&quot;params\&quot;:[\&quot;scopeTypes:SMART_SCOPE\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;time\&quot;:1633063159656,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:42129,\&quot;duration\&quot;:1,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getGlobalMrus\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1633063159667,\&quot;cacheHit\&quot;:false,\&quot;etCacheGet\&quot;:1,\&quot;tEnd\&quot;:1633063159668,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getGlobalMrus\&quot;,\&quot;etTransaction\&quot;:1,\&quot;requestId\&quot;:\&quot;cacheBridge:08ebaa1c-5732-9d63-b4b7-8dcad5ce1673\&quot;,\&quot;requestCmp\&quot;:\&quot;cacheBridge\&quot;,\&quot;requestCmpId\&quot;:\&quot;08ebaa1c-5732-9d63-b4b7-8dcad5ce1673\&quot;,\&quot;params\&quot;:[\&quot;maxResults:200\&quot;,\&quot;term:\&quot;,\&quot;limitGlobalRequests:true\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheMrus\&quot;,\&quot;time\&quot;:1633063159668,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:42123,\&quot;duration\&quot;:1424,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{\&quot;transport\&quot;:[{\&quot;ts\&quot;:42135,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:20,\&quot;requestLength\&quot;:1086,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;1660;a\&quot;],\&quot;requestId\&quot;:\&quot;4213500000022a2f23\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1707,\&quot;xhrDuration\&quot;:1234,\&quot;xhrStall\&quot;:9,\&quot;startTime\&quot;:42136,\&quot;fetchStart\&quot;:42136,\&quot;requestStart\&quot;:42145,\&quot;dns\&quot;:3,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:39,\&quot;transfer\&quot;:1195,\&quot;transferSize\&quot;:2284,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:85,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1236},{\&quot;ts\&quot;:42125,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:17,\&quot;requestLength\&quot;:3442,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;1665;a\&quot;],\&quot;requestId\&quot;:\&quot;4212500000009a721e\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:6981,\&quot;xhrDuration\&quot;:1409,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:42126,\&quot;fetchStart\&quot;:42126,\&quot;requestStart\&quot;:42129,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:1405,\&quot;transferSize\&quot;:7559,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:262,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1411}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:42135,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1660;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:32,\&quot;db\&quot;:9,\&quot;xhrServerTime\&quot;:85,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:1238},{\&quot;ts\&quot;:42125,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1665;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;forceSearch:assistantSuggestionsDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.assistant.AssistantSuggestionsDataProviderController/ACTION$getSuggestions\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:216,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:262,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:1414}]},\&quot;owner\&quot;:\&quot;forceSearch:assistantSuggestionsDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-predictSuggestions\&quot;,\&quot;attributes\&quot;:{\&quot;didError\&quot;:false,\&quot;didFetch\&quot;:true,\&quot;suggestionId\&quot;:\&quot;0dd73b16-613f-49d8-d692-7316b25a6727\&quot;,\&quot;searchUIConfigRequestId\&quot;:\&quot;02607bcd-4da1-4318-93ca-d6065a532dc6\&quot;,\&quot;configDebounce\&quot;:{\&quot;api\&quot;:\&quot;setTimeout\&quot;,\&quot;delay\&quot;:150,\&quot;trailingEdge\&quot;:true,\&quot;leadingEdge\&quot;:true,\&quot;xhrApi\&quot;:\&quot;none\&quot;,\&quot;maxConcurrentXhrs\&quot;:\&quot;Infinity\&quot;},\&quot;searchDialogSessionId\&quot;:null,\&quot;iteration\&quot;:null,\&quot;instantResultListImpressionId\&quot;:null,\&quot;searchId\&quot;:null,\&quot;resultsContainerId\&quot;:null,\&quot;time\&quot;:1633063159662,\&quot;queryLength\&quot;:0,\&quot;term\&quot;:\&quot;\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;searchSuggestionRequestId\&quot;:\&quot;a7dbd83d-0990-ee05-2a8c-82bfe34e97a1_zero-state\&quot;,\&quot;isPrefetch\&quot;:true,\&quot;actionId\&quot;:\&quot;1665;a\&quot;,\&quot;isActionCacheHit\&quot;:false,\&quot;numListViewSuggestions\&quot;:1,\&quot;numListViewSuggestionsEntities\&quot;:1,\&quot;numListViewSuggestionsEntitiesProcessed\&quot;:0,\&quot;numQuerySuggestions\&quot;:20,\&quot;numRecordsSuggestions\&quot;:5,\&quot;numRecordSuggestionsEntities\&quot;:2,\&quot;summaryTimes\&quot;:[\&quot;PSU.fetchPredictedSuggestionsSum:213\&quot;,\&quot;PSS.buildRecordSuggestionsAnswerSum:0\&quot;,\&quot;PSS.buildListViewSuggestionsAnswerSum:0\&quot;,\&quot;PSS.buildPredictedSuggestionsSum:0\&quot;,\&quot;PSS.getPredictedSuggestionsServerTime:213\&quot;],\&quot;apiRequestId\&quot;:\&quot;1qbfjso2vad13\&quot;,\&quot;numTaDedupeSuggestedQueries\&quot;:17,\&quot;numTaDedupeSuggestedRecords\&quot;:5,\&quot;numTaDedupeSuggestedListViews\&quot;:0,\&quot;lpSummary\&quot;:{\&quot;total-time\&quot;:1423,\&quot;client-time\&quot;:1420,\&quot;server-time\&quot;:213,\&quot;network-time\&quot;:1200},\&quot;lpOffsets\&quot;:{\&quot;fetchSuggestions\&quot;:3,\&quot;getRecordsFromMruDP\&quot;:3,\&quot;loadSuggestions\&quot;:1416},\&quot;lpStatus\&quot;:\&quot;ok\&quot;,\&quot;lpStartedTime\&quot;:1633063159662,\&quot;lpTimeline\&quot;:[{\&quot;label\&quot;:\&quot;PSU.buildRequest\&quot;,\&quot;starting_time\&quot;:15,\&quot;ending_time\&quot;:15,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;SFS.accessCheck\&quot;,\&quot;starting_time\&quot;:3,\&quot;ending_time\&quot;:15,\&quot;duration\&quot;:12,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;PSS.mapScopeMapsByEntity\&quot;,\&quot;starting_time\&quot;:216,\&quot;ending_time\&quot;:216,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;PSS.buildPredictedSuggestionsGetRecordInfo\&quot;,\&quot;starting_time\&quot;:216,\&quot;ending_time\&quot;:216,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;PSS.buildPredictedSuggestionsBuildScopeMap\&quot;,\&quot;starting_time\&quot;:216,\&quot;ending_time\&quot;:216,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;PSS.buildPredictedSuggestionsGetFieldsForQuery\&quot;,\&quot;starting_time\&quot;:216,\&quot;ending_time\&quot;:216,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;PSS.buildPredictedSuggestionsLoadRecords\&quot;,\&quot;starting_time\&quot;:216,\&quot;ending_time\&quot;:216,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;SS.addDisambiguationField()\&quot;,\&quot;starting_time\&quot;:216,\&quot;ending_time\&quot;:216,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;PSS.buildPredictedSuggestionsBuildListViewScopeMap\&quot;,\&quot;starting_time\&quot;:216,\&quot;ending_time\&quot;:216,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;ASDPC.getSuggestionsAddToLDS\&quot;,\&quot;starting_time\&quot;:216,\&quot;ending_time\&quot;:216,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;PSU.performRequest\&quot;,\&quot;starting_time\&quot;:15,\&quot;ending_time\&quot;:216,\&quot;duration\&quot;:201,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;predictSuggestions-networkTime\&quot;,\&quot;starting_time\&quot;:216,\&quot;ending_time\&quot;:1416,\&quot;duration\&quot;:1200,\&quot;type\&quot;:\&quot;network-time\&quot;},{\&quot;label\&quot;:\&quot;fetchSuggestions\&quot;,\&quot;starting_time\&quot;:3,\&quot;ending_time\&quot;:1416,\&quot;duration\&quot;:1413,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;loadSuggestions\&quot;,\&quot;starting_time\&quot;:1416,\&quot;ending_time\&quot;:1423,\&quot;duration\&quot;:7,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;getRecordsFromMruDP\&quot;,\&quot;starting_time\&quot;:3,\&quot;ending_time\&quot;:null,\&quot;duration\&quot;:null,\&quot;type\&quot;:\&quot;client\&quot;}],\&quot;lpAction_getSuggestions\&quot;:{\&quot;startTime\&quot;:42125,\&quot;endTime\&quot;:43539,\&quot;duration\&quot;:1414,\&quot;cumulativeServerTime\&quot;:262,\&quot;cumulativeNetworkTime\&quot;:1147,\&quot;cumulativeFrameworkClientTime\&quot;:5,\&quot;xhrCount\&quot;:1,\&quot;actionCount\&quot;:1},\&quot;lpActionsSummary\&quot;:{\&quot;startTime\&quot;:42125,\&quot;endTime\&quot;:43539,\&quot;duration\&quot;:1414,\&quot;cumulativeServerTime\&quot;:262,\&quot;cumulativeNetworkTime\&quot;:1147,\&quot;cumulativeFrameworkClientTime\&quot;:5,\&quot;xhrCount\&quot;:1,\&quot;actionCount\&quot;:1},\&quot;lpActions\&quot;:[{\&quot;actionName\&quot;:\&quot;getSuggestions\&quot;,\&quot;actionDef\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.assistant.AssistantSuggestionsDataProviderController/ACTION$getSuggestions\&quot;,\&quot;xhrDuration\&quot;:1409,\&quot;xhrStall\&quot;:3,\&quot;xhrDelay\&quot;:2,\&quot;serverTime\&quot;:262,\&quot;ttfb\&quot;:4,\&quot;dns\&quot;:0,\&quot;fetchStart\&quot;:42126,\&quot;tcp\&quot;:1,\&quot;transfer\&quot;:1405,\&quot;startTime\&quot;:42126,\&quot;transportId\&quot;:\&quot;4212500000009a721e\&quot;,\&quot;xhrServerTime\&quot;:262,\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;actionStartTime\&quot;:42125,\&quot;actionDuration\&quot;:1414}],\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:28916,\&quot;duration\&quot;:14633,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;navContainer:render\&quot;,\&quot;ts\&quot;:29257,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;one:appNavContainer\&quot;,\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;navContainer:afterRender\&quot;,\&quot;ts\&quot;:29305,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;one:appNavContainer\&quot;,\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;navContainer:create\&quot;,\&quot;ts\&quot;:29349,\&quot;context\&quot;:{\&quot;itemCount\&quot;:15},\&quot;owner\&quot;:\&quot;one:appNavContainer\&quot;,\&quot;duration\&quot;:22},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getScopeMaps\&quot;,\&quot;ts\&quot;:28955,\&quot;context\&quot;:{\&quot;times\&quot;:\&quot;SCC.getScopeMapsInternal():441\&quot;},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;duration\&quot;:3584},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;singlePaneWindowManager:contentSelected\&quot;,\&quot;ts\&quot;:32467,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:singlePaneWindowManager\&quot;,\&quot;duration\&quot;:14},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;pageHost:loadContent\&quot;,\&quot;ts\&quot;:32486,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:pageHost\&quot;,\&quot;duration\&quot;:18},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38576,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38581,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38584,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38587,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38590,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38593,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38596,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38599,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38603,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38605,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38609,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38612,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38616,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38619,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;RLBCacheInfo\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:38622,\&quot;context\&quot;:{\&quot;gusTeamId\&quot;:\&quot;a00B0000003EdjdIAC\&quot;,\&quot;hasLayout\&quot;:false,\&quot;hasRecord\&quot;:true,\&quot;mode\&quot;:\&quot;VIEW\&quot;,\&quot;type\&quot;:\&quot;COMPACT\&quot;,\&quot;cmpName\&quot;:\&quot;recordLayoutBroker\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayoutBroker\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.38795\&quot;,\&quot;ts\&quot;:38796,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;5:815;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT----home_topDealsContainer-_1-0-517a41784a2f6466555677585a4c794b5856416456773d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:2},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41594\&quot;,\&quot;ts\&quot;:41594,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:887;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:10},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41625\&quot;,\&quot;ts\&quot;:41625,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:889;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:7},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41648\&quot;,\&quot;ts\&quot;:41648,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:891;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:6},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41672\&quot;,\&quot;ts\&quot;:41672,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:893;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:6},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41697\&quot;,\&quot;ts\&quot;:41697,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:895;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:6},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41721\&quot;,\&quot;ts\&quot;:41721,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:897;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:6},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41747\&quot;,\&quot;ts\&quot;:41747,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:899;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:7},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41781\&quot;,\&quot;ts\&quot;:41781,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:901;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:8},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41805\&quot;,\&quot;ts\&quot;:41805,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:903;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:7},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41828\&quot;,\&quot;ts\&quot;:41828,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:905;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:7},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41853\&quot;,\&quot;ts\&quot;:41853,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:907;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:5},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41879\&quot;,\&quot;ts\&quot;:41879,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:909;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:9},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41905\&quot;,\&quot;ts\&quot;:41905,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:911;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:6},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41926\&quot;,\&quot;ts\&quot;:41926,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:913;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:8},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.41953\&quot;,\&quot;ts\&quot;:41953,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1:915;a\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:6},{\&quot;ns\&quot;:\&quot;flexipageInfo\&quot;,\&quot;name\&quot;:\&quot;info\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:32574,\&quot;context\&quot;:{\&quot;flexipageType\&quot;:\&quot;UtilityBar\&quot;,\&quot;isCustomTemplate\&quot;:false,\&quot;templateName\&quot;:\&quot;one:utilityBarTemplateDesktop\&quot;,\&quot;numVisibleRegions\&quot;:1,\&quot;flexipageRenderer\&quot;:\&quot;Aura\&quot;,\&quot;isCustom\&quot;:true,\&quot;numBackgroundRegions\&quot;:1,\&quot;flexipageName\&quot;:\&quot;0M00c00000000IZCAY\&quot;},\&quot;owner\&quot;:\&quot;flexipage:page\&quot;},{\&quot;ns\&quot;:\&quot;flexipageInfo\&quot;,\&quot;name\&quot;:\&quot;info\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:36400,\&quot;context\&quot;:{\&quot;flexipageType\&quot;:\&quot;HomePage\&quot;,\&quot;isCustomTemplate\&quot;:false,\&quot;templateName\&quot;:\&quot;home:desktopTemplate\&quot;,\&quot;numVisibleRegions\&quot;:4,\&quot;flexipageRenderer\&quot;:\&quot;Aura\&quot;,\&quot;isCustom\&quot;:true,\&quot;numBackgroundRegions\&quot;:0,\&quot;flexipageName\&quot;:\&quot;0M00c000000k9peCAA\&quot;},\&quot;owner\&quot;:\&quot;flexipage:page\&quot;},{\&quot;ns\&quot;:\&quot;socialPhotoBatchAction444;a\&quot;,\&quot;name\&quot;:\&quot;SocialPhotoBatchAction is successful\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:33271,\&quot;context\&quot;:null,\&quot;owner\&quot;:\&quot;force:socialPhoto\&quot;},{\&quot;ns\&quot;:\&quot;EinsteinComponent\&quot;,\&quot;name\&quot;:\&quot;HomeAssistant\&quot;,\&quot;ts\&quot;:36535,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;home:assistant\&quot;,\&quot;duration\&quot;:72},{\&quot;ns\&quot;:\&quot;Assistant\&quot;,\&quot;name\&quot;:\&quot;Render\&quot;,\&quot;ts\&quot;:36585,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;home:assistant\&quot;,\&quot;duration\&quot;:5},{\&quot;ns\&quot;:\&quot;Assistant\&quot;,\&quot;name\&quot;:\&quot;Rerender\&quot;,\&quot;ts\&quot;:39469,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;home:assistant\&quot;,\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;formula\&quot;,\&quot;name\&quot;:\&quot;evaluate\&quot;,\&quot;ts\&quot;:37800,\&quot;context\&quot;:{\&quot;technology\&quot;:\&quot;Aura\&quot;,\&quot;formulaSize\&quot;:137,\&quot;feature\&quot;:\&quot;EXPRESSIONS\&quot;},\&quot;owner\&quot;:\&quot;flexipage:runtimeComponent\&quot;,\&quot;duration\&quot;:18},{\&quot;ns\&quot;:\&quot;formula\&quot;,\&quot;name\&quot;:\&quot;evaluate\&quot;,\&quot;ts\&quot;:39657,\&quot;context\&quot;:{\&quot;technology\&quot;:\&quot;Aura\&quot;,\&quot;formulaSize\&quot;:139,\&quot;feature\&quot;:\&quot;EXPRESSIONS\&quot;},\&quot;owner\&quot;:\&quot;flexipage:runtimeComponent\&quot;,\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41964,\&quot;context\&quot;:{\&quot;itemCount\&quot;:1}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:2}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:3}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:4}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:5}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:6}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:7}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:8}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:9}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:10}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:11}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:12}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:13}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:14}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;layoutItems\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;itemCount\&quot;:15}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}},{\&quot;ns\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;name\&quot;:\&quot;storageSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:41965,\&quot;context\&quot;:{\&quot;storageSize\&quot;:\&quot;0.3447265625 KB\&quot;}}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:30812,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:1,\&quot;auraXHRId\&quot;:1,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:65629,\&quot;xhrDuration\&quot;:2510,\&quot;xhrStall\&quot;:772,\&quot;startTime\&quot;:29382,\&quot;fetchStart\&quot;:29382,\&quot;requestStart\&quot;:30154,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:773,\&quot;transfer\&quot;:1737,\&quot;transferSize\&quot;:66207,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:236,\&quot;xhrDelay\&quot;:-1429},\&quot;duration\&quot;:1081},{\&quot;ts\&quot;:29388,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:3,\&quot;requestLength\&quot;:1022,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;169;a\&quot;],\&quot;requestId\&quot;:\&quot;293870000003087d02\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1242,\&quot;xhrDuration\&quot;:2995,\&quot;xhrStall\&quot;:1416,\&quot;startTime\&quot;:29388,\&quot;fetchStart\&quot;:29388,\&quot;requestStart\&quot;:30804,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:1417,\&quot;transfer\&quot;:1578,\&quot;transferSize\&quot;:1819,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:55,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:2996},{\&quot;ts\&quot;:29559,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:4,\&quot;requestLength\&quot;:1151,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;341;a\&quot;],\&quot;requestId\&quot;:\&quot;295590000004866e71\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:2025,\&quot;xhrDuration\&quot;:2878,\&quot;xhrStall\&quot;:1314,\&quot;startTime\&quot;:29560,\&quot;fetchStart\&quot;:29560,\&quot;requestStart\&quot;:30874,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:1316,\&quot;transfer\&quot;:1562,\&quot;transferSize\&quot;:2603,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:134,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:2881},{\&quot;ts\&quot;:29385,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:2,\&quot;requestLength\&quot;:1049,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;164;a\&quot;],\&quot;requestId\&quot;:\&quot;293830000002ca49af\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:7039,\&quot;xhrDuration\&quot;:3127,\&quot;xhrStall\&quot;:1230,\&quot;startTime\&quot;:29386,\&quot;fetchStart\&quot;:29386,\&quot;requestStart\&quot;:30616,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:1231,\&quot;transfer\&quot;:1896,\&quot;transferSize\&quot;:7617,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:501,\&quot;xhrDelay\&quot;:23},\&quot;duration\&quot;:3150},{\&quot;ts\&quot;:32097,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:5,\&quot;requestLength\&quot;:1123,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;444;a\&quot;],\&quot;requestId\&quot;:\&quot;32097000000460762e\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1560,\&quot;xhrDuration\&quot;:1170,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:32097,\&quot;fetchStart\&quot;:32097,\&quot;requestStart\&quot;:32101,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:5,\&quot;transfer\&quot;:1165,\&quot;transferSize\&quot;:2137,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:42,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:1171},{\&quot;ts\&quot;:32507,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:7,\&quot;requestLength\&quot;:1024,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;510;a\&quot;],\&quot;requestId\&quot;:\&quot;3250700000056d0aab\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1476,\&quot;xhrDuration\&quot;:1465,\&quot;xhrStall\&quot;:13,\&quot;startTime\&quot;:32508,\&quot;fetchStart\&quot;:32508,\&quot;requestStart\&quot;:32521,\&quot;dns\&quot;:5,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:14,\&quot;transfer\&quot;:1451,\&quot;transferSize\&quot;:2054,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:269,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1467},{\&quot;ts\&quot;:32493,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:6,\&quot;requestLength\&quot;:1074,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;499;a\&quot;],\&quot;requestId\&quot;:\&quot;324930000009a00897\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:68880,\&quot;xhrDuration\&quot;:1646,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:32494,\&quot;fetchStart\&quot;:32494,\&quot;requestStart\&quot;:32497,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:1642,\&quot;transferSize\&quot;:69462,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:173,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1648},{\&quot;ts\&quot;:29575,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:0,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:5025,\&quot;startTime\&quot;:29576,\&quot;fetchStart\&quot;:32763,\&quot;serverTime\&quot;:50,\&quot;redirect\&quot;:3187,\&quot;requestStart\&quot;:32769,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:694369,\&quot;encodedBodySize\&quot;:693530,\&quot;decodedBodySize\&quot;:693530,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:3194,\&quot;transfer\&quot;:1831,\&quot;defs\&quot;:[\&quot;markup://forceSearch:assistantDialogContainer\&quot;,\&quot;markup://lightning:iconSvgTemplatesUtility\&quot;],\&quot;xhrDelay\&quot;:11},\&quot;duration\&quot;:5036},{\&quot;ts\&quot;:32646,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:2,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:2988,\&quot;startTime\&quot;:32647,\&quot;fetchStart\&quot;:33978,\&quot;serverTime\&quot;:10,\&quot;redirect\&quot;:1331,\&quot;requestStart\&quot;:33981,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:2767,\&quot;encodedBodySize\&quot;:1937,\&quot;decodedBodySize\&quot;:1937,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:1335,\&quot;transfer\&quot;:1653,\&quot;defs\&quot;:[\&quot;markup://one:utilityBarContent\&quot;],\&quot;xhrDelay\&quot;:4},\&quot;duration\&quot;:2992},{\&quot;ts\&quot;:34153,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:3,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:2215,\&quot;startTime\&quot;:34153,\&quot;fetchStart\&quot;:34153,\&quot;serverTime\&quot;:62,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:34156,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:547338,\&quot;encodedBodySize\&quot;:546499,\&quot;decodedBodySize\&quot;:546499,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:3,\&quot;transfer\&quot;:2212,\&quot;defs\&quot;:[\&quot;markup://flexipage:card\&quot;,\&quot;markup://flexipage:recentItems\&quot;,\&quot;markup://force:actionRow\&quot;,\&quot;markup://force:baseCard\&quot;,\&quot;markup://force:baseCardActionTriggered\&quot;,\&quot;markup://force:card\&quot;,\&quot;markup://force:emptyState\&quot;,\&quot;markup://force:menuTriggerIcon\&quot;,\&quot;markup://force:moreAction\&quot;],\&quot;xhrDelay\&quot;:30},\&quot;duration\&quot;:2245},{\&quot;ts\&quot;:34769,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:4,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:1943,\&quot;startTime\&quot;:34771,\&quot;fetchStart\&quot;:36043,\&quot;serverTime\&quot;:8,\&quot;redirect\&quot;:1272,\&quot;requestStart\&quot;:36045,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:1398,\&quot;encodedBodySize\&quot;:570,\&quot;decodedBodySize\&quot;:570,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:1275,\&quot;transfer\&quot;:668,\&quot;defs\&quot;:[\&quot;markup://lightning:auraDynamic\&quot;],\&quot;xhrDelay\&quot;:5},\&quot;duration\&quot;:1948},{\&quot;ts\&quot;:36405,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:8,\&quot;requestLength\&quot;:1153,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;701;a\&quot;],\&quot;requestId\&quot;:\&quot;364050000003529a9a\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:2241,\&quot;xhrDuration\&quot;:1387,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:36405,\&quot;fetchStart\&quot;:36405,\&quot;requestStart\&quot;:36408,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:1383,\&quot;transferSize\&quot;:2818,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:86,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1389},{\&quot;ts\&quot;:36429,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:9,\&quot;requestLength\&quot;:1107,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;716;a\&quot;],\&quot;requestId\&quot;:\&quot;364290000001ee98a2\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1230,\&quot;xhrDuration\&quot;:1378,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:36430,\&quot;fetchStart\&quot;:36430,\&quot;requestStart\&quot;:36433,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:3,\&quot;transfer\&quot;:1375,\&quot;transferSize\&quot;:1808,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:152,\&quot;xhrDelay\&quot;:46},\&quot;duration\&quot;:1424},{\&quot;ts\&quot;:36435,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:10,\&quot;requestLength\&quot;:1277,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;719;a\&quot;],\&quot;requestId\&quot;:\&quot;36435000000376e2d6\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:27173,\&quot;xhrDuration\&quot;:1460,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:36436,\&quot;fetchStart\&quot;:36436,\&quot;requestStart\&quot;:36439,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:3,\&quot;transfer\&quot;:1457,\&quot;transferSize\&quot;:27750,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:94,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:1463},{\&quot;ts\&quot;:36520,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:13,\&quot;requestLength\&quot;:1144,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;815;a\&quot;],\&quot;requestId\&quot;:\&quot;36520000000b7ab208\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:22367,\&quot;xhrDuration\&quot;:1434,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:36521,\&quot;fetchStart\&quot;:36521,\&quot;requestStart\&quot;:36524,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:1430,\&quot;transferSize\&quot;:22945,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:170,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:1437},{\&quot;ts\&quot;:36495,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:12,\&quot;requestLength\&quot;:1069,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;787;a\&quot;],\&quot;requestId\&quot;:\&quot;36495000000cdf9cf3\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:3336,\&quot;xhrDuration\&quot;:1517,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:36496,\&quot;fetchStart\&quot;:36496,\&quot;requestStart\&quot;:36499,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:3,\&quot;transfer\&quot;:1514,\&quot;transferSize\&quot;:3914,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:354,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:1520},{\&quot;ts\&quot;:36454,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:11,\&quot;requestLength\&quot;:1152,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;745;a\&quot;],\&quot;requestId\&quot;:\&quot;36454000000050fd47\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:15154,\&quot;xhrDuration\&quot;:2112,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:36454,\&quot;fetchStart\&quot;:36454,\&quot;requestStart\&quot;:36458,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:2108,\&quot;transferSize\&quot;:15732,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:898,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:2113},{\&quot;ts\&quot;:37902,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:5,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:834,\&quot;startTime\&quot;:37902,\&quot;fetchStart\&quot;:37902,\&quot;serverTime\&quot;:23,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:37907,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:161806,\&quot;encodedBodySize\&quot;:160974,\&quot;decodedBodySize\&quot;:160974,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:32,\&quot;transfer\&quot;:802,\&quot;defs\&quot;:[\&quot;markup://force:outputAddress\&quot;,\&quot;markup://force:outputField\&quot;,\&quot;markup://force:outputFieldInternal\&quot;,\&quot;markup://force:outputFile\&quot;,\&quot;markup://force:outputImage\&quot;,\&quot;markup://force:outputLocation\&quot;,\&quot;markup://force:outputName\&quot;,\&quot;markup://force:outputNameForUser\&quot;,\&quot;markup://force:outputNoteorAttachment\&quot;],\&quot;xhrDelay\&quot;:8},\&quot;duration\&quot;:842},{\&quot;ts\&quot;:37798,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:14,\&quot;requestLength\&quot;:1652,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;830;a\&quot;,\&quot;833;a\&quot;,\&quot;837;a\&quot;],\&quot;requestId\&quot;:\&quot;37798000000abbc39f\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:4559,\&quot;xhrDuration\&quot;:1433,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:37799,\&quot;fetchStart\&quot;:37799,\&quot;requestStart\&quot;:37802,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:1429,\&quot;transferSize\&quot;:5137,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:125,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:1436},{\&quot;ts\&quot;:38633,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:15,\&quot;requestLength\&quot;:33236,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;887;a\&quot;,\&quot;889;a\&quot;,\&quot;891;a\&quot;,\&quot;893;a\&quot;,\&quot;895;a\&quot;,\&quot;897;a\&quot;,\&quot;899;a\&quot;,\&quot;901;a\&quot;,\&quot;903;a\&quot;,\&quot;905;a\&quot;,\&quot;907;a\&quot;,\&quot;909;a\&quot;,\&quot;911;a\&quot;,\&quot;913;a\&quot;,\&quot;915;a\&quot;],\&quot;requestId\&quot;:\&quot;3863300000034a4430\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:51238,\&quot;xhrDuration\&quot;:2070,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:38635,\&quot;fetchStart\&quot;:38635,\&quot;requestStart\&quot;:38638,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:2066,\&quot;transferSize\&quot;:51816,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:368,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:2073},{\&quot;ts\&quot;:40711,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:6,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:849,\&quot;startTime\&quot;:40711,\&quot;fetchStart\&quot;:40711,\&quot;serverTime\&quot;:12,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:40715,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:28255,\&quot;encodedBodySize\&quot;:27424,\&quot;decodedBodySize\&quot;:27424,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:845,\&quot;defs\&quot;:[\&quot;markup://flexipage:listRecord\&quot;,\&quot;markup://flexipage:recentItemStencil\&quot;,\&quot;markup://force:listRecord\&quot;],\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:852},{\&quot;ts\&quot;:42135,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:20,\&quot;requestLength\&quot;:1086,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;1660;a\&quot;],\&quot;requestId\&quot;:\&quot;4213500000022a2f23\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1707,\&quot;xhrDuration\&quot;:1234,\&quot;xhrStall\&quot;:9,\&quot;startTime\&quot;:42136,\&quot;fetchStart\&quot;:42136,\&quot;requestStart\&quot;:42145,\&quot;dns\&quot;:3,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:39,\&quot;transfer\&quot;:1195,\&quot;transferSize\&quot;:2284,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:85,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1236},{\&quot;ts\&quot;:42125,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:17,\&quot;requestLength\&quot;:3442,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;1665;a\&quot;],\&quot;requestId\&quot;:\&quot;4212500000009a721e\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:6981,\&quot;xhrDuration\&quot;:1409,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:42126,\&quot;fetchStart\&quot;:42126,\&quot;requestStart\&quot;:42129,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:1405,\&quot;transferSize\&quot;:7559,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:262,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1411}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:29169,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;302;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;flexipage:page\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.flexipage.components.page.FlexipageControllerV2/ACTION$getPage\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;params\&quot;:{\&quot;flexiPageDeveloperName\&quot;:\&quot;USCAN_Sales_UtilityBar\&quot;},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:19,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:183,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1637},{\&quot;ts\&quot;:28957,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;166;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;forceSearch:searchGDPCachePermsAndPrefs\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.sgdp.PermsAndPrefsCacheController/ACTION$getPermsAndPrefs\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:35,\&quot;enqueueWait\&quot;:388,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:3,\&quot;duration\&quot;:2951},{\&quot;ts\&quot;:28970,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;173;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;one:systemMessage\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.systemMessage.SystemMessageController/ACTION$getSystemMessages\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:35,\&quot;enqueueWait\&quot;:375,\&quot;serverTime\&quot;:{\&quot;total\&quot;:19,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:8,\&quot;duration\&quot;:2946},{\&quot;ts\&quot;:28991,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;191;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;one:favorites\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.favorites.FavoritesController/ACTION$getFavorites\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:5,\&quot;enqueueWait\&quot;:384,\&quot;serverTime\&quot;:{\&quot;total\&quot;:29,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:2926},{\&quot;ts\&quot;:29037,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;211;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:empApi\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.empApi.EmpApiController/ACTION$getEmpConfig\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:35,\&quot;enqueueWait\&quot;:308,\&quot;serverTime\&quot;:{\&quot;total\&quot;:1,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:2881},{\&quot;ts\&quot;:29039,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;215;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;uns:notifications\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.notifications.components.notifications.controller.NotificationsController/ACTION$getInitializationValues\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:5,\&quot;enqueueWait\&quot;:336,\&quot;serverTime\&quot;:{\&quot;total\&quot;:2,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:2880},{\&quot;ts\&quot;:29047,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;218;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordGlobalValueProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:35,\&quot;enqueueWait\&quot;:298,\&quot;serverTime\&quot;:{\&quot;total\&quot;:30,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2872},{\&quot;ts\&quot;:29052,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;227;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;one:header\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.header.HeaderController/ACTION$getSettings\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:35,\&quot;enqueueWait\&quot;:293,\&quot;serverTime\&quot;:{\&quot;total\&quot;:20,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:77,\&quot;duration\&quot;:2944},{\&quot;ts\&quot;:29306,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;326;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;one:appNavContainer\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.navigation.GlobalNavDropdownController/ACTION$getHasSeenAppNavDocked\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:35,\&quot;enqueueWait\&quot;:39,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:2691},{\&quot;ts\&quot;:29348,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;334;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:hostConfig\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.hostConfig.HostConfigController/ACTION$getConfigData\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:32,\&quot;serverTime\&quot;:{\&quot;total\&quot;:15,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:236,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:11,\&quot;duration\&quot;:2660},{\&quot;ts\&quot;:28959,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;169;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;forceSearch:assistant\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.assistant.AssistantController/ACTION$getSearchUIServerConfigs\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:43,\&quot;enqueueWait\&quot;:386,\&quot;serverTime\&quot;:{\&quot;total\&quot;:13,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:55,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3427},{\&quot;ts\&quot;:29558,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;341;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;laf:platformPageResolver\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getTabByNameAndApp\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:90,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:134,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2883},{\&quot;ts\&quot;:28957,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;164;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.sgdp.ScopesCacheController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:40,\&quot;enqueueWait\&quot;:388,\&quot;serverTime\&quot;:{\&quot;total\&quot;:442,\&quot;db\&quot;:19,\&quot;xhrServerTime\&quot;:501,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:5,\&quot;duration\&quot;:3584},{\&quot;ts\&quot;:32097,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;444;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:socialPhotoController\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.socialPhoto.SocialPhotoController/ACTION$resolvePhotos\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:2,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:42,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:3,\&quot;duration\&quot;:1175},{\&quot;ts\&quot;:32503,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;510;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;home:landing\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.home.impl.landing.LandingController/ACTION$populateTodayGVP\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:4,\&quot;serverTime\&quot;:{\&quot;total\&quot;:41,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:269,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1473},{\&quot;ts\&quot;:32493,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;499;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;flexipage:page\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.flexipage.components.page.FlexipageControllerV2/ACTION$getPage\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;params\&quot;:{\&quot;flexiPageDeveloperName\&quot;:\&quot;USCAN_Home\&quot;},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:33,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:173,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:1653},{\&quot;ts\&quot;:36405,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;701;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordGlobalValueProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:44,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:86,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1393},{\&quot;ts\&quot;:36429,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;716;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_sales_activities:todayTasksCardDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.today.impl.components.today.taskContainer.TodayTasksCardDataManagerController/ACTION$getTasks\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;params\&quot;:{\&quot;limit\&quot;:5},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:114,\&quot;db\&quot;:4,\&quot;xhrServerTime\&quot;:152,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:21,\&quot;duration\&quot;:1446},{\&quot;ts\&quot;:36435,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;719;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ComponentController/ACTION$getComponent\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;params\&quot;:{\&quot;name\&quot;:\&quot;markup://force:listTemplate\&quot;},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:45,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:94,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:1466},{\&quot;ts\&quot;:36520,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;815;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;home:topDealsCardDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.home.impl.topDealsCardDataProvider.TopDealsCardDataProviderController/ACTION$getFilterListViewRecords\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:112,\&quot;db\&quot;:10,\&quot;xhrServerTime\&quot;:169,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:1441},{\&quot;ts\&quot;:36495,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;787;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;home:recentRecordContainer\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.home.impl.recentRecordContainer.RecentRecordContainerController/ACTION$getRecords\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:315,\&quot;db\&quot;:47,\&quot;xhrServerTime\&quot;:354,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:75,\&quot;duration\&quot;:1596},{\&quot;ts\&quot;:36454,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;745;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;flexipage:recentItems\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.flexipage.components.recentitems.FlexipageRecentItemsController/ACTION$getResponse\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:857,\&quot;db\&quot;:316,\&quot;xhrServerTime\&quot;:897,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:64,\&quot;duration\&quot;:2177},{\&quot;ts\&quot;:36535,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;830;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;home:assistant\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.home.impl.assistant.AssistantController/ACTION$getAssistantCardData\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1260,\&quot;enqueueWait\&quot;:3,\&quot;serverTime\&quot;:{\&quot;total\&quot;:43,\&quot;db\&quot;:8,\&quot;xhrServerTime\&quot;:125,\&quot;boxCarCount\&quot;:3},\&quot;callbackTime\&quot;:228,\&quot;duration\&quot;:2932},{\&quot;ts\&quot;:36537,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;833;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordGlobalValueProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1260,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:40,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:125,\&quot;boxCarCount\&quot;:3},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2930},{\&quot;ts\&quot;:36917,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;837;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;one:systemMessage\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.systemMessage.SystemMessageController/ACTION$getSystemMessages\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:880,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:2,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:125,\&quot;boxCarCount\&quot;:3},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:2552},{\&quot;ts\&quot;:38579,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;887;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:53,\&quot;serverTime\&quot;:{\&quot;total\&quot;:57,\&quot;db\&quot;:8,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:2130},{\&quot;ts\&quot;:38583,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;889;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:49,\&quot;serverTime\&quot;:{\&quot;total\&quot;:12,\&quot;db\&quot;:6,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2126},{\&quot;ts\&quot;:38586,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;891;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:46,\&quot;serverTime\&quot;:{\&quot;total\&quot;:12,\&quot;db\&quot;:6,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2123},{\&quot;ts\&quot;:38589,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;893;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:43,\&quot;serverTime\&quot;:{\&quot;total\&quot;:13,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2120},{\&quot;ts\&quot;:38591,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;895;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:41,\&quot;serverTime\&quot;:{\&quot;total\&quot;:12,\&quot;db\&quot;:6,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2118},{\&quot;ts\&quot;:38594,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;897;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:38,\&quot;serverTime\&quot;:{\&quot;total\&quot;:12,\&quot;db\&quot;:6,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2115},{\&quot;ts\&quot;:38597,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;899;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:36,\&quot;serverTime\&quot;:{\&quot;total\&quot;:12,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2112},{\&quot;ts\&quot;:38601,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;901;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:32,\&quot;serverTime\&quot;:{\&quot;total\&quot;:11,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2108},{\&quot;ts\&quot;:38604,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;903;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:29,\&quot;serverTime\&quot;:{\&quot;total\&quot;:11,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2105},{\&quot;ts\&quot;:38607,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;905;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:26,\&quot;serverTime\&quot;:{\&quot;total\&quot;:12,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2102},{\&quot;ts\&quot;:38611,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;907;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:22,\&quot;serverTime\&quot;:{\&quot;total\&quot;:11,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2098},{\&quot;ts\&quot;:38614,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;909;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:19,\&quot;serverTime\&quot;:{\&quot;total\&quot;:12,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2095},{\&quot;ts\&quot;:38617,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;911;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:16,\&quot;serverTime\&quot;:{\&quot;total\&quot;:11,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2093},{\&quot;ts\&quot;:38620,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;913;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:13,\&quot;serverTime\&quot;:{\&quot;total\&quot;:12,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2090},{\&quot;ts\&quot;:38624,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;915;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordLayoutBroker\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordLayoutBroker.RecordLayoutBrokerController/ACTION$getLayout\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:9,\&quot;serverTime\&quot;:{\&quot;total\&quot;:11,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:367,\&quot;boxCarCount\&quot;:15},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2086},{\&quot;ts\&quot;:42111,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1660;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;setup:gear\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.setup.components.aura.components.gear.GearController/ACTION$getGearSetupApps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:2,\&quot;enqueueWait\&quot;:22,\&quot;serverTime\&quot;:{\&quot;total\&quot;:32,\&quot;db\&quot;:9,\&quot;xhrServerTime\&quot;:85,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:1262},{\&quot;ts\&quot;:42125,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1665;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;forceSearch:assistantSuggestionsDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.assistant.AssistantSuggestionsDataProviderController/ACTION$getSuggestions\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:216,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:262,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:1414}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:1419,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;rl-Opportunity-VIEW-COMPACT-01230000000rrnNAAQ---flexipage_recentItemStencil-_1-0-3849626e526744547767766a4f726347784b704f57513d3d.c\&quot;,\&quot;createCount\&quot;:15,\&quot;createTimeTotal\&quot;:240},{\&quot;name\&quot;:\&quot;one:utilityBarContent\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:127},{\&quot;name\&quot;:\&quot;home:assistantCardList\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:228},{\&quot;name\&quot;:\&quot;ui:virtualList\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:179},{\&quot;name\&quot;:\&quot;home:fp0M00c000000k9peCAA__pageWithoutSobject__1611156436000\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:135}]}],\&quot;lds\&quot;:[{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-stats\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:42047,\&quot;context\&quot;:{\&quot;recordCount\&quot;:10,\&quot;subscriptionCount\&quot;:2,\&quot;snapshotSubscriptionCount\&quot;:0,\&quot;watchSubscriptionCount\&quot;:2}},{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;runtime-perf\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:43550,\&quot;context\&quot;:{\&quot;storeIngest\&quot;:2,\&quot;storeBroadcast\&quot;:1}}]},\&quot;owner\&quot;:\&quot;forceSearch:desktopHeaderManager\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-assistant-dialog-init\&quot;,\&quot;attributes\&quot;:{\&quot;userDidClick\&quot;:false,\&quot;pageLoadedReceived\&quot;:true,\&quot;prefetchInitiator\&quot;:\&quot;pageLoaded\&quot;,\&quot;timeFromClickToDisplay\&quot;:null,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;lpSummary\&quot;:{\&quot;total-time\&quot;:14634,\&quot;client-time\&quot;:14630,\&quot;server-time\&quot;:0,\&quot;network-time\&quot;:0},\&quot;lpOffsets\&quot;:{\&quot;relativePageLoad\&quot;:0,\&quot;loadPerm\&quot;:0,\&quot;loadContainerCmp\&quot;:44,\&quot;loadUIConfigs\&quot;:44,\&quot;loadDialogCmp\&quot;:5706,\&quot;buttonEnabled_ts\&quot;:5811,\&quot;pageLoaded_ts\&quot;:13197,\&quot;prefetchInitiated_ts\&quot;:13197,\&quot;loadPermAndPrefs\&quot;:13197,\&quot;loadScopeMaps\&quot;:13200,\&quot;loadSuggestions\&quot;:13206,\&quot;fetchSuggestions\&quot;:13211,\&quot;loadMrus\&quot;:13211,\&quot;suggestionsLoaded_ts\&quot;:14633},\&quot;lpStatus\&quot;:\&quot;ok\&quot;,\&quot;lpStartedTime\&quot;:1633063146454,\&quot;lpTimeline\&quot;:[{\&quot;label\&quot;:\&quot;loadPerm\&quot;,\&quot;starting_time\&quot;:0,\&quot;ending_time\&quot;:1,\&quot;duration\&quot;:1,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;loadUIConfigs\&quot;,\&quot;starting_time\&quot;:44,\&quot;ending_time\&quot;:3470,\&quot;duration\&quot;:3426,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;buttonEnabled_ts\&quot;,\&quot;starting_time\&quot;:5811,\&quot;ending_time\&quot;:5811,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;loadDialogCmp\&quot;,\&quot;starting_time\&quot;:5706,\&quot;ending_time\&quot;:5811,\&quot;duration\&quot;:105,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;loadContainerCmp\&quot;,\&quot;starting_time\&quot;:44,\&quot;ending_time\&quot;:5812,\&quot;duration\&quot;:5768,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;pageLoaded_ts\&quot;,\&quot;starting_time\&quot;:13197,\&quot;ending_time\&quot;:13197,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;prefetchInitiated_ts\&quot;,\&quot;starting_time\&quot;:13197,\&quot;ending_time\&quot;:13197,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;relativePageLoad\&quot;,\&quot;starting_time\&quot;:0,\&quot;ending_time\&quot;:13197,\&quot;duration\&quot;:13197,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;loadPermAndPrefs\&quot;,\&quot;starting_time\&quot;:13197,\&quot;ending_time\&quot;:13200,\&quot;duration\&quot;:3,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;loadScopeMaps\&quot;,\&quot;starting_time\&quot;:13200,\&quot;ending_time\&quot;:13202,\&quot;duration\&quot;:2,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;fetchSuggestions\&quot;,\&quot;starting_time\&quot;:13211,\&quot;ending_time\&quot;:14623,\&quot;duration\&quot;:1412,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;loadSuggestions\&quot;,\&quot;starting_time\&quot;:13206,\&quot;ending_time\&quot;:14633,\&quot;duration\&quot;:1427,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;suggestionsLoaded_ts\&quot;,\&quot;starting_time\&quot;:14633,\&quot;ending_time\&quot;:14634,\&quot;duration\&quot;:1,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;loadMrus\&quot;,\&quot;starting_time\&quot;:13211,\&quot;ending_time\&quot;:null,\&quot;duration\&quot;:null,\&quot;type\&quot;:\&quot;client\&quot;}],\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:42131,\&quot;duration\&quot;:1812,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{\&quot;custom\&quot;:[],\&quot;transport\&quot;:[{\&quot;ts\&quot;:42135,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:20,\&quot;requestLength\&quot;:1086,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;1660;a\&quot;],\&quot;requestId\&quot;:\&quot;4213500000022a2f23\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1707,\&quot;xhrDuration\&quot;:1234,\&quot;xhrStall\&quot;:9,\&quot;startTime\&quot;:42136,\&quot;fetchStart\&quot;:42136,\&quot;requestStart\&quot;:42145,\&quot;dns\&quot;:3,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:39,\&quot;transfer\&quot;:1195,\&quot;transferSize\&quot;:2284,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:85,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1236},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:18,\&quot;requestLength\&quot;:2923,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;1631;a\&quot;,\&quot;1638;a\&quot;,\&quot;1641;a\&quot;,\&quot;1642;a\&quot;,\&quot;1643;a\&quot;,\&quot;1652;a\&quot;,\&quot;1653;a\&quot;,\&quot;1658;a\&quot;],\&quot;requestId\&quot;:\&quot;42133000000a9ecb76\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:6327,\&quot;xhrDuration\&quot;:1430,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:42134,\&quot;fetchStart\&quot;:42134,\&quot;requestStart\&quot;:42138,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:15,\&quot;transfer\&quot;:1415,\&quot;transferSize\&quot;:6905,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:126,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1432},{\&quot;ts\&quot;:42134,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:19,\&quot;requestLength\&quot;:1065,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;1645;a\&quot;],\&quot;requestId\&quot;:\&quot;42134000000fda4083\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:107789,\&quot;xhrDuration\&quot;:1800,\&quot;xhrStall\&quot;:5,\&quot;startTime\&quot;:42135,\&quot;fetchStart\&quot;:42135,\&quot;requestStart\&quot;:42140,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:21,\&quot;transfer\&quot;:1779,\&quot;transferSize\&quot;:108367,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:612,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1802}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:42135,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1660;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:32,\&quot;db\&quot;:9,\&quot;xhrServerTime\&quot;:85,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:1238},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1631;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:8,\&quot;duration\&quot;:1441},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1638;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:1442},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1641;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:18,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1442},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1642;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1442},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1643;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1442},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1652;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:41,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:20,\&quot;duration\&quot;:1462},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1653;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:10,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1462},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1658;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:1463}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:19,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;search_lightning:assistantDialogHelpPanel\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:1},{\&quot;name\&quot;:\&quot;ui:menu\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:18}]}]},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getGlobalMrus\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1633063159670,\&quot;cacheHit\&quot;:false,\&quot;tSending\&quot;:1633063161480,\&quot;etDataCopy\&quot;:2,\&quot;tEnd\&quot;:1633063161482,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getGlobalMrus\&quot;,\&quot;etTransaction\&quot;:1812,\&quot;requestId\&quot;:\&quot;cacheBridge:02aec9b2-722e-40bf-96b0-4a43184e1cef\&quot;,\&quot;requestCmp\&quot;:\&quot;cacheBridge\&quot;,\&quot;requestCmpId\&quot;:\&quot;02aec9b2-722e-40bf-96b0-4a43184e1cef\&quot;,\&quot;params\&quot;:[\&quot;maxResults:200\&quot;,\&quot;term:\&quot;,\&quot;limitGlobalRequests:true\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheMrus\&quot;,\&quot;time\&quot;:1633063161482,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:42100,\&quot;duration\&quot;:1844,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getGlobalMrus\&quot;,\&quot;ts\&quot;:42101,\&quot;context\&quot;:{\&quot;times\&quot;:\&quot;MRUCC.getGlobalMrus():565\&quot;},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheMrus\&quot;,\&quot;duration\&quot;:1842}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:42135,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:20,\&quot;requestLength\&quot;:1086,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;1660;a\&quot;],\&quot;requestId\&quot;:\&quot;4213500000022a2f23\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1707,\&quot;xhrDuration\&quot;:1234,\&quot;xhrStall\&quot;:9,\&quot;startTime\&quot;:42136,\&quot;fetchStart\&quot;:42136,\&quot;requestStart\&quot;:42145,\&quot;dns\&quot;:3,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:39,\&quot;transfer\&quot;:1195,\&quot;transferSize\&quot;:2284,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:85,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1236},{\&quot;ts\&quot;:42125,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:17,\&quot;requestLength\&quot;:3442,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;1665;a\&quot;],\&quot;requestId\&quot;:\&quot;4212500000009a721e\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:6981,\&quot;xhrDuration\&quot;:1409,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:42126,\&quot;fetchStart\&quot;:42126,\&quot;requestStart\&quot;:42129,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:1405,\&quot;transferSize\&quot;:7559,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:262,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1411},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:18,\&quot;requestLength\&quot;:2923,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;1631;a\&quot;,\&quot;1638;a\&quot;,\&quot;1641;a\&quot;,\&quot;1642;a\&quot;,\&quot;1643;a\&quot;,\&quot;1652;a\&quot;,\&quot;1653;a\&quot;,\&quot;1658;a\&quot;],\&quot;requestId\&quot;:\&quot;42133000000a9ecb76\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:6327,\&quot;xhrDuration\&quot;:1430,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:42134,\&quot;fetchStart\&quot;:42134,\&quot;requestStart\&quot;:42138,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:15,\&quot;transfer\&quot;:1415,\&quot;transferSize\&quot;:6905,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:126,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1432},{\&quot;ts\&quot;:42134,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:19,\&quot;requestLength\&quot;:1065,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;1645;a\&quot;],\&quot;requestId\&quot;:\&quot;42134000000fda4083\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:107789,\&quot;xhrDuration\&quot;:1800,\&quot;xhrStall\&quot;:5,\&quot;startTime\&quot;:42135,\&quot;fetchStart\&quot;:42135,\&quot;requestStart\&quot;:42140,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:21,\&quot;transfer\&quot;:1779,\&quot;transferSize\&quot;:108367,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:612,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1802}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:42111,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1660;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;setup:gear\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.setup.components.aura.components.gear.GearController/ACTION$getGearSetupApps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:2,\&quot;enqueueWait\&quot;:22,\&quot;serverTime\&quot;:{\&quot;total\&quot;:32,\&quot;db\&quot;:9,\&quot;xhrServerTime\&quot;:85,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:1262},{\&quot;ts\&quot;:42125,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1665;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;forceSearch:assistantSuggestionsDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.assistant.AssistantSuggestionsDataProviderController/ACTION$getSuggestions\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:216,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:262,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:1414},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1631;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:8,\&quot;duration\&quot;:1441},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1638;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:1442},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1641;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:18,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1442},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1642;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1442},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1643;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1442},{\&quot;ts\&quot;:42104,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1652;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;one:globalCreate\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.globalCreate.GlobalCreateController/ACTION$getDockableActionsList\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:29,\&quot;serverTime\&quot;:{\&quot;total\&quot;:41,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:20,\&quot;duration\&quot;:1491},{\&quot;ts\&quot;:42105,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1653;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;uns:notifications\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.notifications.components.notifications.controller.NotificationsController/ACTION$getNotifications\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:28,\&quot;serverTime\&quot;:{\&quot;total\&quot;:10,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1490},{\&quot;ts\&quot;:42109,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1658;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;one:userProfileCardData\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.userProfileCard.UserProfileCardController/ACTION$loadProfileCardInfo\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:24,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:1487}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:20,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;search_lightning:assistantSuggestionItemPlaceholder\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:1},{\&quot;name\&quot;:\&quot;search_lightning:assistantDialogHelpPanel\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:1},{\&quot;name\&quot;:\&quot;ui:menu\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:18}]}]},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheMrus\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-fetch-getGlobalMrus\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1633063159638,\&quot;cacheHit\&quot;:false,\&quot;actionId\&quot;:\&quot;1645;a\&quot;,\&quot;fetchedGlobalMrus\&quot;:200,\&quot;fetchedGlobalMruNumEntities\&quot;:9,\&quot;deletedGlobalMrus\&quot;:0,\&quot;tEnd\&quot;:1633063161483,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getGlobalMrus\&quot;,\&quot;etTransaction\&quot;:1845,\&quot;requestId\&quot;:\&quot;forceSearchSearchGDPCacheMrus:116:0;p\&quot;,\&quot;requestCmp\&quot;:\&quot;forceSearchSearchGDPCacheMrus\&quot;,\&quot;requestCmpId\&quot;:\&quot;116:0;p\&quot;,\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheMrus\&quot;,\&quot;time\&quot;:1633063161483,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:42129,\&quot;duration\&quot;:1816,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{\&quot;custom\&quot;:[],\&quot;transport\&quot;:[{\&quot;ts\&quot;:42135,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:20,\&quot;requestLength\&quot;:1086,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;1660;a\&quot;],\&quot;requestId\&quot;:\&quot;4213500000022a2f23\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1707,\&quot;xhrDuration\&quot;:1234,\&quot;xhrStall\&quot;:9,\&quot;startTime\&quot;:42136,\&quot;fetchStart\&quot;:42136,\&quot;requestStart\&quot;:42145,\&quot;dns\&quot;:3,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:39,\&quot;transfer\&quot;:1195,\&quot;transferSize\&quot;:2284,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:85,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1236},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:18,\&quot;requestLength\&quot;:2923,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;1631;a\&quot;,\&quot;1638;a\&quot;,\&quot;1641;a\&quot;,\&quot;1642;a\&quot;,\&quot;1643;a\&quot;,\&quot;1652;a\&quot;,\&quot;1653;a\&quot;,\&quot;1658;a\&quot;],\&quot;requestId\&quot;:\&quot;42133000000a9ecb76\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:6327,\&quot;xhrDuration\&quot;:1430,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:42134,\&quot;fetchStart\&quot;:42134,\&quot;requestStart\&quot;:42138,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:15,\&quot;transfer\&quot;:1415,\&quot;transferSize\&quot;:6905,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:126,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1432},{\&quot;ts\&quot;:42134,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:19,\&quot;requestLength\&quot;:1065,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;1645;a\&quot;],\&quot;requestId\&quot;:\&quot;42134000000fda4083\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:107789,\&quot;xhrDuration\&quot;:1800,\&quot;xhrStall\&quot;:5,\&quot;startTime\&quot;:42135,\&quot;fetchStart\&quot;:42135,\&quot;requestStart\&quot;:42140,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:21,\&quot;transfer\&quot;:1779,\&quot;transferSize\&quot;:108367,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:612,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1802}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:42135,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1660;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:32,\&quot;db\&quot;:9,\&quot;xhrServerTime\&quot;:85,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:1238},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1631;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:8,\&quot;duration\&quot;:1441},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1638;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:1442},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1641;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:18,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1442},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1642;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1442},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1643;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1442},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1652;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:41,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:20,\&quot;duration\&quot;:1462},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1653;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:10,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1462},{\&quot;ts\&quot;:42133,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1658;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:126,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:1463},{\&quot;ts\&quot;:42134,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1645;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:566,\&quot;db\&quot;:51,\&quot;xhrServerTime\&quot;:611,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:6,\&quot;duration\&quot;:1810}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:19,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;search_lightning:assistantDialogHelpPanel\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:1},{\&quot;name\&quot;:\&quot;ui:menu\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:18}]}]},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-provideMruOptions\&quot;,\&quot;attributes\&quot;:{\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;hasScopedMrus\&quot;:false,\&quot;hasGlobalMrus\&quot;:true,\&quot;term\&quot;:\&quot;\&quot;,\&quot;startTime\&quot;:1633063159667,\&quot;suggestionId\&quot;:\&quot;0dd73b16-613f-49d8-d692-7316b25a6727\&quot;,\&quot;endTime\&quot;:1633063161484,\&quot;totalTime\&quot;:1817,\&quot;numTotalItems\&quot;:5,\&quot;numGlobalItems\&quot;:5,\&quot;numScopedItems\&quot;:0,\&quot;hasSearchTerm\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;time\&quot;:1633063161485,\&quot;queryLength\&quot;:0,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:58109,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;forceSearch:assistantDialogContainer\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-click\&quot;,\&quot;attributes\&quot;:{\&quot;searchDialogSessionId\&quot;:\&quot;6957ff6c-3e28-6f0d-b647-fa0d25ae0943\&quot;,\&quot;sourceCmp\&quot;:\&quot;forceSearch:assistantDialogContainer\&quot;,\&quot;time\&quot;:1633063175646,\&quot;queryLength\&quot;:0,\&quot;term\&quot;:\&quot;\&quot;,\&quot;scopeName\&quot;:null,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-input\&quot;,\&quot;scope\&quot;:\&quot;search-assistant-desktop\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:8,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;home:landing\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/page/home\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:58322,\&quot;duration\&quot;:2,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getGlobalMrus\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1633063175861,\&quot;cacheHit\&quot;:true,\&quot;etCacheGet\&quot;:0,\&quot;tSending\&quot;:1633063175861,\&quot;etDataCopy\&quot;:2,\&quot;tEnd\&quot;:1633063175863,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getGlobalMrus\&quot;,\&quot;etTransaction\&quot;:2,\&quot;requestId\&quot;:\&quot;cacheBridge:fcbbf3d5-fd5f-1351-d4fd-62cbfacaa399\&quot;,\&quot;requestCmp\&quot;:\&quot;cacheBridge\&quot;,\&quot;requestCmpId\&quot;:\&quot;fcbbf3d5-fd5f-1351-d4fd-62cbfacaa399\&quot;,\&quot;params\&quot;:[\&quot;maxResults:200\&quot;,\&quot;term:\&quot;,\&quot;limitGlobalRequests:true\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheMrus\&quot;,\&quot;time\&quot;:1633063175863,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:58322,\&quot;duration\&quot;:4,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-provideMruOptions\&quot;,\&quot;attributes\&quot;:{\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;hasScopedMrus\&quot;:false,\&quot;hasGlobalMrus\&quot;:true,\&quot;term\&quot;:\&quot;\&quot;,\&quot;startTime\&quot;:1633063175860,\&quot;suggestionId\&quot;:\&quot;850623cd-9a8d-e199-60a2-4e66fe908fc2\&quot;,\&quot;endTime\&quot;:1633063175865,\&quot;totalTime\&quot;:5,\&quot;numTotalItems\&quot;:5,\&quot;numGlobalItems\&quot;:5,\&quot;numScopedItems\&quot;:0,\&quot;hasSearchTerm\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;time\&quot;:1633063175865,\&quot;queryLength\&quot;:0,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:58319,\&quot;duration\&quot;:38,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{\&quot;custom\&quot;:[]},\&quot;owner\&quot;:\&quot;forceSearch:assistantSuggestionsDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-predictSuggestions\&quot;,\&quot;attributes\&quot;:{\&quot;didError\&quot;:false,\&quot;didFetch\&quot;:false,\&quot;suggestionId\&quot;:\&quot;850623cd-9a8d-e199-60a2-4e66fe908fc2\&quot;,\&quot;searchUIConfigRequestId\&quot;:\&quot;02607bcd-4da1-4318-93ca-d6065a532dc6\&quot;,\&quot;configDebounce\&quot;:{\&quot;api\&quot;:\&quot;setTimeout\&quot;,\&quot;delay\&quot;:150,\&quot;trailingEdge\&quot;:true,\&quot;leadingEdge\&quot;:true,\&quot;xhrApi\&quot;:\&quot;none\&quot;,\&quot;maxConcurrentXhrs\&quot;:\&quot;Infinity\&quot;},\&quot;searchDialogSessionId\&quot;:\&quot;6957ff6c-3e28-6f0d-b647-fa0d25ae0943\&quot;,\&quot;iteration\&quot;:1,\&quot;instantResultListImpressionId\&quot;:\&quot;6957ff6c-3e28-6f0d-b647-fa0d25ae0943_1\&quot;,\&quot;searchId\&quot;:null,\&quot;resultsContainerId\&quot;:null,\&quot;time\&quot;:1633063175858,\&quot;queryLength\&quot;:0,\&quot;term\&quot;:\&quot;\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;numMruRecords\&quot;:5,\&quot;numMruRecordsEntitites\&quot;:4,\&quot;numTaDedupeSuggestedQueries\&quot;:0,\&quot;numTaDedupeSuggestedRecords\&quot;:0,\&quot;numTaDedupeSuggestedListViews\&quot;:0,\&quot;lpSummary\&quot;:{\&quot;total-time\&quot;:38,\&quot;client-time\&quot;:8,\&quot;server-time\&quot;:0,\&quot;network-time\&quot;:0},\&quot;lpOffsets\&quot;:{\&quot;getRecordsFromMruDP\&quot;:1},\&quot;lpStatus\&quot;:\&quot;ok\&quot;,\&quot;lpStartedTime\&quot;:1633063175858,\&quot;lpTimeline\&quot;:[{\&quot;label\&quot;:\&quot;getRecordsFromMruDP\&quot;,\&quot;starting_time\&quot;:1,\&quot;ending_time\&quot;:9,\&quot;duration\&quot;:8,\&quot;type\&quot;:\&quot;client\&quot;}],\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:58396,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;forceSearch:assistantDialog\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-refresh\&quot;,\&quot;attributes\&quot;:{\&quot;searchDialogSessionId\&quot;:\&quot;6957ff6c-3e28-6f0d-b647-fa0d25ae0943\&quot;,\&quot;iteration\&quot;:1,\&quot;instantResultListImpressionId\&quot;:\&quot;6957ff6c-3e28-6f0d-b647-fa0d25ae0943_1\&quot;,\&quot;searchId\&quot;:null,\&quot;resultsContainerId\&quot;:null,\&quot;numChars\&quot;:0,\&quot;numResults\&quot;:9,\&quot;resultSet\&quot;:[{\&quot;position\&quot;:1,\&quot;resultType\&quot;:\&quot;QUERY_SUGGESTION\&quot;,\&quot;queryId\&quot;:null,\&quot;recordId\&quot;:null,\&quot;tableEnumOrId\&quot;:null,\&quot;parentServiceRequestId\&quot;:\&quot;1qbfjso2vad13\&quot;},{\&quot;position\&quot;:2,\&quot;resultType\&quot;:\&quot;QUERY_SUGGESTION\&quot;,\&quot;queryId\&quot;:null,\&quot;recordId\&quot;:null,\&quot;tableEnumOrId\&quot;:null,\&quot;parentServiceRequestId\&quot;:\&quot;1qbfjso2vad13\&quot;},{\&quot;position\&quot;:3,\&quot;resultType\&quot;:\&quot;QUERY_SUGGESTION\&quot;,\&quot;queryId\&quot;:null,\&quot;recordId\&quot;:null,\&quot;tableEnumOrId\&quot;:null,\&quot;parentServiceRequestId\&quot;:\&quot;1qbfjso2vad13\&quot;},{\&quot;position\&quot;:4,\&quot;resultType\&quot;:\&quot;MRU\&quot;,\&quot;queryId\&quot;:null,\&quot;recordId\&quot;:\&quot;${c_clkRecordId}AAA\&quot;,\&quot;tableEnumOrId\&quot;:\&quot;User\&quot;,\&quot;parentServiceRequestId\&quot;:null},{\&quot;position\&quot;:5,\&quot;resultType\&quot;:\&quot;MRU\&quot;,\&quot;queryId\&quot;:null,\&quot;recordId\&quot;:\&quot;a5k7d0000011KISAA2\&quot;,\&quot;tableEnumOrId\&quot;:\&quot;Agreement\&quot;,\&quot;parentServiceRequestId\&quot;:null},{\&quot;position\&quot;:6,\&quot;resultType\&quot;:\&quot;MRU\&quot;,\&quot;queryId\&quot;:null,\&quot;recordId\&quot;:\&quot;a6R7d000000L1MyEAK\&quot;,\&quot;tableEnumOrId\&quot;:\&quot;Quote/Proposal\&quot;,\&quot;parentServiceRequestId\&quot;:null},{\&quot;position\&quot;:7,\&quot;resultType\&quot;:\&quot;MRU\&quot;,\&quot;queryId\&quot;:null,\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;tableEnumOrId\&quot;:\&quot;Quote/Proposal\&quot;,\&quot;parentServiceRequestId\&quot;:null},{\&quot;position\&quot;:8,\&quot;resultType\&quot;:\&quot;MRU\&quot;,\&quot;queryId\&quot;:null,\&quot;recordId\&quot;:\&quot;001a000001dLchaAAC\&quot;,\&quot;tableEnumOrId\&quot;:\&quot;Account\&quot;,\&quot;parentServiceRequestId\&quot;:null},{\&quot;position\&quot;:9,\&quot;resultType\&quot;:\&quot;LISTVIEW\&quot;,\&quot;queryId\&quot;:null,\&quot;recordId\&quot;:\&quot;00B3a000004G33CEAS\&quot;,\&quot;tableEnumOrId\&quot;:\&quot;Opportunity\&quot;,\&quot;parentServiceRequestId\&quot;:\&quot;1qbfjso2vad13\&quot;}],\&quot;filtersList\&quot;:[],\&quot;sourceCmp\&quot;:\&quot;forceSearch:assistantDialog\&quot;,\&quot;time\&quot;:1633063175935,\&quot;queryLength\&quot;:0,\&quot;term\&quot;:\&quot;\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-suggestions-list\&quot;,\&quot;scope\&quot;:\&quot;search-assistant-desktop\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:9,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;home:landing\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/page/home\&quot;,\&quot;panel\&quot;:{\&quot;type\&quot;:\&quot;panel\&quot;,\&quot;devNameOrId\&quot;:\&quot;markup://forceSearch:groupContainer\&quot;}}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:58099,\&quot;duration\&quot;:320,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{\&quot;custom\&quot;:[],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:7,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;ui:panel\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:7},{\&quot;name\&quot;:\&quot;search_lightning:assistantSuggestionItemPlaceholder\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:0}]}]},\&quot;owner\&quot;:\&quot;forceSearch:assistant\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-assistant-dialog-open\&quot;,\&quot;attributes\&quot;:{\&quot;didCreatePanel\&quot;:true,\&quot;isPrefetch\&quot;:false,\&quot;lpMetrics\&quot;:{\&quot;EPT\&quot;:308,\&quot;frameworkRenderTime\&quot;:48},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;lpSummary\&quot;:{\&quot;total-time\&quot;:321,\&quot;client-time\&quot;:279,\&quot;server-time\&quot;:0,\&quot;network-time\&quot;:0},\&quot;lpOffsets\&quot;:{\&quot;handleClick\&quot;:0,\&quot;panelOpen\&quot;:13,\&quot;fetchData_ts\&quot;:219,\&quot;suggestionsLoaded_ts\&quot;:260,\&quot;suggestionsRender\&quot;:260,\&quot;suggestionsRendered_ts\&quot;:308,\&quot;postRender\&quot;:308},\&quot;lpStatus\&quot;:\&quot;ok\&quot;,\&quot;lpStartedTime\&quot;:1633063175637,\&quot;lpTimeline\&quot;:[{\&quot;label\&quot;:\&quot;handleClick\&quot;,\&quot;starting_time\&quot;:0,\&quot;ending_time\&quot;:13,\&quot;duration\&quot;:13,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;panelOpen\&quot;,\&quot;starting_time\&quot;:13,\&quot;ending_time\&quot;:218,\&quot;duration\&quot;:205,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;fetchData_ts\&quot;,\&quot;starting_time\&quot;:219,\&quot;ending_time\&quot;:219,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;suggestionsLoaded_ts\&quot;,\&quot;starting_time\&quot;:260,\&quot;ending_time\&quot;:260,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;suggestionsRendered_ts\&quot;,\&quot;starting_time\&quot;:308,\&quot;ending_time\&quot;:308,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;suggestionsRender\&quot;,\&quot;starting_time\&quot;:260,\&quot;ending_time\&quot;:308,\&quot;duration\&quot;:48,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;postRender\&quot;,\&quot;starting_time\&quot;:308,\&quot;ending_time\&quot;:321,\&quot;duration\&quot;:13,\&quot;type\&quot;:\&quot;client\&quot;}],\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:59611,\&quot;duration\&quot;:3,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getGlobalMrus\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1633063177149,\&quot;cacheHit\&quot;:true,\&quot;etCacheGet\&quot;:1,\&quot;tSending\&quot;:1633063177150,\&quot;etDataCopy\&quot;:2,\&quot;tEnd\&quot;:1633063177152,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getGlobalMrus\&quot;,\&quot;etTransaction\&quot;:3,\&quot;requestId\&quot;:\&quot;cacheBridge:51092313-619d-af23-12b9-f392271b9ed5\&quot;,\&quot;requestCmp\&quot;:\&quot;cacheBridge\&quot;,\&quot;requestCmpId\&quot;:\&quot;51092313-619d-af23-12b9-f392271b9ed5\&quot;,\&quot;params\&quot;:[\&quot;maxResults:200\&quot;,\&quot;term:MASKED_SEARCH_INFO\&quot;,\&quot;limitGlobalRequests:true\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheMrus\&quot;,\&quot;time\&quot;:1633063177153,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:59611,\&quot;duration\&quot;:8,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-provideMruOptions\&quot;,\&quot;attributes\&quot;:{\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;hasScopedMrus\&quot;:false,\&quot;hasGlobalMrus\&quot;:true,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;startTime\&quot;:1633063177149,\&quot;suggestionId\&quot;:\&quot;9c787515-c480-ffd0-ba09-6e222886c986\&quot;,\&quot;endTime\&quot;:1633063177157,\&quot;totalTime\&quot;:8,\&quot;numTotalItems\&quot;:1,\&quot;numGlobalItems\&quot;:1,\&quot;numScopedItems\&quot;:0,\&quot;hasSearchTerm\&quot;:true,\&quot;sourceCmp\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;time\&quot;:1633063177157,\&quot;queryLength\&quot;:10,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:58324,\&quot;duration\&quot;:2440,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getGlobalMrus\&quot;,\&quot;ts\&quot;:58324,\&quot;context\&quot;:{\&quot;times\&quot;:\&quot;MRUCC.getGlobalMrus():495\&quot;},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;duration\&quot;:2440}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:58329,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:27,\&quot;requestLength\&quot;:1334,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;1765;a\&quot;],\&quot;requestId\&quot;:\&quot;583290000003c47c2e\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1249,\&quot;xhrDuration\&quot;:2430,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:58330,\&quot;fetchStart\&quot;:58330,\&quot;requestStart\&quot;:58333,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:3,\&quot;transfer\&quot;:2427,\&quot;transferSize\&quot;:1827,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:554,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:2433}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:0,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;search_lightning:assistantSuggestionItemPlaceholder\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:0}]}]},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-fetch-getGlobalMrus\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1633063175863,\&quot;cacheHit\&quot;:true,\&quot;actionId\&quot;:\&quot;1765;a\&quot;,\&quot;fetchedGlobalMrus\&quot;:0,\&quot;fetchedGlobalMruNumEntities\&quot;:0,\&quot;deletedGlobalMrus\&quot;:0,\&quot;tEnd\&quot;:1633063178303,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getGlobalMrus\&quot;,\&quot;etTransaction\&quot;:2440,\&quot;requestId\&quot;:\&quot;cacheBridge:fcbbf3d5-fd5f-1351-d4fd-62cbfacaa399\&quot;,\&quot;requestCmp\&quot;:\&quot;cacheBridge\&quot;,\&quot;requestCmpId\&quot;:\&quot;fcbbf3d5-fd5f-1351-d4fd-62cbfacaa399\&quot;,\&quot;params\&quot;:[\&quot;maxResults:200\&quot;,\&quot;term:\&quot;,\&quot;limitGlobalRequests:true\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheMrus\&quot;,\&quot;time\&quot;:1633063178303,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:59605,\&quot;duration\&quot;:1481,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{\&quot;custom\&quot;:[],\&quot;transport\&quot;:[{\&quot;ts\&quot;:59608,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:28,\&quot;requestLength\&quot;:3498,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;1779;a\&quot;],\&quot;requestId\&quot;:\&quot;5960800000026a3148\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1984,\&quot;xhrDuration\&quot;:1470,\&quot;xhrStall\&quot;:2,\&quot;startTime\&quot;:59609,\&quot;fetchStart\&quot;:59609,\&quot;requestStart\&quot;:59611,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:3,\&quot;transfer\&quot;:1467,\&quot;transferSize\&quot;:2562,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:374,\&quot;xhrDelay\&quot;:4},\&quot;duration\&quot;:1474}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:59608,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1779;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;forceSearch:assistantSuggestionsDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.assistant.AssistantSuggestionsDataProviderController/ACTION$getSuggestions\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:331,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:374,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1475}]},\&quot;owner\&quot;:\&quot;forceSearch:assistantSuggestionsDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-predictSuggestions\&quot;,\&quot;attributes\&quot;:{\&quot;didError\&quot;:false,\&quot;didFetch\&quot;:true,\&quot;suggestionId\&quot;:\&quot;9c787515-c480-ffd0-ba09-6e222886c986\&quot;,\&quot;searchUIConfigRequestId\&quot;:\&quot;02607bcd-4da1-4318-93ca-d6065a532dc6\&quot;,\&quot;configDebounce\&quot;:{\&quot;api\&quot;:\&quot;setTimeout\&quot;,\&quot;delay\&quot;:150,\&quot;trailingEdge\&quot;:true,\&quot;leadingEdge\&quot;:true,\&quot;xhrApi\&quot;:\&quot;none\&quot;,\&quot;maxConcurrentXhrs\&quot;:\&quot;Infinity\&quot;},\&quot;searchDialogSessionId\&quot;:\&quot;6957ff6c-3e28-6f0d-b647-fa0d25ae0943\&quot;,\&quot;iteration\&quot;:2,\&quot;instantResultListImpressionId\&quot;:\&quot;6957ff6c-3e28-6f0d-b647-fa0d25ae0943_2\&quot;,\&quot;searchId\&quot;:null,\&quot;resultsContainerId\&quot;:null,\&quot;time\&quot;:1633063177144,\&quot;queryLength\&quot;:10,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;searchSuggestionRequestId\&quot;:\&quot;6957ff6c-3e28-6f0d-b647-fa0d25ae0943_2\&quot;,\&quot;xmmState\&quot;:{\&quot;didSend\&quot;:true,\&quot;didStall\&quot;:false,\&quot;debounceStart\&quot;:1,\&quot;debounceEnd\&quot;:2,\&quot;debounceDuration\&quot;:1,\&quot;numInFlightXhrsAtSend\&quot;:0},\&quot;isPrefetch\&quot;:false,\&quot;numMruRecords\&quot;:1,\&quot;numMruRecordsEntitites\&quot;:1,\&quot;actionId\&quot;:\&quot;1779;a\&quot;,\&quot;isActionCacheHit\&quot;:false,\&quot;numListViewSuggestions\&quot;:0,\&quot;numListViewSuggestionsEntities\&quot;:0,\&quot;numListViewSuggestionsEntitiesProcessed\&quot;:0,\&quot;numQuerySuggestions\&quot;:0,\&quot;numRecordsSuggestions\&quot;:0,\&quot;numRecordSuggestionsEntities\&quot;:0,\&quot;summaryTimes\&quot;:[\&quot;PSU.fetchPredictedSuggestionsSum:329\&quot;,\&quot;PSS.buildRecordSuggestionsAnswerSum:0\&quot;,\&quot;PSS.buildListViewSuggestionsAnswerSum:0\&quot;,\&quot;PSS.buildPredictedSuggestionsSum:0\&quot;,\&quot;PSS.getPredictedSuggestionsServerTime:329\&quot;],\&quot;apiRequestId\&quot;:\&quot;1dkfv2ks4hjc5\&quot;,\&quot;numTaDedupeSuggestedQueries\&quot;:0,\&quot;numTaDedupeSuggestedRecords\&quot;:0,\&quot;numTaDedupeSuggestedListViews\&quot;:0,\&quot;lpSummary\&quot;:{\&quot;total-time\&quot;:1480,\&quot;client-time\&quot;:1476,\&quot;server-time\&quot;:329,\&quot;network-time\&quot;:1145},\&quot;lpOffsets\&quot;:{\&quot;fetchSuggestions\&quot;:4,\&quot;getRecordsFromMruDP\&quot;:4,\&quot;loadSuggestions\&quot;:1478},\&quot;lpStatus\&quot;:\&quot;ok\&quot;,\&quot;lpStartedTime\&quot;:1633063177144,\&quot;lpTimeline\&quot;:[{\&quot;label\&quot;:\&quot;getRecordsFromMruDP\&quot;,\&quot;starting_time\&quot;:4,\&quot;ending_time\&quot;:15,\&quot;duration\&quot;:11,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;PSU.buildRequest\&quot;,\&quot;starting_time\&quot;:16,\&quot;ending_time\&quot;:16,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;SFS.accessCheck\&quot;,\&quot;starting_time\&quot;:4,\&quot;ending_time\&quot;:16,\&quot;duration\&quot;:12,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;PSS.mapScopeMapsByEntity\&quot;,\&quot;starting_time\&quot;:333,\&quot;ending_time\&quot;:333,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;PSS.buildPredictedSuggestionsGetRecordInfo\&quot;,\&quot;starting_time\&quot;:333,\&quot;ending_time\&quot;:333,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;PSS.buildPredictedSuggestionsBuildScopeMap\&quot;,\&quot;starting_time\&quot;:333,\&quot;ending_time\&quot;:333,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;PSS.buildPredictedSuggestionsGetFieldsForQuery\&quot;,\&quot;starting_time\&quot;:333,\&quot;ending_time\&quot;:333,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;PSS.buildPredictedSuggestionsLoadRecords\&quot;,\&quot;starting_time\&quot;:333,\&quot;ending_time\&quot;:333,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;SS.addDisambiguationField()\&quot;,\&quot;starting_time\&quot;:333,\&quot;ending_time\&quot;:333,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;PSS.buildPredictedSuggestionsBuildListViewScopeMap\&quot;,\&quot;starting_time\&quot;:333,\&quot;ending_time\&quot;:333,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;ASDPC.getSuggestionsAddToLDS\&quot;,\&quot;starting_time\&quot;:333,\&quot;ending_time\&quot;:333,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;PSU.performRequest\&quot;,\&quot;starting_time\&quot;:16,\&quot;ending_time\&quot;:333,\&quot;duration\&quot;:317,\&quot;type\&quot;:\&quot;server\&quot;},{\&quot;label\&quot;:\&quot;predictSuggestions-networkTime\&quot;,\&quot;starting_time\&quot;:333,\&quot;ending_time\&quot;:1478,\&quot;duration\&quot;:1145,\&quot;type\&quot;:\&quot;network-time\&quot;},{\&quot;label\&quot;:\&quot;fetchSuggestions\&quot;,\&quot;starting_time\&quot;:4,\&quot;ending_time\&quot;:1478,\&quot;duration\&quot;:1474,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;loadSuggestions\&quot;,\&quot;starting_time\&quot;:1478,\&quot;ending_time\&quot;:1480,\&quot;duration\&quot;:2,\&quot;type\&quot;:\&quot;client\&quot;}],\&quot;lpAction_getSuggestions\&quot;:{\&quot;startTime\&quot;:59608,\&quot;endTime\&quot;:61083,\&quot;duration\&quot;:1475,\&quot;cumulativeServerTime\&quot;:374,\&quot;cumulativeNetworkTime\&quot;:1096,\&quot;cumulativeFrameworkClientTime\&quot;:5,\&quot;xhrCount\&quot;:1,\&quot;actionCount\&quot;:1},\&quot;lpActionsSummary\&quot;:{\&quot;startTime\&quot;:59608,\&quot;endTime\&quot;:61083,\&quot;duration\&quot;:1475,\&quot;cumulativeServerTime\&quot;:374,\&quot;cumulativeNetworkTime\&quot;:1096,\&quot;cumulativeFrameworkClientTime\&quot;:5,\&quot;xhrCount\&quot;:1,\&quot;actionCount\&quot;:1},\&quot;lpActions\&quot;:[{\&quot;actionName\&quot;:\&quot;getSuggestions\&quot;,\&quot;actionDef\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.assistant.AssistantSuggestionsDataProviderController/ACTION$getSuggestions\&quot;,\&quot;xhrDuration\&quot;:1470,\&quot;xhrStall\&quot;:2,\&quot;xhrDelay\&quot;:4,\&quot;serverTime\&quot;:374,\&quot;ttfb\&quot;:3,\&quot;dns\&quot;:0,\&quot;fetchStart\&quot;:59609,\&quot;tcp\&quot;:0,\&quot;transfer\&quot;:1467,\&quot;startTime\&quot;:59609,\&quot;transportId\&quot;:\&quot;5960800000026a3148\&quot;,\&quot;xhrServerTime\&quot;:374,\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;actionStartTime\&quot;:59608,\&quot;actionDuration\&quot;:1475}],\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:61103,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;forceSearch:assistantDialog\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-refresh\&quot;,\&quot;attributes\&quot;:{\&quot;searchDialogSessionId\&quot;:\&quot;6957ff6c-3e28-6f0d-b647-fa0d25ae0943\&quot;,\&quot;iteration\&quot;:2,\&quot;instantResultListImpressionId\&quot;:\&quot;6957ff6c-3e28-6f0d-b647-fa0d25ae0943_2\&quot;,\&quot;searchId\&quot;:null,\&quot;resultsContainerId\&quot;:null,\&quot;numChars\&quot;:10,\&quot;numResults\&quot;:1,\&quot;resultSet\&quot;:[{\&quot;position\&quot;:1,\&quot;resultType\&quot;:\&quot;MRU\&quot;,\&quot;queryId\&quot;:null,\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;tableEnumOrId\&quot;:\&quot;Quote/Proposal\&quot;,\&quot;parentServiceRequestId\&quot;:null}],\&quot;filtersList\&quot;:[],\&quot;sourceCmp\&quot;:\&quot;forceSearch:assistantDialog\&quot;,\&quot;time\&quot;:1633063178642,\&quot;queryLength\&quot;:10,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-suggestions-list\&quot;,\&quot;scope\&quot;:\&quot;search-assistant-desktop\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:10,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;home:landing\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/page/home\&quot;,\&quot;panel\&quot;:{\&quot;type\&quot;:\&quot;panel\&quot;,\&quot;devNameOrId\&quot;:\&quot;markup://forceSearch:groupContainer\&quot;}}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:58095,\&quot;duration\&quot;:3048,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;scenarioTime\&quot;,\&quot;attributes\&quot;:{\&quot;target\&quot;:\&quot;search-input\&quot;,\&quot;scope\&quot;:\&quot;search-assistant-desktop\&quot;,\&quot;pageContext\&quot;:\&quot;home:landing\&quot;,\&quot;pageUrl\&quot;:\&quot;/lightning/page/home\&quot;,\&quot;entityType\&quot;:\&quot;unknown\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false,\&quot;scenarioTrackerMarksEnabled\&quot;:false}}}&quot;}],&quot;traces&quot;:&quot;[]&quot;,&quot;metrics&quot;:&quot;[{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-size-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063178683,\&quot;value\&quot;:[10]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-watch-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063178683,\&quot;value\&quot;:[2]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-snapshot-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063178683,\&quot;value\&quot;:[0]},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063175823,\&quot;value\&quot;:3},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.UiApi.getObjectInfo\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063165252,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.UiApi.getRecord\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063165251,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.UiApi.getRecordAvatars\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063175823,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;scenarioTime.ms\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063178682,\&quot;value\&quot;:[3047]}]&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=29&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">61145000000a641ab3</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=30&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1&amp;ui-search-components-forcesearch-experiment.Experiment.startExperiment=1-454" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1742;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.experiment.ExperimentController/ACTION$startExperiment&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;searchDialogSessionId&quot;:&quot;6957ff6c-3e28-6f0d-b647-fa0d25ae0943&quot;}},{&quot;id&quot;:&quot;1810;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordDescriptor&quot;:&quot;${c_recordId}.undefined.null.null.null.Id,RecordTypeId.VIEW.true.null.null.null&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=30&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1&amp;ui-search-components-forcesearch-experiment.Experiment.startExperiment=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">6200200000040b943b</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=32&amp;ui-force-components-controllers-relatedList.RelatedListContainer.getRelatedListInfos=1-456" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1858;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.relatedList.RelatedListContainerController/ACTION$getRelatedListInfos&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;${c_recordId}&quot;,&quot;location&quot;:&quot;ALL&quot;},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=32&amp;ui-force-components-controllers-relatedList.RelatedListContainer.getRelatedListInfos=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">62397000000ebbd099</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=31&amp;ui-search-components-forcesearch-assistantRecordPreview.AssistantRecordPreviewDataProvider.getRecordPreviewData=1-455" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1839;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.assistantRecordPreview.AssistantRecordPreviewDataProviderController/ACTION$getRecordPreviewData&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;${c_recordId}&quot;,&quot;buildScopeMap&quot;:false},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=31&amp;ui-search-components-forcesearch-assistantRecordPreview.AssistantRecordPreviewDataProvider.getRecordPreviewData=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">62258000000d0153a2</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_quoteRefId" enabled="true">
              <stringProp name="TestPlan.comments">2008363083.1</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_quoteRefId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;Quote_Reference_ID__c&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_quoteRefIdNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import java.time.LocalDateTime;

String time=LocalDateTime.now();

String output = prev.getResponseDataAsString();

String responseCode=prev.getResponseCode();

String requestHeaders=prev.getRequestHeaders();

String responseHeaders=prev.getResponseHeaders();

String requestInfo=prev.getSamplerData();

String api_name = prev.toString();

String c_quoteRefId=vars.get(&quot;c_quoteRefId&quot;);

String FailureMessage = &quot;&quot;;

if((c_quoteRefId.equals(&quot;NotFound&quot;)))
{
	AssertionResult.setFailure(true);
	if(c_quoteRefId.equals(&quot;NotFound&quot;))
		FailureMessage += &quot;c_quoteRefId : NotFound\t&quot;;
	FailureMessage += &quot;Incorrect Response Data&quot;;
 	FileWriter f= new FileWriter(&quot;${p_ErrorLogPath}&quot;,true);
	BufferedWriter b= new BufferedWriter(f);
	b.write(&quot;_______________________________Non-200 Code Returned_________________________________&quot;);
	b.newLine();
	b.write(&quot;For User : &quot;+vars.get(&quot;p_UserNameModified&quot;));
	b.newLine();
	b.write(&quot;FailureMessage: &quot;+FailureMessage);
	b.newLine();
	b.write(&quot;Transaction Name : &quot;+api_name);
	b.newLine();
	b.write(&quot;SampleInfo &quot;+requestInfo);
	b.newLine();
	b.write(&quot;requestHeaders &quot;+requestHeaders);
	b.newLine();
	b.write(&quot;responseHeaders &quot;+responseHeaders);
	b.newLine();
	b.write(&quot;\t/api/negotiate/register,&quot; + time + &quot;,&quot; + &quot; Response Code:&quot; + responseCode + &quot;,&quot; + &quot;Response: &quot; + output);
	b.newLine();
	b.write(&quot;________________________________________________________________&quot;);
	b.newLine();
	b.flush();
	b.close();
 }
</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=33&amp;ui-global-components-one-actionsManager.ActionsManager.handleAction=1-457" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1847;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.actionsManager.ActionsManagerController/ACTION$handleAction&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;batch&quot;:[{&quot;recordId&quot;:&quot;${c_recordId}&quot;,&quot;context&quot;:&quot;CHATTER&quot;,&quot;record&quot;:null,&quot;section&quot;:&quot;SINGLE_ACTION_LINKS&quot;,&quot;inContextOfComponent&quot;:&quot;bestResult&quot;,&quot;size&quot;:3,&quot;maxWidth&quot;:-1,&quot;actionTypes&quot;:[],&quot;bulkedAction&quot;:false,&quot;actionNames&quot;:[],&quot;enableActionsConfiguration&quot;:false,&quot;isLABPreview&quot;:false,&quot;actionsRequestId&quot;:0},{&quot;recordId&quot;:&quot;${c_recordId}&quot;,&quot;context&quot;:&quot;RECORD&quot;,&quot;record&quot;:null,&quot;section&quot;:&quot;PAGE&quot;,&quot;inContextOfComponent&quot;:&quot;bestResult&quot;,&quot;size&quot;:5,&quot;maxWidth&quot;:250,&quot;actionTypes&quot;:[],&quot;bulkedAction&quot;:false,&quot;actionNames&quot;:[],&quot;enableActionsConfiguration&quot;:false,&quot;isLABPreview&quot;:false,&quot;actionsRequestId&quot;:1}]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/page/home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=33&amp;ui-global-components-one-actionsManager.ActionsManager.handleAction=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/page/home</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">623980000004a6fb9b</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_priceListId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_priceListId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;Price_List_GE__c&quot;:&quot;(.*?)&quot;,&quot;Total_amount_with_VAT</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_priceListIdNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="TestPlan.comments">a7la0000000KzI7AAK</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_oppId" enabled="true">
              <stringProp name="TestPlan.comments">0067d00000JavZmAAJ</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_oppId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;Apttus_Proposal__Opportunity__r&quot;:(.*?)&quot;Id&quot;:&quot;(.*?)&quot;,&quot;Name&quot;:&quot;${p_OriginalOppName}&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default">c_oppIdNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_totalAmountWithVATC" enabled="true">
              <stringProp name="TestPlan.comments">3450</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_totalAmountWithVATC</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;Total_amount_with_VAT__c&quot;:(.*?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_totalAmountWithVATCNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_totalAmountWithVATCF" enabled="true">
              <stringProp name="TestPlan.comments">USD 3,450.00</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_totalAmountWithVATCF</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;Total_amount_with_VAT__c__f&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_totalAmountWithVATCFNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_totalAmountWithoutVATC" enabled="true">
              <stringProp name="TestPlan.comments">3450</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_totalAmountWithoutVATC</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;Total_amount_without_VAT__c&quot;:(.*?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_totalAmountWithoutVATCNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_totalAmountWithoutVATCF" enabled="true">
              <stringProp name="TestPlan.comments">USD 3,450.00</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_totalAmountWithoutVATCF</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;Total_amount_without_VAT__c__f&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_totalAmountWithoutVATCFNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import java.time.LocalDateTime;

String time=LocalDateTime.now();

String output = prev.getResponseDataAsString();

String responseCode=prev.getResponseCode();

String requestHeaders=prev.getRequestHeaders();

String responseHeaders=prev.getResponseHeaders();

String requestInfo=prev.getSamplerData();

String api_name = prev.toString();

String c_priceListId=vars.get(&quot;c_priceListId&quot;);

String c_oppId=vars.get(&quot;c_oppId&quot;);

String FailureMessage = &quot;&quot;;

if((c_priceListId.equals(&quot;NotFound&quot;)) || (c_oppId.equals(&quot;Not Found&quot;)))
{
	AssertionResult.setFailure(true);
	if(c_priceListId.equals(&quot;NotFound&quot;))
		FailureMessage += &quot;c_priceListId : NotFound\t&quot;;
	if(c_oppId.equals(&quot;NotFound&quot;))
		FailureMessage += &quot;c_oppId : NotFound\t&quot;;
	FailureMessage += &quot;Incorrect Response Data&quot;;
 	FileWriter f= new FileWriter(&quot;${p_ErrorLogPath}&quot;,true);
	BufferedWriter b= new BufferedWriter(f);
	b.write(&quot;_______________________________Non-200 Code Returned_________________________________&quot;);
	b.newLine();
	b.write(&quot;For User : &quot;+vars.get(&quot;p_UserNameModified&quot;));
	b.newLine();
	b.write(&quot;FailureMessage: &quot;+FailureMessage);
	b.newLine();
	b.write(&quot;Transaction Name : &quot;+api_name);
	b.newLine();
	b.write(&quot;SampleInfo &quot;+requestInfo);
	b.newLine();
	b.write(&quot;requestHeaders &quot;+requestHeaders);
	b.newLine();
	b.write(&quot;responseHeaders &quot;+responseHeaders);
	b.newLine();
	b.write(&quot;\t/api/negotiate/register,&quot; + time + &quot;,&quot; + &quot; Response Code:&quot; + responseCode + &quot;,&quot; + &quot;Response: &quot; + output);
	b.newLine();
	b.write(&quot;________________________________________________________________&quot;);
	b.newLine();
	b.flush();
	b.close();
 }
</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cs192/auraCmpDef-467" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="force" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">force</stringProp>
                  <stringProp name="Argument.value">recordData</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ui" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ui</stringProp>
                  <stringProp name="Argument.value">spinner,toggleLoadingIndicator</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">770008700</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName8}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cs192/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=35&amp;aura.RelatedListUi.getRelatedListInfoCollection=1-459" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1963;a&quot;,&quot;descriptor&quot;:&quot;aura://RelatedListUiController/ACTION$getRelatedListInfoCollection&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;parentObjectApiName&quot;:&quot;Apttus_Proposal__Proposal__c&quot;,&quot;recordTypeId&quot;:&quot;012a0000000AW7OAAW&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=35&amp;aura.RelatedListUi.getRelatedListInfoCollection=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">636730000009b8b1a9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=34&amp;aura.RecordUi.getObjectInfo=1-458" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1962;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getObjectInfo&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;objectApiName&quot;:&quot;Apttus_Proposal__Proposal__c&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=34&amp;aura.RecordUi.getObjectInfo=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">6366800000030e7ecb</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=37&amp;aura.DynamicComponent.getTemplateDescriptorWithExpansionBundle=1-465" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1965;a&quot;,&quot;descriptor&quot;:&quot;aura://DynamicComponentController/ACTION$getTemplateDescriptorWithExpansionBundle&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;type&quot;:&quot;Bundle&quot;,&quot;templateReferences&quot;:[{&quot;type&quot;:&quot;AdgRollup&quot;,&quot;attributes&quot;:{&quot;targetModule&quot;:&quot;forceGenerated__highlightsPanel_Apttus_Proposal__Proposal__c___012a0000000AW7OAAW___Compact___View&quot;,&quot;adgModuleType&quot;:&quot;component&quot;}}]},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=37&amp;aura.DynamicComponent.getTemplateDescriptorWithExpansionBundle=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">640160000006218d62</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=38&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1-466" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2079;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordDescriptor&quot;:&quot;${c_recordId}.012a0000000AW7OAAW.null.null.null.Name,Quote_Hub_ID__c,Quote_Reference_ID__c,Apttus_Proposal__Proposal_Name__c,Apttus_Proposal__Opportunity__r;2Name,Apttus_Proposal__Account__r;2Name,Primary_Agreement__r;2Name,Quote_Stage__c,CreatedDate,Total_amount_without_VAT__c.VIEW.false.null.Id,RecordTypeId.null&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=38&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">641540000009a6049a</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraCmpDef-468" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">CustomLightningSharingAction,Delete_Component,OnHandInventory,atpLightningDatatable,atpLightningDatatableBGColor,ohHandPartsAPI</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">-1227921035</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=36&amp;aura.DynamicComponent.getTemplateDescriptorWithExpansionBundle=1-460" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1964;a&quot;,&quot;descriptor&quot;:&quot;aura://DynamicComponentController/ACTION$getTemplateDescriptorWithExpansionBundle&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;type&quot;:&quot;Bundle&quot;,&quot;templateReferences&quot;:[{&quot;type&quot;:&quot;AdgRollup&quot;,&quot;attributes&quot;:{&quot;targetModule&quot;:&quot;forceGenerated__flexipage_RecordPage___Equipment_Quote_Layout___Apttus_Proposal__Proposal__c___VIEW&quot;,&quot;adgModuleType&quot;:&quot;template&quot;}}]},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=36&amp;aura.DynamicComponent.getTemplateDescriptorWithExpansionBundle=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">636770000005a61efb</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1750941420">Pending Approval</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Transaction - GE_CloneToSameOpp_06_SearchQuoteNumber
API Name - /aura?r=36&amp;aura.DynamicComponent.getTemplateDescriptorWithExpansionBundle=1-460
Assertion_NotFound</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cs192/auraCmpDef-474" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="flexipage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">flexipage</stringProp>
                  <stringProp name="Argument.value">recordHomeWithSubheaderTemplateDesktop2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="formula" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">formula</stringProp>
                  <stringProp name="Argument.value">formulaEngine,formulaMetrics</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="interop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">interop</stringProp>
                  <stringProp name="Argument.value">accordion,accordionSection,card,layout,layoutItem</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lightning" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lightning</stringProp>
                  <stringProp name="Argument.value">accordionUtilsPrivate,progressBar,treeGrid</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">935806267</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName8}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cs192/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=40&amp;aura.RecordUi.getRecordWithFields=1-471" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2084;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getRecordWithFields&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;${c_recordId}&quot;,&quot;optionalFields&quot;:[&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Channel__c&quot;,&quot;Apttus_Proposal__Proposal__c.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__c&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Reference_ID__c&quot;,&quot;Apttus_Proposal__Proposal__c.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.SystemModstamp&quot;,&quot;Apttus_Proposal__Proposal__c.Total_amount_with_VAT__c&quot;,&quot;Apttus_Proposal__Proposal__c.Total_amount_without_VAT__c&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=40&amp;aura.RecordUi.getRecordWithFields=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">65638000000ddfb19f</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraCmpDef-473" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">occrCreateConfigLCSLWC,quotechevronlexnew</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">278045690</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=39&amp;ui-force-components-controllers-relatedList.RelatedListContainerDataProvider.getRecords=1-469" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1987;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.relatedList.RelatedListContainerDataProviderController/ACTION$getRecords&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;${c_recordId}&quot;,&quot;relatedListApiNames&quot;:[&quot;Apttus_QPConfig__Configurations__r&quot;,&quot;Apttus_QPComply__Agreements__r&quot;,&quot;Apttus_QPApprov__ApprovalRequests__r&quot;,&quot;Apttus_Proposal__R00N70000001yUfBEAU__r&quot;,&quot;Quote_Contact_Roles__r&quot;,&quot;Covid_Exceptions__r&quot;,&quot;Proposals__r&quot;,&quot;AttachedContentNotes&quot;,&quot;CombinedAttachments&quot;,&quot;Apttus_QPConfig__QuoteFootnotes__r&quot;,&quot;Histories&quot;],&quot;numRecordsToShow&quot;:10,&quot;showPartialCount&quot;:true},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=39&amp;ui-force-components-controllers-relatedList.RelatedListContainerDataProvider.getRecords=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">6504400000070502c4</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=41&amp;aura.Actions.getRecordActions=1-472" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2085;a&quot;,&quot;descriptor&quot;:&quot;aura://ActionsController/ACTION$getRecordActions&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordIds&quot;:[&quot;${c_recordId}&quot;],&quot;sections&quot;:[&quot;PAGE&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=41&amp;aura.Actions.getRecordActions=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">656410000006de0f78</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=45&amp;aura.RecordUi.getRecordAvatars=1-478" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2149;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getRecordAvatars&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordIds&quot;:[&quot;001a000001dLchaAAC&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=45&amp;aura.RecordUi.getRecordAvatars=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">68151000000249842f</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=44&amp;ui-global-components-one-actionsManager.ActionsManager.handleAction=1-477" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2147;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.actionsManager.ActionsManagerController/ACTION$handleAction&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;batch&quot;:[{&quot;recordId&quot;:&quot;${c_recordId}&quot;,&quot;context&quot;:&quot;CHATTER&quot;,&quot;entityApiName&quot;:&quot;Apttus_Proposal__Proposal__c&quot;,&quot;record&quot;:{&quot;sobjectType&quot;:&quot;Apttus_Proposal__Proposal__c&quot;,&quot;Id&quot;:&quot;${c_recordId}&quot;,&quot;Apttus_Proposal__Account__c&quot;:&quot;001a000001dLchaAAC&quot;,&quot;Apttus_Proposal__Account__r&quot;:{&quot;sobjectType&quot;:&quot;Account&quot;,&quot;Id&quot;:&quot;001a000001dLchaAAC&quot;,&quot;Name&quot;:&quot;${p_AccountName}&quot;,&quot;RecordType&quot;:{&quot;sobjectType&quot;:&quot;RecordType&quot;,&quot;Id&quot;:&quot;01230000000rrnKAAQ&quot;,&quot;Name&quot;:&quot;Validated Account&quot;},&quot;RecordTypeId&quot;:&quot;01230000000rrnKAAQ&quot;},&quot;Apttus_Proposal__Account__r__f&quot;:&quot;${p_AccountName}&quot;,&quot;Apttus_Proposal__Account__r__l&quot;:&quot;${p_AccountName}&quot;,&quot;Channel__c&quot;:&quot;Direct&quot;,&quot;Channel__c__f&quot;:&quot;Direct&quot;,&quot;Channel__c__l&quot;:&quot;Direct&quot;,&quot;Name&quot;:&quot;${p_QuoteNumber}&quot;,&quot;Price_List_GE__c&quot;:&quot;${c_priceListId}&quot;,&quot;Price_List_GE__r&quot;:{&quot;sobjectType&quot;:&quot;Apttus_Config2__PriceList__c&quot;,&quot;Id&quot;:&quot;${c_priceListId}&quot;,&quot;Name&quot;:&quot;USA Ultrasound&quot;},&quot;Price_List_GE__r__f&quot;:&quot;USA Ultrasound&quot;,&quot;Price_List_GE__r__l&quot;:&quot;USA Ultrasound&quot;,&quot;Quote_Reference_ID__c&quot;:&quot;${c_quoteRefId}&quot;,&quot;Total_amount_with_VAT__c&quot;:${c_UpdatedtotalAmountWithVATC},&quot;Total_amount_with_VAT__c__f&quot;:&quot;${c_totalAmountWithVATCF}&quot;,&quot;Total_amount_with_VAT__c__l&quot;:&quot;${c_totalAmountWithVATCF}&quot;,&quot;Total_amount_without_VAT__c&quot;:${c_UpdatedtotalAmountWithoutVATC},&quot;Total_amount_without_VAT__c__f&quot;:&quot;${c_totalAmountWithoutVATCF}&quot;,&quot;Total_amount_without_VAT__c__l&quot;:&quot;${c_totalAmountWithoutVATCF}&quot;,&quot;RecordType&quot;:{&quot;sobjectType&quot;:&quot;RecordType&quot;,&quot;Id&quot;:&quot;012a0000000AW7OAAW&quot;,&quot;Name&quot;:&quot;Proposal&quot;},&quot;RecordTypeId&quot;:&quot;012a0000000AW7OAAW&quot;},&quot;section&quot;:&quot;SINGLE_ACTION_LINKS&quot;,&quot;inContextOfComponent&quot;:&quot;highlightsStencilDesktop&quot;,&quot;size&quot;:3,&quot;maxWidth&quot;:-1,&quot;actionTypes&quot;:[],&quot;bulkedAction&quot;:false,&quot;actionNames&quot;:[],&quot;enableActionsConfiguration&quot;:false,&quot;isLABPreview&quot;:false,&quot;actionsRequestId&quot;:2}]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=44&amp;ui-global-components-one-actionsManager.ActionsManager.handleAction=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">681490000001a8b942</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="TestPlan.comments">c_totalAmountWithVATC</stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.lang.*;
import java.lang.Math;

String ctotalAmountWithVATC = null;

ctotalAmountWithVATC = vars.get(&quot;c_totalAmountWithVATC&quot;);

float var1 = Float.parseFloat(ctotalAmountWithVATC);

int c_UpdatedtotalAmountWithVATC = (int)var1;

vars.put(&quot;c_UpdatedtotalAmountWithVATC&quot;,String.valueOf(c_UpdatedtotalAmountWithVATC));

log.info(&quot;Changed Value: &quot; + c_UpdatedtotalAmountWithVATC);

//////////////////////////////////Total Amount Without VAT/////////////////////////////////////

String ctotalAmountWithoutVATC = null;

ctotalAmountWithoutVATC = vars.get(&quot;c_totalAmountWithoutVATC&quot;);

float var2 = Float.parseFloat(ctotalAmountWithoutVATC);

int c_UpdatedtotalAmountWithoutVATC = (int)var2;

vars.put(&quot;c_UpdatedtotalAmountWithoutVATC&quot;,String.valueOf(c_UpdatedtotalAmountWithoutVATC));

log.info(&quot;Changed Value: &quot; + c_UpdatedtotalAmountWithoutVATC);</stringProp>
              <stringProp name="scriptLanguage">java</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=42&amp;aura.RecordUi.getRecordWithFields=1-475" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2139;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getRecordWithFields&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;${c_recordId}&quot;,&quot;optionalFields&quot;:[&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Proposal_Name__c&quot;,&quot;Apttus_Proposal__Proposal__c.Channel__c&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__c&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__c&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Hub_ID__c&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Reference_ID__c&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Stage__c&quot;,&quot;Apttus_Proposal__Proposal__c.RecordType.Name&quot;,&quot;Apttus_Proposal__Proposal__c.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.SystemModstamp&quot;,&quot;Apttus_Proposal__Proposal__c.Total_amount_with_VAT__c&quot;,&quot;Apttus_Proposal__Proposal__c.Total_amount_without_VAT__c&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=42&amp;aura.RecordUi.getRecordWithFields=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">6798000000047f931d</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=43&amp;aura.RecordUi.getRecordWithFields=1-476" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2140;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getRecordWithFields&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;${c_recordId}&quot;,&quot;fields&quot;:[&quot;Apttus_Proposal__Proposal__c.APTPS_Quote_Type__c&quot;,&quot;Apttus_Proposal__Proposal__c.Previous_Quote_Status__c&quot;,&quot;Apttus_Proposal__Proposal__c.Proposal_Type__c&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Stage__c&quot;,&quot;Apttus_Proposal__Proposal__c.RecordType.Name&quot;],&quot;optionalFields&quot;:[&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Proposal_Name__c&quot;,&quot;Apttus_Proposal__Proposal__c.Channel__c&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__c&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__c&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Hub_ID__c&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Reference_ID__c&quot;,&quot;Apttus_Proposal__Proposal__c.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.SystemModstamp&quot;,&quot;Apttus_Proposal__Proposal__c.Total_amount_with_VAT__c&quot;,&quot;Apttus_Proposal__Proposal__c.Total_amount_without_VAT__c&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=43&amp;aura.RecordUi.getRecordWithFields=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">679840000007596958</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraCmpDef-479" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">AddressSearchPropButton,ClonewithLineItems_diffOpty,ConfigureProductsEqPropButton,DeactivateProposalLWCContainer,DealOverviewEqPropButton,DemoteToDraftLWCContainer,EmailContractualEqPropButton,EmailQuoteToOptyTeamEqPropButton,GenerateCFDPropButton,ImplementApprovedReqEqPropButton,InformOtrEqPropButton,MakePrimaryEqPropButton,SubmitForApprovalEqPropButton,TermsAndConditionsEqPropButton,UpdateOptyAdhocPropButton,ViewOrderChangeEqPropButton</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">LATEST-4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraCmpDef-481" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">ClonewithLineItems_SameOppty,GoToAgreementEqPropButton,quoteEquipmentDetailLayout</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">LATEST-5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraCmpDef-482" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">AddressSearchPropButton,ClonewithLineItems_diffOpty,ConfigureProductsEqPropButton,DeactivateProposalLWCContainer,DealOverviewEqPropButton,DemoteToDraftLWCContainer,EmailContractualEqPropButton,EmailQuoteToOptyTeamEqPropButton,GenerateCFDPropButton,ImplementApprovedReqEqPropButton,InformOtrEqPropButton,MakePrimaryEqPropButton,SubmitForApprovalEqPropButton,TermsAndConditionsEqPropButton,UpdateOptyAdhocPropButton,ViewOrderChangeEqPropButton</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">585139768</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=46&amp;aura.DynamicComponent.getTemplateDescriptorWithExpansionBundle=1-480" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2180;a&quot;,&quot;descriptor&quot;:&quot;aura://DynamicComponentController/ACTION$getTemplateDescriptorWithExpansionBundle&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;type&quot;:&quot;Bundle&quot;,&quot;templateReferences&quot;:[{&quot;type&quot;:&quot;AdgRollup&quot;,&quot;attributes&quot;:{&quot;targetModule&quot;:&quot;forceGenerated__action_RECORD_DETAIL___Apttus_Proposal__Proposal__c___Edit___EFFICIENT___EFFICIENT&quot;,&quot;adgModuleType&quot;:&quot;component&quot;}},{&quot;type&quot;:&quot;AdgRollup&quot;,&quot;attributes&quot;:{&quot;targetModule&quot;:&quot;forceGenerated__action_RECORD_DETAIL___Apttus_Proposal__Proposal__c___ChangeOwnerOne___${c_recordId}___1633062311000&quot;,&quot;adgModuleType&quot;:&quot;component&quot;}}]},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=46&amp;aura.DynamicComponent.getTemplateDescriptorWithExpansionBundle=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">685200000004c83665</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=48&amp;other.DealOverviewEqProp.getRecordDetails=1-485" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2214;a&quot;,&quot;descriptor&quot;:&quot;apex://DealOverviewEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:DealOverviewEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=48&amp;other.DealOverviewEqProp.getRecordDetails=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">71198000000c48f8c9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=49&amp;other.GenerateCFDProp.getRecordDetails=1-486" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2221;a&quot;,&quot;descriptor&quot;:&quot;apex://GenerateCFDPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:GenerateCFDPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=49&amp;other.GenerateCFDProp.getRecordDetails=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">71209000000de58d8b</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=47&amp;other.ConfigureProductsEqProp.getRecordDetails=1-484" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2207;a&quot;,&quot;descriptor&quot;:&quot;apex://ConfigureProductsEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:ConfigureProductsEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=47&amp;other.ConfigureProductsEqProp.getRecordDetails=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">711870000005b2d254</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=50&amp;other.UpdateOptyAdhocProp.getRecordDetails=1-487" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2229;a&quot;,&quot;descriptor&quot;:&quot;apex://UpdateOptyAdhocPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:UpdateOptyAdhocPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=50&amp;other.UpdateOptyAdhocProp.getRecordDetails=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">712310000006ccd0ec</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraCmpDef-483" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">ClonewithLineItems_SameOppty,GoToAgreementEqPropButton,quoteEquipmentDetailLayout</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">1103408715</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=51&amp;other.TermsAndConditionsEqProp.getRecordDetails=1-488" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2236;a&quot;,&quot;descriptor&quot;:&quot;apex://TermsAndConditionsEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:TermsAndConditionsEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=51&amp;other.TermsAndConditionsEqProp.getRecordDetails=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">712480000001a20726</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=53&amp;other.GoToAgreementEqProp.getRecordDetails=1-493" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2307;a&quot;,&quot;descriptor&quot;:&quot;apex://GoToAgreementEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:GoToAgreementEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=53&amp;other.GoToAgreementEqProp.getRecordDetails=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">7311600000009e7fef</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=55&amp;other.quoteDetailLayout.getQuoteDetailRecord=1-495" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2393;a&quot;,&quot;descriptor&quot;:&quot;apex://quoteDetailLayoutController/ACTION$getQuoteDetailRecord&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:quoteEquipmentDetailLayout&quot;,&quot;params&quot;:{&quot;quoteId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=55&amp;other.quoteDetailLayout.getQuoteDetailRecord=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">732740000003a4d947</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=52&amp;aura.ApexAction.execute=1&amp;aura.RecordUi.getRecordWithFields=2&amp;other.EmailContractualEqProp.getRecordDetails=1&amp;other.EmailQuoteToOptyTeamEqProp.getRecordDetails=1&amp;other.ImplementApprovedReqEqProp.getRecordDetails=1&amp;other.InformOtrEqProp.getRecordDetails=1&amp;other.MakePrimaryEqProp.getRecordDetails=1&amp;other.ViewOrderChangeEqProp.getRecordDetails=1-489" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2243;a&quot;,&quot;descriptor&quot;:&quot;apex://EmailQuoteToOptyTeamEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:EmailQuoteToOptyTeamEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;2250;a&quot;,&quot;descriptor&quot;:&quot;apex://EmailContractualEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:EmailContractualEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;2257;a&quot;,&quot;descriptor&quot;:&quot;apex://MakePrimaryEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:MakePrimaryEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;2265;a&quot;,&quot;descriptor&quot;:&quot;apex://ViewOrderChangeEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:ViewOrderChangeEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;2272;a&quot;,&quot;descriptor&quot;:&quot;apex://InformOtrEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:InformOtrEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;2279;a&quot;,&quot;descriptor&quot;:&quot;apex://ImplementApprovedReqEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:ImplementApprovedReqEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;2291;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getRecordWithFields&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;${c_recordId}&quot;,&quot;fields&quot;:[&quot;Apttus_Proposal__Proposal__c.APTPS_Quote_Type__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Description__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Opp_Global_Region__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Opp_Sub_Region__c&quot;,&quot;Apttus_Proposal__Proposal__c.Country__c&quot;,&quot;Apttus_Proposal__Proposal__c.Global_Region__c&quot;,&quot;Apttus_Proposal__Proposal__c.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__c&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Agreement_Status__c&quot;,&quot;Apttus_Proposal__Proposal__c.Proposal_Type__c&quot;,&quot;Apttus_Proposal__Proposal__c.QuoteType__c&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Stage__c&quot;,&quot;Apttus_Proposal__Proposal__c.RecordType.Id&quot;,&quot;Apttus_Proposal__Proposal__c.RecordType.Name&quot;],&quot;optionalFields&quot;:[&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Proposal_Name__c&quot;,&quot;Apttus_Proposal__Proposal__c.Channel__c&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Previous_Quote_Status__c&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__c&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.CreatedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.CurrencyIsoCode&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.LastModifiedById&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.LastModifiedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.SystemModstamp&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Apttus_QPComply__RelatedProposalId__c&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Apttus__FF_Agreement_Number__c&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.CreatedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.CurrencyIsoCode&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.LastModifiedById&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.LastModifiedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Quote_Configuraiton_Version__c&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.SystemModstamp&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Hub_ID__c&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Reference_ID__c&quot;,&quot;Apttus_Proposal__Proposal__c.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.SystemModstamp&quot;,&quot;Apttus_Proposal__Proposal__c.Total_amount_with_VAT__c&quot;,&quot;Apttus_Proposal__Proposal__c.Total_amount_without_VAT__c&quot;]}},{&quot;id&quot;:&quot;2292;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ChangePropStatusLWCController&quot;,&quot;method&quot;:&quot;getUserDetails&quot;,&quot;params&quot;:{&quot;recId&quot;:&quot;${c_clkRecordId}AAA&quot;},&quot;cacheable&quot;:true,&quot;isContinuation&quot;:false}},{&quot;id&quot;:&quot;2293;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getRecordWithFields&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;${c_recordId}&quot;,&quot;fields&quot;:[&quot;Apttus_Proposal__Proposal__c.APTPS_Deal_Approval_Status__c&quot;,&quot;Apttus_Proposal__Proposal__c.APTPS_Quote_Type__c&quot;,&quot;Apttus_Proposal__Proposal__c.Account_Credit_on_Hold__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Description__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Opp_Sub_Region__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Payment_Term__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__ReadyToGenerate__c&quot;,&quot;Apttus_Proposal__Proposal__c.Global_Region__c&quot;,&quot;Apttus_Proposal__Proposal__c.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Proposal_Type__c&quot;,&quot;Apttus_Proposal__Proposal__c.QuoteType__c&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Stage__c&quot;,&quot;Apttus_Proposal__Proposal__c.RecordType.Id&quot;,&quot;Apttus_Proposal__Proposal__c.RecordType.Name&quot;,&quot;Apttus_Proposal__Proposal__c.eOM_Order_Status__c&quot;],&quot;optionalFields&quot;:[&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Proposal_Name__c&quot;,&quot;Apttus_Proposal__Proposal__c.Channel__c&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Previous_Quote_Status__c&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__c&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.CreatedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.CurrencyIsoCode&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.LastModifiedById&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.LastModifiedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.SystemModstamp&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__c&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Agreement_Status__c&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Apttus_QPComply__RelatedProposalId__c&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Apttus__FF_Agreement_Number__c&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.CreatedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.CurrencyIsoCode&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.LastModifiedById&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.LastModifiedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Quote_Configuraiton_Version__c&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.SystemModstamp&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Hub_ID__c&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Reference_ID__c&quot;,&quot;Apttus_Proposal__Proposal__c.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.SystemModstamp&quot;,&quot;Apttus_Proposal__Proposal__c.Total_amount_with_VAT__c&quot;,&quot;Apttus_Proposal__Proposal__c.Total_amount_without_VAT__c&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=52&amp;aura.ApexAction.execute=1&amp;aura.RecordUi.getRecordWithFields=2&amp;other.EmailContractualEqProp.getRecordDetails=1&amp;other.EmailQuoteToOptyTeamEqProp.getRecordDetails=1&amp;other.ImplementApprovedReqEqProp.getRecordDetails=1&amp;other.InformOtrEqProp.getRecordDetails=1&amp;other.MakePrimaryEqProp.getRecordDetails=1&amp;other.ViewOrderChangeEqProp.getRecordDetails=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">714380000003efb24f</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=54&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1-494" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2315;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord&quot;,&quot;callingDescriptor&quot;:&quot;markup://force:record&quot;,&quot;params&quot;:{&quot;recordDescriptor&quot;:&quot;${c_recordId}.012a0000000AW7OAAW.FULL.null.null.null.EDIT.true.null.Id,RecordTypeId,Name,Quote_Hub_ID__c,Quote_Reference_ID__c,Apttus_Proposal__Proposal_Name__c,Apttus_Proposal__Opportunity__r;2Name,Apttus_Proposal__Account__r;2Name,Primary_Agreement__r;2Name,Quote_Stage__c,CreatedDate,Total_amount_without_VAT__c.null&quot;},&quot;version&quot;:&quot;43.0&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=54&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">7317000000009feaca</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/QuoteEmbedded-498" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Id</stringProp>
                  <stringProp name="Argument.value">${c_recordId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1633063192254</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/QuoteEmbedded</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraCmpDef-499" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_def" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_def</stringProp>
                  <stringProp name="Argument.value">markup://lightning:iconSvgTemplatesStandard</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">LATEST-6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=56&amp;aura.RecordUi.getRecordUis=1-496" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2407;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getRecordUis&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordIds&quot;:[&quot;${c_recordId}&quot;],&quot;layoutTypes&quot;:[&quot;Full&quot;],&quot;modes&quot;:[&quot;Edit&quot;],&quot;optionalFields&quot;:[&quot;Apttus_Proposal__Proposal__c.APTPS_Quote_Type__c&quot;,&quot;Apttus_Proposal__Proposal__c.Ancestor__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Description__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Primary__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_QPConfig__BillToAccountId__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_QPConfig__ShipToAccountId__c&quot;,&quot;Apttus_Proposal__Proposal__c.Bill_To_Precise_Address__c&quot;,&quot;Apttus_Proposal__Proposal__c.Channel__c&quot;,&quot;Apttus_Proposal__Proposal__c.Country__c&quot;,&quot;Apttus_Proposal__Proposal__c.Covid19_Optout__c&quot;,&quot;Apttus_Proposal__Proposal__c.Customer_Primary_Address__c&quot;,&quot;Apttus_Proposal__Proposal__c.Parent_Opportunity__c&quot;,&quot;Apttus_Proposal__Proposal__c.Parent__c&quot;,&quot;Apttus_Proposal__Proposal__c.Partner_Name__c&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__c&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Stage__c&quot;,&quot;Apttus_Proposal__Proposal__c.Ship_To_Precise_Address__c&quot;,&quot;Apttus_Proposal__Proposal__c.Total_VAT_Amount__c&quot;,&quot;Apttus_Proposal__Proposal__c.Total_amount_with_VAT__c&quot;,&quot;Apttus_Proposal__Proposal__c.Total_amount_without_VAT__c&quot;,&quot;Apttus_Proposal__Proposal__c.VAT__c&quot;,&quot;Apttus_Proposal__Proposal__c.eOM_Order_Number__c&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=56&amp;aura.RecordUi.getRecordUis=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">73477000000e73815c</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/QuoteEmbedded-500" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Id</stringProp>
                  <stringProp name="Argument.value">${c_recordId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1633063192254</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/QuoteEmbedded</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=58&amp;aura.RecordUi.getPicklistValuesByRecordType=1-503" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2458;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getPicklistValuesByRecordType&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;objectApiName&quot;:&quot;Apttus_Proposal__Proposal__c&quot;,&quot;recordTypeId&quot;:&quot;012a0000000AW7OAAW&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=58&amp;aura.RecordUi.getPicklistValuesByRecordType=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">76794000000c838121</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=57&amp;ui-global-components-one-navigation.GlobalNavDropdown.getAllTabs=1-502" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1866;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.navigation.GlobalNavDropdownController/ACTION$getAllTabs&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=57&amp;ui-global-components-one-navigation.GlobalNavDropdown.getAllTabs=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">76669000000c4ddfb8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1699665745">&quot;title&quot;:&quot;Configurations&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Transaction - GE_CloneToSameOpp_06_SearchQuoteNumber
API Name  - /aura?r=57&amp;ui-global-components-one-navigation.GlobalNavDropdown.getAllTabs=1-502
AssertionNotFound</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cs192/auraCmpDef-501" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">${c_au}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-1698929346</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_def" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_def</stringProp>
                  <stringProp name="Argument.value">markup://lightning:iconSvgTemplatesStandard</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">cM0xVAgNO0gmpfVwmHUx2g</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName8}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cs192/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/QuoteEmbedded-504" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1633063192254</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Id</stringProp>
                  <stringProp name="Argument.value">${c_recordId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/QuoteEmbedded</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/visualforce/session-506" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName4}/apex/QuoteEmbedded?t=1633063192254&amp;Id=${c_recordId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/visualforce/session</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=61&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getFlexipageInfo=1-508" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2487;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getFlexipageInfo&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;flexipageOverrides&quot;:{&quot;Apttus_Config2__ProductConfiguration__c&quot;:[&quot;Product_Configuration_Record_Page&quot;],&quot;Apttus_Proposal__Proposal__c&quot;:[&quot;Global_Quote_Proposal&quot;,&quot;Global_Quote_Proposal&quot;,&quot;Global_Quote_Proposal&quot;,&quot;Global_Quote_Proposal&quot;,&quot;Equipment_Quote_Layout&quot;,&quot;Global_Quote_Proposal&quot;,&quot;Global_Quote_Proposal&quot;,&quot;Global_Quote_Proposal&quot;,&quot;ODS_Quote_Layout&quot;,&quot;Equipment_Quote_Layout&quot;,&quot;Global_Quote_Proposal&quot;,&quot;Global_Quote_Proposal&quot;,&quot;Global_Quote_Proposal&quot;,&quot;Global_Quote_Proposal&quot;,&quot;Global_Quote_Proposal&quot;],&quot;Account&quot;:[&quot;USCAN_Account&quot;,&quot;USCAN_Account&quot;,&quot;USCAN_Account&quot;,&quot;USCAN_Account&quot;,&quot;USCAN_Account&quot;],&quot;Taskray_DCR__c&quot;:[&quot;Design_Center_Request_Record_Page&quot;],&quot;IB_Asset__c&quot;:[&quot;Global_IB_Asset&quot;,&quot;Global_IB_Asset&quot;,&quot;USCAN_IB_Asset&quot;,&quot;USCAN_IB_Asset&quot;],&quot;Apttus__APTS_Agreement__c&quot;:[&quot;Global_Agreements&quot;,&quot;Global_Agreements&quot;,&quot;Equipment_Agreement&quot;,&quot;Equipment_Agreement&quot;,&quot;Global_Agreements&quot;,&quot;Global_Agreements&quot;,&quot;Global_Agreements&quot;,&quot;Global_Agreements&quot;,&quot;Global_Agreements&quot;,&quot;Global_Agreements&quot;,&quot;Global_Agreements&quot;,&quot;Global_Agreements&quot;,&quot;Global_Agreements&quot;,&quot;Global_Agreements&quot;,&quot;Agreement_Record_Page&quot;,&quot;Agreement_Record_Page&quot;],&quot;VisitOps__Visit__c&quot;:[&quot;VisitOps__Visit_Detail_Lightning&quot;],&quot;Opportunity&quot;:[&quot;USCAN_Opportunity&quot;,&quot;USCAN_Opportunity&quot;,&quot;USCAN_Opportunity&quot;,&quot;Opportunity_Orders_to_Go&quot;,&quot;USCAN_Opportunity&quot;,&quot;USCAN_Term_Opportunity&quot;,&quot;Opportunity_Record_Page1&quot;],&quot;Lead&quot;:[&quot;Global_Lead&quot;,&quot;Global_Lead&quot;,&quot;Global_Lead&quot;,&quot;Global_Lead&quot;,&quot;Global_Lead&quot;],&quot;Apttus_Config2__PriceListItem__c&quot;:[&quot;Price_List_Item_Record_Page1&quot;],&quot;ELTON__Equipment__c&quot;:[&quot;Equipment_Record_Page1&quot;],&quot;Parent_Opportunity__c&quot;:[&quot;Global_Parent_Opportunities_Projects1&quot;,&quot;Global_Parent_Opportunities_Projects1&quot;,&quot;Global_Parent_Opportunities_Projects1&quot;,&quot;Global_Parent_Opportunities_Projects1&quot;,&quot;Global_Parent_Opportunities_Projects1&quot;,&quot;Global_Parent_Opportunities_Projects1&quot;],&quot;TASKRAY__Project_Task__c&quot;:[&quot;TaskRay_Task_Record_Page1&quot;,&quot;TaskRay_Task_Record_Page1&quot;],&quot;Installation__c&quot;:[&quot;Global_Installations_all_record_types&quot;,&quot;Global_Installations_all_record_types&quot;,&quot;Global_Installations_all_record_types&quot;,&quot;Global_Installations_all_record_types&quot;,&quot;Global_Installations_all_record_types&quot;,&quot;Global_Installations_all_record_types&quot;,&quot;Global_Installations_all_record_types&quot;],&quot;Apttus__APTS_Template__c&quot;:[&quot;Template_Page&quot;],&quot;Case&quot;:[&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;,&quot;Global_Cases_CSO&quot;],&quot;Contract_Line_Item__c&quot;:[&quot;Global_Contract_Line_Item1&quot;,&quot;Global_Contract_Line_Item1&quot;],&quot;VisitOps__Location_Product_Link__c&quot;:[&quot;VisitOps__Location_Product_Link_Record_Page&quot;],&quot;SCORE_Policy_6_0__c&quot;:[&quot;SCORE_Policy_6_0&quot;],&quot;TaskRay_CustomerContact__c&quot;:[&quot;Customer_Contact_Record_Page&quot;],&quot;IB_Product__c&quot;:[&quot;Global_IB_Products&quot;,&quot;Global_IB_Products&quot;],&quot;ELTON__Equipment_Order__c&quot;:[&quot;Global_Demo_Request&quot;,&quot;Global_Demo_Request&quot;,&quot;Global_Demo_Request&quot;,&quot;Global_Demo_Request&quot;,&quot;Global_Demo_Request&quot;,&quot;Global_Demo_Request&quot;,&quot;Global_Demo_Request&quot;],&quot;CommEx_Support__c&quot;:[&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;,&quot;Global_COMMEX_IT_SUPPORT_CASES&quot;],&quot;ELTON__Equipment_Type__c&quot;:[&quot;Equipment_Type_Record_Page1&quot;],&quot;taskray_Customer_Event__c&quot;:[&quot;Customer_Event_Record_Page&quot;],&quot;Community_template__c&quot;:[&quot;Community_Template_Record_Page&quot;],&quot;TASKRAY__Project__c&quot;:[&quot;TaskRay_Project_Record_Page1&quot;,&quot;Taskray_project_Record_Page_LCS&quot;,&quot;TaskRay_Project_Record_Page1&quot;,&quot;TaskRay_Project_Record_Page2&quot;],&quot;Account_Prioritization__c&quot;:[&quot;Global_Account_Prioritization&quot;,&quot;Global_Account_Prioritization&quot;],&quot;ELTON__Equipment_Order_Line__c&quot;:[&quot;Demo_Request_items_Record_Page&quot;],&quot;taskRay_resource_request__c&quot;:[&quot;Resource_Request_Record_Page&quot;],&quot;Contract__c&quot;:[&quot;Global_Contract1&quot;,&quot;Global_Contract1&quot;,&quot;Global_Contract1&quot;],&quot;ELTON__Equipment_Loan__c&quot;:[&quot;Equipment_Loan_Record_Page&quot;],&quot;LiveChatTranscript&quot;:[&quot;AKA_Live_Agent_Chat_Transcript&quot;],&quot;Contact&quot;:[&quot;Global_Contact2_0&quot;,&quot;Global_Contact2_0&quot;,&quot;Global_Contact2_0&quot;]}},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=61&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getFlexipageInfo=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">800080000004a4b3ee</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=59&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1-505" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2465;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.instrumentation.components.beacon.InstrumentationBeaconController/ACTION$sendData&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;batch&quot;:[{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:61983,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;forceSearch:assistantDialog\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-click\&quot;,\&quot;attributes\&quot;:{\&quot;searchDialogSessionId\&quot;:\&quot;6957ff6c-3e28-6f0d-b647-fa0d25ae0943\&quot;,\&quot;iteration\&quot;:2,\&quot;instantResultListImpressionId\&quot;:\&quot;6957ff6c-3e28-6f0d-b647-fa0d25ae0943_2\&quot;,\&quot;searchId\&quot;:null,\&quot;resultsContainerId\&quot;:null,\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;tableEnumOrId\&quot;:\&quot;Quote/Proposal\&quot;,\&quot;queryId\&quot;:null,\&quot;resultType\&quot;:\&quot;MRU\&quot;,\&quot;parentServiceRequestId\&quot;:null,\&quot;position\&quot;:1,\&quot;filtersList\&quot;:[],\&quot;sourceCmp\&quot;:\&quot;forceSearch:assistantDialog\&quot;,\&quot;time\&quot;:1633063179522,\&quot;queryLength\&quot;:10,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-suggestion-item\&quot;,\&quot;scope\&quot;:\&quot;search-assistant-desktop\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:11,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;home:landing\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/page/home\&quot;,\&quot;panel\&quot;:{\&quot;type\&quot;:\&quot;panel\&quot;,\&quot;devNameOrId\&quot;:\&quot;markup://forceSearch:groupContainer\&quot;}}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:61996,\&quot;duration\&quot;:32441,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;navex:standardManager\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;pageTracker\&quot;,\&quot;attributes\&quot;:{\&quot;pageId\&quot;:1,\&quot;phase\&quot;:\&quot;END\&quot;,\&quot;defaultCmp\&quot;:[\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;runtime_sales_activities:todayTaskContainer\&quot;,\&quot;flexipage:recentItems\&quot;,\&quot;flexipage:richText\&quot;,\&quot;flexipage:richText\&quot;,\&quot;home:recentRecordContainer\&quot;,\&quot;home:topDealsContainer\&quot;,\&quot;flexipage:richText\&quot;,\&quot;home:assistant\&quot;,\&quot;flexipage:richText\&quot;],\&quot;nonDefaultCmp\&quot;:[],\&quot;backgroundTime\&quot;:0,\&quot;trxDeleted\&quot;:{},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:61997,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;navex:standardManager\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;defsUsage\&quot;,\&quot;attributes\&quot;:{\&quot;defs\&quot;:[\&quot;markup://one:onboardingManager\&quot;,\&quot;markup://one:onboardingManagerLibPrivate\&quot;,\&quot;markup://one:targetLib\&quot;,\&quot;markup://one:defaultOnboardingManagerService\&quot;,\&quot;markup://one:inAppGuidanceRecordTypeInfo\&quot;,\&quot;markup://one:unsupportedContainer\&quot;,\&quot;markup://one:unsupportedDetectorIpad\&quot;,\&quot;markup://one:unsupportedDetectorUiWebView\&quot;,\&quot;markup://search_lightning:assistantSuggestionItemPlaceholder\&quot;,\&quot;markup://search_lightning:assistantDialogHelpPanel\&quot;,\&quot;markup://ui:menuItem\&quot;,\&quot;markup://ui:actionMenuItem\&quot;,\&quot;markup://one:globalCreateItem\&quot;,\&quot;markup://one:lexOnboardingManagerService\&quot;,\&quot;markup://one:lexOnboardingManagerServiceLwc\&quot;,\&quot;markup://one:onePreloads\&quot;,\&quot;markup://ui:panel\&quot;],\&quot;pageCounter\&quot;:1,\&quot;phase\&quot;:\&quot;navFromPage\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;defsUsage\&quot;,\&quot;scope\&quot;:\&quot;defsUsage\&quot;},\&quot;sequence\&quot;:12,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;home:landing\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/page/home\&quot;,\&quot;panel\&quot;:{\&quot;type\&quot;:\&quot;panel\&quot;,\&quot;devNameOrId\&quot;:\&quot;markup://forceSearch:groupContainer\&quot;}}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:61997,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;navex:standardManager\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;bandwidthUsage\&quot;,\&quot;attributes\&quot;:{\&quot;txTotalSize\&quot;:483540,\&quot;txInstrSize\&quot;:320886,\&quot;txTotalCount\&quot;:14,\&quot;txInstrCount\&quot;:2,\&quot;rxTotalSize\&quot;:302176,\&quot;rxInstrSize\&quot;:2031,\&quot;rxTotalCount\&quot;:13,\&quot;rxInstrCount\&quot;:1,\&quot;pageId\&quot;:1,\&quot;url\&quot;:\&quot;/lightning/page/home\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:62260,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;forceSearch:assistantSecondaryPanel\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-hover\&quot;,\&quot;attributes\&quot;:{\&quot;searchDialogSessionId\&quot;:\&quot;6957ff6c-3e28-6f0d-b647-fa0d25ae0943\&quot;,\&quot;iteration\&quot;:2,\&quot;instantResultListImpressionId\&quot;:\&quot;6957ff6c-3e28-6f0d-b647-fa0d25ae0943_2\&quot;,\&quot;searchId\&quot;:null,\&quot;resultsContainerId\&quot;:null,\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;tableEnumOrId\&quot;:\&quot;Quote/Proposal\&quot;,\&quot;queryId\&quot;:null,\&quot;resultType\&quot;:\&quot;MRU\&quot;,\&quot;parentServiceRequestId\&quot;:null,\&quot;position\&quot;:1,\&quot;sourceCmp\&quot;:\&quot;forceSearch:assistantSecondaryPanel\&quot;,\&quot;time\&quot;:1633063179798,\&quot;queryLength\&quot;:10,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;home:landing\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-dialog-suggestion-preview\&quot;,\&quot;scope\&quot;:\&quot;search-assistant-desktop\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:13,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;home:landing\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/page/home\&quot;,\&quot;panel\&quot;:{\&quot;type\&quot;:\&quot;panel\&quot;,\&quot;devNameOrId\&quot;:\&quot;markup://forceSearch:groupContainer\&quot;}}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:62224,\&quot;duration\&quot;:144,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{\&quot;custom\&quot;:[],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:30,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;forceSearch:recordPreview\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:30}]}]},\&quot;owner\&quot;:\&quot;forceSearch:assistantSecondaryPanel\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;loadClientLibrary\&quot;,\&quot;attributes\&quot;:{\&quot;library\&quot;:\&quot;eclairng\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:62396,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;force:relatedListQuickLinksContainer\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;RLQL-load-initial\&quot;,\&quot;attributes\&quot;:{\&quot;parentKeyPrefix\&quot;:\&quot;a6R\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;component\&quot;,\&quot;scope\&quot;:\&quot;related-list-quicklinkcontainer\&quot;,\&quot;context\&quot;:{\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;}},\&quot;sequence\&quot;:14,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;home:landing\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/page/home\&quot;,\&quot;panel\&quot;:{\&quot;type\&quot;:\&quot;panel\&quot;,\&quot;devNameOrId\&quot;:\&quot;markup://forceSearch:groupContainer\&quot;}}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:63541,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;laf:platformPageResolver\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;recordType\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;recordTypeSetInClient\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;},\&quot;sequence\&quot;:15,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;home:landing\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/page/home\&quot;,\&quot;panel\&quot;:{\&quot;type\&quot;:\&quot;panel\&quot;,\&quot;devNameOrId\&quot;:\&quot;markup://forceSearch:groupContainer\&quot;}}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:62220,\&quot;duration\&quot;:1340,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{\&quot;custom\&quot;:[],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:58,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;forceSearch:assistantRecordPreview\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:3},{\&quot;name\&quot;:\&quot;forceSearch:recordPreview\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:30},{\&quot;name\&quot;:\&quot;forceSearch:recordPreviewActions\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:8},{\&quot;name\&quot;:\&quot;forceSearch:recordPreviewRelatedList\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:17}]}],\&quot;lds\&quot;:[{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;runtime-perf\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:63560,\&quot;context\&quot;:{\&quot;storeIngest\&quot;:0,\&quot;storeBroadcast\&quot;:0}}]},\&quot;owner\&quot;:\&quot;forceSearch:assistantDialog\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-assistantDialogRecordPreview\&quot;,\&quot;attributes\&quot;:{\&quot;scope\&quot;:\&quot;search-assistant-desktop\&quot;,\&quot;target\&quot;:\&quot;search-suggestion-item\&quot;,\&quot;clickSource\&quot;:\&quot;recordPreview\&quot;,\&quot;position\&quot;:1,\&quot;resultType\&quot;:\&quot;MRU\&quot;,\&quot;searchDialogSessionId\&quot;:\&quot;6957ff6c-3e28-6f0d-b647-fa0d25ae0943\&quot;,\&quot;iteration\&quot;:2,\&quot;instantResultListImpressionId\&quot;:\&quot;6957ff6c-3e28-6f0d-b647-fa0d25ae0943_2\&quot;,\&quot;searchId\&quot;:null,\&quot;resultsContainerId\&quot;:null,\&quot;time\&quot;:1633063179759,\&quot;queryLength\&quot;:10,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;},\&quot;lpSummary\&quot;:{\&quot;total-time\&quot;:1339,\&quot;client-time\&quot;:0,\&quot;server-time\&quot;:0,\&quot;network-time\&quot;:0},\&quot;lpOffsets\&quot;:{\&quot;recordPreview-loaded\&quot;:0,\&quot;listItemHighlighted\&quot;:0},\&quot;lpStatus\&quot;:\&quot;aborted\&quot;,\&quot;lpAbortReason\&quot;:\&quot;MANUAL_ABORT\&quot;,\&quot;lpStartedTime\&quot;:1633063179759,\&quot;lpTimeline\&quot;:[{\&quot;label\&quot;:\&quot;listItemHighlighted\&quot;,\&quot;starting_time\&quot;:0,\&quot;ending_time\&quot;:0,\&quot;duration\&quot;:0,\&quot;type\&quot;:\&quot;client\&quot;},{\&quot;label\&quot;:\&quot;recordPreview-loaded\&quot;,\&quot;starting_time\&quot;:0,\&quot;ending_time\&quot;:null,\&quot;duration\&quot;:null,\&quot;type\&quot;:\&quot;client\&quot;}],\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:64015,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;force:relatedListQuickLinksContainer\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;RLQL-load-additional\&quot;,\&quot;attributes\&quot;:{\&quot;initialSize\&quot;:0,\&quot;totalSize\&quot;:11,\&quot;relatedListKeyPrefixes\&quot;:[\&quot;a7w\&quot;,\&quot;a5k\&quot;,\&quot;a6a\&quot;,\&quot;a6P\&quot;,\&quot;aKg\&quot;,\&quot;aYR\&quot;,\&quot;a6R\&quot;,\&quot;a8X\&quot;,\&quot;017\&quot;],\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;component\&quot;,\&quot;scope\&quot;:\&quot;related-list-quicklinkcontainer\&quot;},\&quot;sequence\&quot;:16,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;${c_recordId}\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:64018,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;force:relatedListQuickLinksContainer\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;RLQL-load-additional\&quot;,\&quot;attributes\&quot;:{\&quot;initialSize\&quot;:13,\&quot;totalSize\&quot;:11,\&quot;relatedListKeyPrefixes\&quot;:[\&quot;a7w\&quot;,\&quot;a5k\&quot;,\&quot;a6a\&quot;,\&quot;a6P\&quot;,\&quot;aKg\&quot;,\&quot;aYR\&quot;,\&quot;a6R\&quot;,\&quot;a8X\&quot;,\&quot;017\&quot;],\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;component\&quot;,\&quot;scope\&quot;:\&quot;related-list-quicklinkcontainer\&quot;},\&quot;sequence\&quot;:17,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;${c_recordId}\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:62257,\&quot;duration\&quot;:1894,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;singlePaneWindowManager:contentSelected\&quot;,\&quot;ts\&quot;:63587,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:singlePaneWindowManager\&quot;,\&quot;duration\&quot;:13},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;pageHost:loadContent\&quot;,\&quot;ts\&quot;:63611,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:pageHost\&quot;,\&quot;duration\&quot;:21},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;relatedList:relatedListInfosSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:64009,\&quot;context\&quot;:{\&quot;numRelatedLists\&quot;:11,\&quot;type\&quot;:\&quot;Singles\&quot;},\&quot;owner\&quot;:\&quot;force:relatedListContainerMetadataProvider\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;relatedListQuickLinksContainerLinks\&quot;,\&quot;ts\&quot;:62396,\&quot;context\&quot;:{\&quot;initialSize\&quot;:13,\&quot;totalSize\&quot;:11},\&quot;owner\&quot;:\&quot;force:relatedListQuickLinksContainer\&quot;,\&quot;duration\&quot;:1627}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:62397,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:32,\&quot;requestLength\&quot;:1134,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;1858;a\&quot;],\&quot;requestId\&quot;:\&quot;62397000000ebbd099\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:11657,\&quot;xhrDuration\&quot;:1608,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:62397,\&quot;fetchStart\&quot;:62397,\&quot;requestStart\&quot;:62400,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:3,\&quot;transfer\&quot;:1605,\&quot;transferSize\&quot;:12235,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:299,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:1611},{\&quot;ts\&quot;:62258,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:31,\&quot;requestLength\&quot;:1162,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;1839;a\&quot;],\&quot;requestId\&quot;:\&quot;62258000000d0153a2\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:3557,\&quot;xhrDuration\&quot;:1820,\&quot;xhrStall\&quot;:2,\&quot;startTime\&quot;:62258,\&quot;fetchStart\&quot;:62258,\&quot;requestStart\&quot;:62260,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:2,\&quot;transfer\&quot;:1818,\&quot;transferSize\&quot;:4135,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:356,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:1823}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:62396,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1858;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:relatedListContainerMetadataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.relatedList.RelatedListContainerController/ACTION$getRelatedListInfos\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:185,\&quot;db\&quot;:16,\&quot;xhrServerTime\&quot;:298,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:6,\&quot;duration\&quot;:1619}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:116,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;forceSearch:recordPreviewActions\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:8},{\&quot;name\&quot;:\&quot;forceSearch:recordPreviewRelatedList\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:17},{\&quot;name\&quot;:\&quot;laf:pageHost\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:12},{\&quot;name\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:17},{\&quot;name\&quot;:\&quot;forceSearch:recordPreviewFields\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:61}]}],\&quot;lds\&quot;:[{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;runtime-perf\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:64151,\&quot;context\&quot;:{\&quot;storeIngest\&quot;:0,\&quot;storeBroadcast\&quot;:0,\&quot;storeLookup\&quot;:3}}]},\&quot;owner\&quot;:\&quot;forceSearch:recordPreview\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-recordPreview\&quot;,\&quot;attributes\&quot;:{\&quot;taskTimes\&quot;:[\&quot;RU.getRecordInfo():49\&quot;,\&quot;RPS.getLayout:128\&quot;,\&quot;RPS.getFieldsForQuery:0\&quot;,\&quot;RPS.loadRecord:58\&quot;],\&quot;summaryTimes\&quot;:[\&quot;ARPDPC.getRecordPreview:236\&quot;],\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;},\&quot;lpSummary\&quot;:{\&quot;total-time\&quot;:1893,\&quot;client-time\&quot;:1893,\&quot;server-time\&quot;:0,\&quot;network-time\&quot;:0},\&quot;lpOffsets\&quot;:{\&quot;RENDER\&quot;:0},\&quot;lpStatus\&quot;:\&quot;ok\&quot;,\&quot;lpStartedTime\&quot;:1633063179796,\&quot;lpTimeline\&quot;:[{\&quot;label\&quot;:\&quot;RENDER\&quot;,\&quot;starting_time\&quot;:0,\&quot;ending_time\&quot;:1893,\&quot;duration\&quot;:1893,\&quot;type\&quot;:\&quot;client\&quot;}],\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:67329,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;recordType\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;,\&quot;context\&quot;:null},\&quot;sequence\&quot;:18,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;${c_recordId}\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:68335,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;force:recordCollection\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;reads\&quot;,\&quot;attributes\&quot;:{\&quot;recordIds\&quot;:[\&quot;a5k7d0000011KIIAA2\&quot;],\&quot;recordType\&quot;:\&quot;Apttus__APTS_Agreement__c\&quot;,\&quot;recordTypeSetInClient\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;reads\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;},\&quot;sequence\&quot;:19,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;${c_recordId}\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:68342,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;force:recordCollection\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;reads\&quot;,\&quot;attributes\&quot;:{\&quot;recordIds\&quot;:[\&quot;0177d0000E4OWuKAQW\&quot;,\&quot;0177d0000E4OWuLAQW\&quot;,\&quot;0177d0000E4OWuMAQW\&quot;,\&quot;0177d0000E4CgrQAQS\&quot;,\&quot;0177d0000E4CgrRAQS\&quot;,\&quot;0177d0000E4Ce7OAQS\&quot;,\&quot;0177d0000E4Ce7UAQS\&quot;,\&quot;0177d0000E4Ce7VAQS\&quot;,\&quot;0177d0000E4Ce7WAQS\&quot;,\&quot;0177d0000E4Ce7XAQS\&quot;],\&quot;recordType\&quot;:\&quot;Apttus_Proposal__Proposal__History\&quot;,\&quot;recordTypeSetInClient\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;reads\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;},\&quot;sequence\&quot;:20,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;${c_recordId}\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:68346,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;force:recordCollection\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;reads\&quot;,\&quot;attributes\&quot;:{\&quot;recordIds\&quot;:[\&quot;a7w7d000000LCEHAA4\&quot;],\&quot;recordType\&quot;:\&quot;Apttus_Config2__ProductConfiguration__c\&quot;,\&quot;recordTypeSetInClient\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;reads\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;},\&quot;sequence\&quot;:21,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;${c_recordId}\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:68350,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;force:recordCollection\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;reads\&quot;,\&quot;attributes\&quot;:{\&quot;recordIds\&quot;:[\&quot;a6P7d000001QD5AEAW\&quot;,\&quot;a6P7d000001QD5BEAW\&quot;,\&quot;a6P7d000001QD5CEAW\&quot;,\&quot;a6P7d000001QD5DEAW\&quot;],\&quot;recordType\&quot;:\&quot;Apttus_Proposal__Proposal_Line_Item__c\&quot;,\&quot;recordTypeSetInClient\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;reads\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;},\&quot;sequence\&quot;:22,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;${c_recordId}\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:69614,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;recordType\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;,\&quot;context\&quot;:null},\&quot;sequence\&quot;:23,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;${c_recordId}\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:69658,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;recordType\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;,\&quot;context\&quot;:null},\&quot;sequence\&quot;:24,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;${c_recordId}\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:74827,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;recordType\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;,\&quot;context\&quot;:null},\&quot;sequence\&quot;:25,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;${c_recordId}\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:74827,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;recordType\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;,\&quot;context\&quot;:null},\&quot;sequence\&quot;:26,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;${c_recordId}\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:78633,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;one:appNavContainer\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-click\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;global-nav-temporary-tab-created-automatically\&quot;,\&quot;scope\&quot;:\&quot;one-app-nav-container\&quot;,\&quot;context\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appNavType\&quot;:\&quot;Standard\&quot;,\&quot;appUiType\&quot;:\&quot;Lightning\&quot;,\&quot;tabId\&quot;:\&quot;(temp)\&quot;,\&quot;tabContentType\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;tabIsCustom\&quot;:true,\&quot;tabIsGranular\&quot;:true}},\&quot;sequence\&quot;:27,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;${c_recordId}\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:61982,\&quot;duration\&quot;:16983,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;scenarioTime\&quot;,\&quot;attributes\&quot;:{\&quot;target\&quot;:\&quot;search-suggestion-item\&quot;,\&quot;scope\&quot;:\&quot;search-assistant-desktop\&quot;,\&quot;pageContext\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;pageUrl\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;,\&quot;entityType\&quot;:\&quot;unknown\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false,\&quot;scenarioTrackerMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:78970,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;bandwidthUsage\&quot;,\&quot;attributes\&quot;:{\&quot;txTotalSize\&quot;:55817,\&quot;txInstrSize\&quot;:0,\&quot;txTotalCount\&quot;:29,\&quot;txInstrCount\&quot;:0,\&quot;rxTotalSize\&quot;:3261884,\&quot;rxInstrSize\&quot;:2031,\&quot;rxTotalCount\&quot;:30,\&quot;rxInstrCount\&quot;:1,\&quot;pageId\&quot;:2,\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:78970,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;componentTracker\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;default\&quot;,\&quot;scope\&quot;:\&quot;component\&quot;,\&quot;context\&quot;:{\&quot;devNameOrId\&quot;:[\&quot;force:highlightsPanel\&quot;,\&quot;c:quotechevronlexnew\&quot;,\&quot;flexipage:tabset\&quot;,\&quot;flexipage:tabset\&quot;,\&quot;c:ConfigureProductsEqPropButton\&quot;,\&quot;c:DealOverviewEqPropButton\&quot;,\&quot;c:GenerateCFDPropButton\&quot;,\&quot;c:DemoteToDraftLWCContainer\&quot;,\&quot;c:UpdateOptyAdhocPropButton\&quot;,\&quot;c:TermsAndConditionsEqPropButton\&quot;,\&quot;c:EmailQuoteToOptyTeamEqPropButton\&quot;,\&quot;c:EmailContractualEqPropButton\&quot;,\&quot;c:MakePrimaryEqPropButton\&quot;,\&quot;c:DeactivateProposalLWCContainer\&quot;,\&quot;c:ViewOrderChangeEqPropButton\&quot;,\&quot;c:InformOtrEqPropButton\&quot;,\&quot;c:ImplementApprovedReqEqPropButton\&quot;,\&quot;c:ClonewithLineItems_diffOpty\&quot;,\&quot;c:AddressSearchPropButton\&quot;,\&quot;c:SubmitForApprovalEqPropButton\&quot;,\&quot;c:GoToAgreementEqPropButton\&quot;,\&quot;c:ClonewithLineItems_SameOppty\&quot;,\&quot;c:quoteEquipmentDetailLayout\&quot;]}},\&quot;sequence\&quot;:28,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;${c_recordId}\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPageView&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:pageView\&quot;,\&quot;ts\&quot;:61998,\&quot;duration\&quot;:16972,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;appNavContainer:getAllTabs\&quot;,\&quot;ts\&quot;:63549,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;one:appNavContainer\&quot;,\&quot;duration\&quot;:15054},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;singlePaneWindowManager:contentSelected\&quot;,\&quot;ts\&quot;:63587,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:singlePaneWindowManager\&quot;,\&quot;duration\&quot;:13},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;pageHost:loadContent\&quot;,\&quot;ts\&quot;:63611,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:pageHost\&quot;,\&quot;duration\&quot;:21},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;relatedList:relatedListInfosSize\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:64009,\&quot;context\&quot;:{\&quot;numRelatedLists\&quot;:11,\&quot;type\&quot;:\&quot;Singles\&quot;},\&quot;owner\&quot;:\&quot;force:relatedListContainerMetadataProvider\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;relatedListQuickLinksContainerLinks\&quot;,\&quot;ts\&quot;:62396,\&quot;context\&quot;:{\&quot;initialSize\&quot;:13,\&quot;totalSize\&quot;:11},\&quot;owner\&quot;:\&quot;force:relatedListQuickLinksContainer\&quot;,\&quot;duration\&quot;:1627},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;actions:CHATTER-SINGLE_ACTION_LINKS\&quot;,\&quot;ts\&quot;:62376,\&quot;context\&quot;:{\&quot;context\&quot;:\&quot;CHATTER\&quot;,\&quot;section\&quot;:\&quot;SINGLE_ACTION_LINKS\&quot;,\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;inContextOfComponent\&quot;:\&quot;bestResult\&quot;,\&quot;actionsNumber\&quot;:1,\&quot;standardActions\&quot;:[\&quot;Follow\&quot;],\&quot;quickActions\&quot;:[],\&quot;customButtons\&quot;:[],\&quot;otherActions\&quot;:[],\&quot;enableActionsConfiguration\&quot;:false,\&quot;StandardButton\&quot;:1},\&quot;owner\&quot;:\&quot;force:actionsContainer\&quot;,\&quot;duration\&quot;:4003},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;actions:RECORD-PAGE\&quot;,\&quot;ts\&quot;:62378,\&quot;context\&quot;:{\&quot;context\&quot;:\&quot;RECORD\&quot;,\&quot;section\&quot;:\&quot;PAGE\&quot;,\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;inContextOfComponent\&quot;:\&quot;bestResult\&quot;,\&quot;actionsNumber\&quot;:6,\&quot;standardActions\&quot;:[\&quot;Edit\&quot;,\&quot;ChangeOwnerOne\&quot;],\&quot;quickActions\&quot;:[\&quot;Apttus_Proposal__Proposal__c.Sharing_new_US8196\&quot;,\&quot;Apttus_Proposal__Proposal__c.ATP_Lookup\&quot;,\&quot;Apttus_Proposal__Proposal__c.Delete_Lightning\&quot;],\&quot;customButtons\&quot;:[\&quot;Quote_Hub_Page\&quot;],\&quot;otherActions\&quot;:[],\&quot;enableActionsConfiguration\&quot;:false,\&quot;StandardButton\&quot;:2,\&quot;QuickAction\&quot;:3,\&quot;CustomButton\&quot;:1,\&quot;LightningComponent\&quot;:3,\&quot;L\&quot;:1},\&quot;owner\&quot;:\&quot;force:actionsContainer\&quot;,\&quot;duration\&quot;:4018},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;relatedListQuickLinksContainer\&quot;,\&quot;ts\&quot;:62396,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;force:relatedListQuickLinksContainer\&quot;,\&quot;duration\&quot;:5936},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;relatedList:getRecords.64020\&quot;,\&quot;ts\&quot;:64020,\&quot;context\&quot;:{\&quot;relatedListApiNames\&quot;:[\&quot;Apttus_QPConfig__Configurations__r\&quot;,\&quot;Apttus_QPComply__Agreements__r\&quot;,\&quot;Apttus_QPApprov__ApprovalRequests__r\&quot;,\&quot;Apttus_Proposal__R00N70000001yUfBEAU__r\&quot;,\&quot;Quote_Contact_Roles__r\&quot;,\&quot;Covid_Exceptions__r\&quot;,\&quot;Proposals__r\&quot;,\&quot;AttachedContentNotes\&quot;,\&quot;CombinedAttachments\&quot;,\&quot;Apttus_QPConfig__QuoteFootnotes__r\&quot;,\&quot;Histories\&quot;],\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;},\&quot;owner\&quot;:\&quot;force:relatedListQuickLinksContainerDataProvider\&quot;,\&quot;duration\&quot;:4334},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;actions:CHATTER-SINGLE_ACTION_LINKS-Apttus_Proposal__Proposal__c\&quot;,\&quot;ts\&quot;:68148,\&quot;context\&quot;:{\&quot;context\&quot;:\&quot;CHATTER\&quot;,\&quot;section\&quot;:\&quot;SINGLE_ACTION_LINKS\&quot;,\&quot;entityApiName\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;inContextOfComponent\&quot;:\&quot;highlightsStencilDesktop\&quot;,\&quot;actionsNumber\&quot;:1,\&quot;standardActions\&quot;:[\&quot;Follow\&quot;],\&quot;quickActions\&quot;:[],\&quot;customButtons\&quot;:[],\&quot;otherActions\&quot;:[],\&quot;enableActionsConfiguration\&quot;:false,\&quot;StandardButton\&quot;:1},\&quot;owner\&quot;:\&quot;force:actionsContainer\&quot;,\&quot;duration\&quot;:1439},{\&quot;ns\&quot;:\&quot;flexipageInfo\&quot;,\&quot;name\&quot;:\&quot;info\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:68008,\&quot;context\&quot;:{\&quot;flexipageName\&quot;:\&quot;0M00c000000CbKZCA0\&quot;,\&quot;flexipageType\&quot;:\&quot;RecordPage\&quot;,\&quot;isCustom\&quot;:true,\&quot;isCustomTemplate\&quot;:false,\&quot;templateName\&quot;:\&quot;flexipage:recordHomeWithSubheaderTemplateDesktop2\&quot;,\&quot;parentFlexipage\&quot;:\&quot;null\&quot;,\&quot;flexipageRenderer\&quot;:\&quot;LWC\&quot;,\&quot;numberOfFieldInstances\&quot;:0,\&quot;numberOfInteractions\&quot;:0,\&quot;Mode\&quot;:\&quot;View\&quot;,\&quot;uiRequestId\&quot;:\&quot;PkHdvZmTwVVJ\&quot;}},{\&quot;ns\&quot;:\&quot;formula\&quot;,\&quot;name\&quot;:\&quot;evaluate\&quot;,\&quot;ts\&quot;:69627,\&quot;context\&quot;:{\&quot;technology\&quot;:\&quot;LWC\&quot;,\&quot;formulaSize\&quot;:466,\&quot;feature\&quot;:\&quot;EXPRESSIONS\&quot;},\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;formula\&quot;,\&quot;name\&quot;:\&quot;evaluate\&quot;,\&quot;ts\&quot;:69627,\&quot;context\&quot;:{\&quot;technology\&quot;:\&quot;LWC\&quot;,\&quot;formulaSize\&quot;:302,\&quot;feature\&quot;:\&quot;EXPRESSIONS\&quot;},\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;formula\&quot;,\&quot;name\&quot;:\&quot;evaluate\&quot;,\&quot;ts\&quot;:69627,\&quot;context\&quot;:{\&quot;technology\&quot;:\&quot;LWC\&quot;,\&quot;formulaSize\&quot;:164,\&quot;feature\&quot;:\&quot;EXPRESSIONS\&quot;},\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;formula\&quot;,\&quot;name\&quot;:\&quot;evaluate\&quot;,\&quot;ts\&quot;:69627,\&quot;context\&quot;:{\&quot;technology\&quot;:\&quot;LWC\&quot;,\&quot;formulaSize\&quot;:182,\&quot;feature\&quot;:\&quot;EXPRESSIONS\&quot;},\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;formula\&quot;,\&quot;name\&quot;:\&quot;evaluate\&quot;,\&quot;ts\&quot;:69628,\&quot;context\&quot;:{\&quot;technology\&quot;:\&quot;LWC\&quot;,\&quot;formulaSize\&quot;:182,\&quot;feature\&quot;:\&quot;EXPRESSIONS\&quot;},\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;formula\&quot;,\&quot;name\&quot;:\&quot;evaluate\&quot;,\&quot;ts\&quot;:69628,\&quot;context\&quot;:{\&quot;technology\&quot;:\&quot;LWC\&quot;,\&quot;formulaSize\&quot;:164,\&quot;feature\&quot;:\&quot;EXPRESSIONS\&quot;},\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-resolution-start\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:65632,\&quot;context\&quot;:{\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;objectApiName\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;mode\&quot;:\&quot;View\&quot;,\&quot;layoutType\&quot;:\&quot;Compact\&quot;,\&quot;dynamicComponentType\&quot;:\&quot;HighlightsPanel\&quot;}},{\&quot;ns\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-resolution-start\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:67960,\&quot;context\&quot;:{\&quot;objectApiName\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;recordTypeId\&quot;:\&quot;012a0000000AW7OAAW\&quot;}},{\&quot;ns\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-resolution-start\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:68083,\&quot;context\&quot;:{\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;objectApiName\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;layoutType\&quot;:\&quot;Compact\&quot;,\&quot;mode\&quot;:\&quot;View\&quot;,\&quot;dynamicComponentType\&quot;:\&quot;HighlightsPanel\&quot;}},{\&quot;ns\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-resolution-start\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:71444,\&quot;context\&quot;:\&quot;RECORD_DETAIL\&quot;},{\&quot;ns\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-resolution-start\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:71445,\&quot;context\&quot;:\&quot;RECORD_DETAIL\&quot;},{\&quot;ns\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-resolution-end\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:71445,\&quot;context\&quot;:null},{\&quot;ns\&quot;:\&quot;actions_lwc\&quot;,\&quot;name\&quot;:\&quot;actions_container\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:68155,\&quot;context\&quot;:{\&quot;container\&quot;:\&quot;actions_in_highlights\&quot;,\&quot;standardActions\&quot;:[],\&quot;quickActions\&quot;:[],\&quot;customButtons\&quot;:[],\&quot;otherActions\&quot;:[],\&quot;actionCount\&quot;:0}},{\&quot;ns\&quot;:\&quot;actions_lwc\&quot;,\&quot;name\&quot;:\&quot;actions_container\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:68520,\&quot;context\&quot;:{\&quot;container\&quot;:\&quot;actions_in_highlights\&quot;,\&quot;context\&quot;:\&quot;Record\&quot;,\&quot;sourceObject\&quot;:\&quot;${c_recordId}\&quot;,\&quot;relatedSourceObject\&quot;:null,\&quot;relatedListRecordId\&quot;:null,\&quot;standardActions\&quot;:[\&quot;Edit\&quot;,\&quot;ChangeOwnerOne\&quot;],\&quot;quickActions\&quot;:[\&quot;Apttus_Proposal__Proposal__c.Sharing_new_US8196\&quot;,\&quot;Apttus_Proposal__Proposal__c.ATP_Lookup\&quot;,\&quot;Apttus_Proposal__Proposal__c.Delete_Lightning\&quot;],\&quot;customButtons\&quot;:[\&quot;Quote_Hub_Page\&quot;],\&quot;otherActions\&quot;:[],\&quot;actionCount\&quot;:6}},{\&quot;ns\&quot;:\&quot;actions_lwc\&quot;,\&quot;name\&quot;:\&quot;actions_rendering\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:71446,\&quot;context\&quot;:{\&quot;context\&quot;:\&quot;Record\&quot;,\&quot;sourceObject\&quot;:\&quot;${c_recordId}\&quot;,\&quot;relatedSourceObject\&quot;:null,\&quot;relatedListRecordId\&quot;:null,\&quot;actionFetchingTime\&quot;:394,\&quot;templateFetchingTime\&quot;:2924,\&quot;numClientSideRenderedActions\&quot;:4,\&quot;numServerSideRenderedActions\&quot;:2}}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:62002,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:30,\&quot;requestLength\&quot;:1466,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;1742;a\&quot;,\&quot;1810;a\&quot;],\&quot;requestId\&quot;:\&quot;6200200000040b943b\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:2496,\&quot;xhrDuration\&quot;:1537,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:62002,\&quot;fetchStart\&quot;:62002,\&quot;requestStart\&quot;:62005,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:2,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:1533,\&quot;transferSize\&quot;:3074,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:136,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:1538},{\&quot;ts\&quot;:62397,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:32,\&quot;requestLength\&quot;:1134,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;1858;a\&quot;],\&quot;requestId\&quot;:\&quot;62397000000ebbd099\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:11657,\&quot;xhrDuration\&quot;:1608,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:62397,\&quot;fetchStart\&quot;:62397,\&quot;requestStart\&quot;:62400,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:3,\&quot;transfer\&quot;:1605,\&quot;transferSize\&quot;:12235,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:299,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:1611},{\&quot;ts\&quot;:62258,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:31,\&quot;requestLength\&quot;:1162,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;1839;a\&quot;],\&quot;requestId\&quot;:\&quot;62258000000d0153a2\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:3557,\&quot;xhrDuration\&quot;:1820,\&quot;xhrStall\&quot;:2,\&quot;startTime\&quot;:62258,\&quot;fetchStart\&quot;:62258,\&quot;requestStart\&quot;:62260,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:2,\&quot;transfer\&quot;:1818,\&quot;transferSize\&quot;:4135,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:356,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:1823},{\&quot;ts\&quot;:62398,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:33,\&quot;requestLength\&quot;:1871,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;1847;a\&quot;],\&quot;requestId\&quot;:\&quot;623980000004a6fb9b\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:17796,\&quot;xhrDuration\&quot;:1900,\&quot;xhrStall\&quot;:8,\&quot;startTime\&quot;:62398,\&quot;fetchStart\&quot;:62398,\&quot;requestStart\&quot;:62406,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:8,\&quot;transfer\&quot;:1892,\&quot;transferSize\&quot;:18374,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:632,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:1901},{\&quot;ts\&quot;:64303,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:9,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:677,\&quot;startTime\&quot;:64303,\&quot;fetchStart\&quot;:64303,\&quot;serverTime\&quot;:10,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:64307,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:6916,\&quot;encodedBodySize\&quot;:6086,\&quot;decodedBodySize\&quot;:6086,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:5,\&quot;transfer\&quot;:672,\&quot;defs\&quot;:[\&quot;markup://force:recordData\&quot;,\&quot;markup://ui:spinner\&quot;,\&quot;markup://ui:toggleLoadingIndicator\&quot;],\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:680},{\&quot;ts\&quot;:63673,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:35,\&quot;requestLength\&quot;:1145,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;1963;a\&quot;],\&quot;requestId\&quot;:\&quot;636730000009b8b1a9\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:7655,\&quot;xhrDuration\&quot;:1369,\&quot;xhrStall\&quot;:5,\&quot;startTime\&quot;:63673,\&quot;fetchStart\&quot;:63673,\&quot;requestStart\&quot;:63678,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:9,\&quot;transfer\&quot;:1360,\&quot;transferSize\&quot;:8233,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:228,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:1370},{\&quot;ts\&quot;:63668,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:34,\&quot;requestLength\&quot;:1071,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;1962;a\&quot;],\&quot;requestId\&quot;:\&quot;6366800000030e7ecb\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:534985,\&quot;xhrDuration\&quot;:1749,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:63669,\&quot;fetchStart\&quot;:63669,\&quot;requestStart\&quot;:63673,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:1745,\&quot;transferSize\&quot;:535621,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:106,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:1752},{\&quot;ts\&quot;:64016,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:37,\&quot;requestLength\&quot;:1362,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;1965;a\&quot;],\&quot;requestId\&quot;:\&quot;640160000006218d62\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:34439,\&quot;xhrDuration\&quot;:1585,\&quot;xhrStall\&quot;:64,\&quot;startTime\&quot;:64017,\&quot;fetchStart\&quot;:64017,\&quot;requestStart\&quot;:64081,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:65,\&quot;transfer\&quot;:1520,\&quot;transferSize\&quot;:35017,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:202,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1587},{\&quot;ts\&quot;:64154,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:38,\&quot;requestLength\&quot;:1459,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2079;a\&quot;],\&quot;requestId\&quot;:\&quot;641540000009a6049a\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:5501,\&quot;xhrDuration\&quot;:1734,\&quot;xhrStall\&quot;:143,\&quot;startTime\&quot;:64156,\&quot;fetchStart\&quot;:64156,\&quot;requestStart\&quot;:64299,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:144,\&quot;transfer\&quot;:1590,\&quot;transferSize\&quot;:6079,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:228,\&quot;xhrDelay\&quot;:4},\&quot;duration\&quot;:1738},{\&quot;ts\&quot;:64303,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:8,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:2072,\&quot;startTime\&quot;:64303,\&quot;fetchStart\&quot;:64303,\&quot;serverTime\&quot;:52,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:65043,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:34036,\&quot;encodedBodySize\&quot;:33453,\&quot;decodedBodySize\&quot;:33453,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:740,\&quot;transfer\&quot;:1332,\&quot;defs\&quot;:[\&quot;markup://c:CustomLightningSharingAction\&quot;,\&quot;markup://c:Delete_Component\&quot;,\&quot;markup://c:OnHandInventory\&quot;,\&quot;markup://c:atpLightningDatatable\&quot;,\&quot;markup://c:atpLightningDatatableBGColor\&quot;,\&quot;markup://c:ohHandPartsAPI\&quot;],\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:2074},{\&quot;ts\&quot;:63677,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:36,\&quot;requestLength\&quot;:1362,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;1964;a\&quot;],\&quot;requestId\&quot;:\&quot;636770000005a61efb\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:221211,\&quot;xhrDuration\&quot;:2716,\&quot;xhrStall\&quot;:331,\&quot;startTime\&quot;:63678,\&quot;fetchStart\&quot;:63678,\&quot;requestStart\&quot;:64009,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:331,\&quot;transfer\&quot;:2385,\&quot;transferSize\&quot;:221790,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:1053,\&quot;xhrDelay\&quot;:60},\&quot;duration\&quot;:2776},{\&quot;ts\&quot;:66462,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:11,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:698,\&quot;startTime\&quot;:66462,\&quot;fetchStart\&quot;:66462,\&quot;serverTime\&quot;:12,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:66469,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:39384,\&quot;encodedBodySize\&quot;:38553,\&quot;decodedBodySize\&quot;:38553,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:7,\&quot;transfer\&quot;:691,\&quot;defs\&quot;:[\&quot;markup://flexipage:recordHomeWithSubheaderTemplateDesktop2\&quot;,\&quot;markup://formula:formulaEngine\&quot;,\&quot;markup://formula:formulaMetrics\&quot;,\&quot;markup://interop:accordion\&quot;,\&quot;markup://interop:accordionSection\&quot;,\&quot;markup://interop:card\&quot;,\&quot;markup://interop:layout\&quot;,\&quot;markup://interop:layoutItem\&quot;,\&quot;markup://lightning:accordionUtilsPrivate\&quot;],\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:701},{\&quot;ts\&quot;:65638,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:40,\&quot;requestLength\&quot;:1882,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2084;a\&quot;],\&quot;requestId\&quot;:\&quot;65638000000ddfb19f\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:3563,\&quot;xhrDuration\&quot;:1688,\&quot;xhrStall\&quot;:254,\&quot;startTime\&quot;:65638,\&quot;fetchStart\&quot;:65638,\&quot;requestStart\&quot;:65892,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:255,\&quot;transfer\&quot;:1433,\&quot;transferSize\&quot;:4141,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:156,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1690},{\&quot;ts\&quot;:66461,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:10,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:1352,\&quot;startTime\&quot;:66461,\&quot;fetchStart\&quot;:66461,\&quot;serverTime\&quot;:156,\&quot;redirect\&quot;:0,\&quot;requestStart\&quot;:66466,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:140334,\&quot;encodedBodySize\&quot;:139750,\&quot;decodedBodySize\&quot;:139750,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:5,\&quot;transfer\&quot;:1347,\&quot;defs\&quot;:[\&quot;markup://c:occrCreateConfigLCSLWC\&quot;,\&quot;markup://c:quotechevronlexnew\&quot;],\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:1355},{\&quot;ts\&quot;:65044,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:39,\&quot;requestLength\&quot;:1626,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;1987;a\&quot;],\&quot;requestId\&quot;:\&quot;6504400000070502c4\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:39353,\&quot;xhrDuration\&quot;:3257,\&quot;xhrStall\&quot;:376,\&quot;startTime\&quot;:65044,\&quot;fetchStart\&quot;:65044,\&quot;requestStart\&quot;:65420,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:377,\&quot;transfer\&quot;:2880,\&quot;transferSize\&quot;:39932,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:1713,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:3258},{\&quot;ts\&quot;:65641,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:41,\&quot;requestLength\&quot;:1101,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2085;a\&quot;],\&quot;requestId\&quot;:\&quot;656410000006de0f78\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:6419,\&quot;xhrDuration\&quot;:2862,\&quot;xhrStall\&quot;:735,\&quot;startTime\&quot;:65641,\&quot;fetchStart\&quot;:65641,\&quot;requestStart\&quot;:66376,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:736,\&quot;transfer\&quot;:2126,\&quot;transferSize\&quot;:6997,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:852,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:2864},{\&quot;ts\&quot;:68151,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:45,\&quot;requestLength\&quot;:1066,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2149;a\&quot;],\&quot;requestId\&quot;:\&quot;68151000000249842f\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1572,\&quot;xhrDuration\&quot;:1410,\&quot;xhrStall\&quot;:151,\&quot;startTime\&quot;:68152,\&quot;fetchStart\&quot;:68152,\&quot;requestStart\&quot;:68303,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:152,\&quot;transfer\&quot;:1258,\&quot;transferSize\&quot;:2149,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:73,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1412},{\&quot;ts\&quot;:68149,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:44,\&quot;requestLength\&quot;:3319,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;2147;a\&quot;],\&quot;requestId\&quot;:\&quot;681490000001a8b942\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:5173,\&quot;xhrDuration\&quot;:1434,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:68149,\&quot;fetchStart\&quot;:68149,\&quot;requestStart\&quot;:68152,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:1430,\&quot;transferSize\&quot;:5751,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:105,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1436},{\&quot;ts\&quot;:67980,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:42,\&quot;requestLength\&quot;:2557,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2139;a\&quot;],\&quot;requestId\&quot;:\&quot;6798000000047f931d\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:5961,\&quot;xhrDuration\&quot;:1610,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:67981,\&quot;fetchStart\&quot;:67981,\&quot;requestStart\&quot;:67984,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:3,\&quot;transfer\&quot;:1607,\&quot;transferSize\&quot;:6539,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:222,\&quot;xhrDelay\&quot;:22},\&quot;duration\&quot;:1632},{\&quot;ts\&quot;:67984,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:43,\&quot;requestLength\&quot;:2751,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2140;a\&quot;],\&quot;requestId\&quot;:\&quot;679840000007596958\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:6146,\&quot;xhrDuration\&quot;:1663,\&quot;xhrStall\&quot;:5,\&quot;startTime\&quot;:67984,\&quot;fetchStart\&quot;:67984,\&quot;requestStart\&quot;:67989,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:5,\&quot;transfer\&quot;:1658,\&quot;transferSize\&quot;:6724,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:237,\&quot;xhrDelay\&quot;:10},\&quot;duration\&quot;:1673},{\&quot;ts\&quot;:68216,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:12,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:2954,\&quot;startTime\&quot;:68216,\&quot;fetchStart\&quot;:69756,\&quot;serverTime\&quot;:115,\&quot;redirect\&quot;:1540,\&quot;requestStart\&quot;:69759,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:188883,\&quot;encodedBodySize\&quot;:188299,\&quot;decodedBodySize\&quot;:188299,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:1544,\&quot;transfer\&quot;:1410,\&quot;defs\&quot;:[\&quot;markup://c:AddressSearchPropButton\&quot;,\&quot;markup://c:ClonewithLineItems_diffOpty\&quot;,\&quot;markup://c:ConfigureProductsEqPropButton\&quot;,\&quot;markup://c:DeactivateProposalLWCContainer\&quot;,\&quot;markup://c:DealOverviewEqPropButton\&quot;,\&quot;markup://c:DemoteToDraftLWCContainer\&quot;,\&quot;markup://c:EmailContractualEqPropButton\&quot;,\&quot;markup://c:EmailQuoteToOptyTeamEqPropButton\&quot;,\&quot;markup://c:GenerateCFDPropButton\&quot;],\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:2957},{\&quot;ts\&quot;:68520,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:46,\&quot;requestLength\&quot;:1615,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2180;a\&quot;],\&quot;requestId\&quot;:\&quot;685200000004c83665\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:14675,\&quot;xhrDuration\&quot;:2802,\&quot;xhrStall\&quot;:1042,\&quot;startTime\&quot;:68521,\&quot;fetchStart\&quot;:68521,\&quot;requestStart\&quot;:69563,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:1043,\&quot;transfer\&quot;:1759,\&quot;transferSize\&quot;:15253,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:382,\&quot;xhrDelay\&quot;:114},\&quot;duration\&quot;:2916},{\&quot;ts\&quot;:71199,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:48,\&quot;requestLength\&quot;:1125,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2214;a\&quot;],\&quot;requestId\&quot;:\&quot;71198000000c48f8c9\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1234,\&quot;xhrDuration\&quot;:1217,\&quot;xhrStall\&quot;:5,\&quot;startTime\&quot;:71199,\&quot;fetchStart\&quot;:71199,\&quot;requestStart\&quot;:71204,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:16,\&quot;transfer\&quot;:1201,\&quot;transferSize\&quot;:1811,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:76,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1219},{\&quot;ts\&quot;:71209,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:49,\&quot;requestLength\&quot;:1119,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2221;a\&quot;],\&quot;requestId\&quot;:\&quot;71209000000de58d8b\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1221,\&quot;xhrDuration\&quot;:1465,\&quot;xhrStall\&quot;:11,\&quot;startTime\&quot;:71210,\&quot;fetchStart\&quot;:71210,\&quot;requestStart\&quot;:71221,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:32,\&quot;transfer\&quot;:1433,\&quot;transferSize\&quot;:1799,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:132,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:1468},{\&quot;ts\&quot;:71187,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:47,\&quot;requestLength\&quot;:1135,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2207;a\&quot;],\&quot;requestId\&quot;:\&quot;711870000005b2d254\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1165,\&quot;xhrDuration\&quot;:1488,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:71188,\&quot;fetchStart\&quot;:71188,\&quot;requestStart\&quot;:71191,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:7,\&quot;transfer\&quot;:1481,\&quot;transferSize\&quot;:1743,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:240,\&quot;xhrDelay\&quot;:37},\&quot;duration\&quot;:1525},{\&quot;ts\&quot;:71231,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:50,\&quot;requestLength\&quot;:1127,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2229;a\&quot;],\&quot;requestId\&quot;:\&quot;712310000006ccd0ec\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1257,\&quot;xhrDuration\&quot;:1527,\&quot;xhrStall\&quot;:93,\&quot;startTime\&quot;:71232,\&quot;fetchStart\&quot;:71232,\&quot;requestStart\&quot;:71325,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:94,\&quot;transfer\&quot;:1433,\&quot;transferSize\&quot;:1835,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:128,\&quot;xhrDelay\&quot;:11},\&quot;duration\&quot;:1538},{\&quot;ts\&quot;:69653,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:13,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:3440,\&quot;startTime\&quot;:69654,\&quot;fetchStart\&quot;:70868,\&quot;serverTime\&quot;:127,\&quot;redirect\&quot;:1214,\&quot;requestStart\&quot;:70872,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:532708,\&quot;encodedBodySize\&quot;:532124,\&quot;decodedBodySize\&quot;:532124,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:1218,\&quot;transfer\&quot;:2222,\&quot;defs\&quot;:[\&quot;markup://c:ClonewithLineItems_SameOppty\&quot;,\&quot;markup://c:GoToAgreementEqPropButton\&quot;,\&quot;markup://c:quoteEquipmentDetailLayout\&quot;],\&quot;xhrDelay\&quot;:13},\&quot;duration\&quot;:3453},{\&quot;ts\&quot;:71248,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:51,\&quot;requestLength\&quot;:1137,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2236;a\&quot;],\&quot;requestId\&quot;:\&quot;712480000001a20726\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1184,\&quot;xhrDuration\&quot;:2566,\&quot;xhrStall\&quot;:1170,\&quot;startTime\&quot;:71249,\&quot;fetchStart\&quot;:71249,\&quot;requestStart\&quot;:72419,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:1171,\&quot;transfer\&quot;:1395,\&quot;transferSize\&quot;:1761,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:90,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:2569},{\&quot;ts\&quot;:73117,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:53,\&quot;requestLength\&quot;:1127,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2307;a\&quot;],\&quot;requestId\&quot;:\&quot;7311600000009e7fef\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1178,\&quot;xhrDuration\&quot;:1419,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:73117,\&quot;fetchStart\&quot;:73117,\&quot;requestStart\&quot;:73121,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:5,\&quot;transfer\&quot;:1414,\&quot;transferSize\&quot;:1755,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:70,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1421},{\&quot;ts\&quot;:73274,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:55,\&quot;requestLength\&quot;:1132,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2393;a\&quot;],\&quot;requestId\&quot;:\&quot;732740000003a4d947\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:4351,\&quot;xhrDuration\&quot;:1401,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:73275,\&quot;fetchStart\&quot;:73275,\&quot;requestStart\&quot;:73279,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:5,\&quot;transfer\&quot;:1396,\&quot;transferSize\&quot;:4929,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:253,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:1404},{\&quot;ts\&quot;:71438,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:52,\&quot;requestLength\&quot;:10253,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2243;a\&quot;,\&quot;2250;a\&quot;,\&quot;2257;a\&quot;,\&quot;2265;a\&quot;,\&quot;2272;a\&quot;,\&quot;2279;a\&quot;,\&quot;2291;a\&quot;,\&quot;2292;a\&quot;,\&quot;2293;a\&quot;],\&quot;requestId\&quot;:\&quot;714380000003efb24f\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:15549,\&quot;xhrDuration\&quot;:3322,\&quot;xhrStall\&quot;:1239,\&quot;startTime\&quot;:71439,\&quot;fetchStart\&quot;:71439,\&quot;requestStart\&quot;:72678,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:1246,\&quot;transfer\&quot;:2076,\&quot;transferSize\&quot;:16127,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:565,\&quot;xhrDelay\&quot;:51},\&quot;duration\&quot;:3373},{\&quot;ts\&quot;:73170,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:54,\&quot;requestLength\&quot;:1516,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2315;a\&quot;],\&quot;requestId\&quot;:\&quot;7317000000009feaca\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:14140,\&quot;xhrDuration\&quot;:1873,\&quot;xhrStall\&quot;:5,\&quot;startTime\&quot;:73170,\&quot;fetchStart\&quot;:73170,\&quot;requestStart\&quot;:73175,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:6,\&quot;transfer\&quot;:1867,\&quot;transferSize\&quot;:14718,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:407,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1875},{\&quot;ts\&quot;:73477,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:56,\&quot;requestLength\&quot;:2577,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2407;a\&quot;],\&quot;requestId\&quot;:\&quot;73477000000e73815c\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1902021,\&quot;xhrDuration\&quot;:3160,\&quot;xhrStall\&quot;:340,\&quot;startTime\&quot;:73478,\&quot;fetchStart\&quot;:73478,\&quot;requestStart\&quot;:73818,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:341,\&quot;transfer\&quot;:2819,\&quot;transferSize\&quot;:1903042,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:764,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:3161},{\&quot;ts\&quot;:76794,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:58,\&quot;requestLength\&quot;:1135,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2458;a\&quot;],\&quot;requestId\&quot;:\&quot;76794000000c838121\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:180712,\&quot;xhrDuration\&quot;:1683,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:76794,\&quot;fetchStart\&quot;:76794,\&quot;requestStart\&quot;:76798,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:1679,\&quot;transferSize\&quot;:182150,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:199,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:1684},{\&quot;ts\&quot;:76669,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:57,\&quot;requestLength\&quot;:1093,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;1866;a\&quot;],\&quot;requestId\&quot;:\&quot;76669000000c4ddfb8\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:198306,\&quot;xhrDuration\&quot;:1929,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:76669,\&quot;fetchStart\&quot;:76669,\&quot;requestStart\&quot;:76672,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:3,\&quot;transfer\&quot;:1926,\&quot;transferSize\&quot;:198884,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:327,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:1930},{\&quot;ts\&quot;:74808,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:14,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;duration\&quot;:4076,\&quot;startTime\&quot;:74808,\&quot;fetchStart\&quot;:76363,\&quot;serverTime\&quot;:30,\&quot;redirect\&quot;:1555,\&quot;requestStart\&quot;:76366,\&quot;incompleteTimings\&quot;:false,\&quot;transferSize\&quot;:507294,\&quot;encodedBodySize\&quot;:506455,\&quot;decodedBodySize\&quot;:506455,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:1558,\&quot;transfer\&quot;:2518,\&quot;defs\&quot;:[\&quot;markup://lightning:iconSvgTemplatesStandard\&quot;],\&quot;xhrDelay\&quot;:6},\&quot;duration\&quot;:4082}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:62002,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1742;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:14,\&quot;db\&quot;:4,\&quot;xhrServerTime\&quot;:136,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1541},{\&quot;ts\&quot;:62002,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1810;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordGlobalValueProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:79,\&quot;db\&quot;:14,\&quot;xhrServerTime\&quot;:136,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1541},{\&quot;ts\&quot;:62396,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1858;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:relatedListContainerMetadataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.relatedList.RelatedListContainerController/ACTION$getRelatedListInfos\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:185,\&quot;db\&quot;:16,\&quot;xhrServerTime\&quot;:298,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:6,\&quot;duration\&quot;:1619},{\&quot;ts\&quot;:62257,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1839;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;forceSearch:assistantRecordPreview\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.assistantRecordPreview.AssistantRecordPreviewDataProviderController/ACTION$getRecordPreviewData\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:235,\&quot;db\&quot;:25,\&quot;xhrServerTime\&quot;:356,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:73,\&quot;duration\&quot;:1897},{\&quot;ts\&quot;:62377,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1847;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;one:actionsManager\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.actionsManager.ActionsManagerController/ACTION$handleAction\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:20,\&quot;serverTime\&quot;:{\&quot;total\&quot;:577,\&quot;db\&quot;:100,\&quot;xhrServerTime\&quot;:631,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1924},{\&quot;ts\&quot;:63671,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1963;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://RelatedListUiController/ACTION$getRelatedListInfoCollection\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:2,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:183,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:228,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1372},{\&quot;ts\&quot;:63668,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1962;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://RecordUiController/ACTION$getObjectInfo\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:52,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:106,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1761},{\&quot;ts\&quot;:63681,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1965;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://DynamicComponentController/ACTION$getTemplateDescriptorWithExpansionBundle\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;params\&quot;:{\&quot;type\&quot;:\&quot;Bundle\&quot;,\&quot;templateReferences\&quot;:\&quot;[{\\\&quot;type\\\&quot;:\\\&quot;AdgRollup\\\&quot;,\\\&quot;attributes\\\&quot;:{\\\&quot;targetModule\\\&quot;:\\\&quot;forceGenerated__highlightsPanel_Apttus_Proposal__Proposal__c___012a0000000AW7OAAW___Compact___View\\\&quot;,\\\&quot;adgModuleType\\\&quot;:\\\&quot;component\\\&quot;}}]\&quot;},\&quot;xhrWait\&quot;:333,\&quot;enqueueWait\&quot;:2,\&quot;serverTime\&quot;:{\&quot;total\&quot;:154,\&quot;db\&quot;:4,\&quot;xhrServerTime\&quot;:201,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1923},{\&quot;ts\&quot;:64153,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2079;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordGlobalValueProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:173,\&quot;db\&quot;:29,\&quot;xhrServerTime\&quot;:227,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1745},{\&quot;ts\&quot;:63677,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1964;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://DynamicComponentController/ACTION$getTemplateDescriptorWithExpansionBundle\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;params\&quot;:{\&quot;type\&quot;:\&quot;Bundle\&quot;,\&quot;templateReferences\&quot;:\&quot;[{\\\&quot;type\\\&quot;:\\\&quot;AdgRollup\\\&quot;,\\\&quot;attributes\\\&quot;:{\\\&quot;targetModule\\\&quot;:\\\&quot;forceGenerated__flexipage_RecordPage___Equipment_Quote_Layout___Apttus_Proposal__Proposal__c___VIEW\\\&quot;,\\\&quot;adgModuleType\\\&quot;:\\\&quot;template\\\&quot;}}]\&quot;},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:974,\&quot;db\&quot;:145,\&quot;xhrServerTime\&quot;:1052,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2779},{\&quot;ts\&quot;:65638,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2084;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://RecordUiController/ACTION$getRecordWithFields\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:109,\&quot;db\&quot;:19,\&quot;xhrServerTime\&quot;:156,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1690},{\&quot;ts\&quot;:64020,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1987;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;force:relatedListQuickLinksContainerDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.relatedList.RelatedListContainerDataProviderController/ACTION$getRecords\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:973,\&quot;enqueueWait\&quot;:51,\&quot;serverTime\&quot;:{\&quot;total\&quot;:1664,\&quot;db\&quot;:202,\&quot;xhrServerTime\&quot;:1712,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:31,\&quot;duration\&quot;:4334},{\&quot;ts\&quot;:65641,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2085;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ActionsController/ACTION$getRecordActions\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:800,\&quot;db\&quot;:189,\&quot;xhrServerTime\&quot;:852,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2865},{\&quot;ts\&quot;:68151,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2149;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://RecordUiController/ACTION$getRecordAvatars\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:28,\&quot;db\&quot;:9,\&quot;xhrServerTime\&quot;:73,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1413},{\&quot;ts\&quot;:68148,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2147;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;one:actionsManager\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.actionsManager.ActionsManagerController/ACTION$handleAction\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:59,\&quot;db\&quot;:22,\&quot;xhrServerTime\&quot;:105,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1437},{\&quot;ts\&quot;:67980,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2139;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://RecordUiController/ACTION$getRecordWithFields\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:177,\&quot;db\&quot;:30,\&quot;xhrServerTime\&quot;:222,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1634},{\&quot;ts\&quot;:67984,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2140;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://RecordUiController/ACTION$getRecordWithFields\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:188,\&quot;db\&quot;:28,\&quot;xhrServerTime\&quot;:237,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1673},{\&quot;ts\&quot;:68520,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2180;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://DynamicComponentController/ACTION$getTemplateDescriptorWithExpansionBundle\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;params\&quot;:{\&quot;type\&quot;:\&quot;Bundle\&quot;,\&quot;templateReferences\&quot;:\&quot;[{\\\&quot;type\\\&quot;:\\\&quot;AdgRollup\\\&quot;,\\\&quot;attributes\\\&quot;:{\\\&quot;targetModule\\\&quot;:\\\&quot;forceGenerated__action_RECORD_DETAIL___Apttus_Proposal__Proposal__c___Edit___EFFICIENT___EFFICIENT\\\&quot;,\\\&quot;adgModuleType\\\&quot;:\\\&quot;component\\\&quot;}},{\\\&quot;type\\\&quot;:\\\&quot;AdgRollup\\\&quot;,\\\&quot;attributes\\\&quot;:{\\\&quot;targetModule\\\&quot;:\\\&quot;forceGenerated__action_RECORD_DETAIL___Apttus_Proposal__Proposal__c___ChangeOwnerOne___${c_recordId}___1633062311000\\\&quot;,\\\&quot;adgModuleType\\\&quot;:\\\&quot;component\\\&quot;}}]\&quot;},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:340,\&quot;db\&quot;:30,\&quot;xhrServerTime\&quot;:382,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:2917},{\&quot;ts\&quot;:71198,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2214;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:DealOverviewEqPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://DealOverviewEqPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:25,\&quot;db\&quot;:7,\&quot;xhrServerTime\&quot;:76,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:3,\&quot;duration\&quot;:1224},{\&quot;ts\&quot;:71209,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2221;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:GenerateCFDPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://GenerateCFDPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:83,\&quot;db\&quot;:7,\&quot;xhrServerTime\&quot;:132,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:3,\&quot;duration\&quot;:1473},{\&quot;ts\&quot;:71187,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2207;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:ConfigureProductsEqPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://ConfigureProductsEqPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:181,\&quot;db\&quot;:44,\&quot;xhrServerTime\&quot;:240,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:1527},{\&quot;ts\&quot;:71231,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2229;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:UpdateOptyAdhocPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://UpdateOptyAdhocPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:82,\&quot;db\&quot;:10,\&quot;xhrServerTime\&quot;:128,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:1539},{\&quot;ts\&quot;:71248,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2236;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:TermsAndConditionsEqPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://TermsAndConditionsEqPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:45,\&quot;db\&quot;:17,\&quot;xhrServerTime\&quot;:89,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:4,\&quot;duration\&quot;:2574},{\&quot;ts\&quot;:73116,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2307;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:GoToAgreementEqPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://GoToAgreementEqPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:26,\&quot;db\&quot;:6,\&quot;xhrServerTime\&quot;:70,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:1424},{\&quot;ts\&quot;:73274,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2393;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:quoteEquipmentDetailLayout\&quot;,\&quot;def\&quot;:\&quot;apex://quoteDetailLayoutController/ACTION$getQuoteDetailRecord\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:205,\&quot;db\&quot;:47,\&quot;xhrServerTime\&quot;:253,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:38,\&quot;duration\&quot;:1442},{\&quot;ts\&quot;:71259,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2243;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:EmailQuoteToOptyTeamEqPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://EmailQuoteToOptyTeamEqPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:180,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:21,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:565,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:3555},{\&quot;ts\&quot;:71268,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2250;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:EmailContractualEqPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://EmailContractualEqPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:171,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:11,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:565,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:3547},{\&quot;ts\&quot;:71276,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2257;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:MakePrimaryEqPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://MakePrimaryEqPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:162,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:65,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:565,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3540},{\&quot;ts\&quot;:71292,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2265;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:ViewOrderChangeEqPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://ViewOrderChangeEqPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:146,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:13,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:565,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3524},{\&quot;ts\&quot;:71299,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2272;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:InformOtrEqPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://InformOtrEqPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:139,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:10,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:565,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:3518},{\&quot;ts\&quot;:71305,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2279;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:ImplementApprovedReqEqPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://ImplementApprovedReqEqPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:134,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:10,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:565,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:3514},{\&quot;ts\&quot;:71373,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2291;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://RecordUiController/ACTION$getRecordWithFields\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:66,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:237,\&quot;db\&quot;:75,\&quot;xhrServerTime\&quot;:565,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3446},{\&quot;ts\&quot;:71375,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2292;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:64,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:17,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:565,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3444},{\&quot;ts\&quot;:71377,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2293;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://RecordUiController/ACTION$getRecordWithFields\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:62,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:109,\&quot;db\&quot;:31,\&quot;xhrServerTime\&quot;:565,\&quot;boxCarCount\&quot;:9},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3442},{\&quot;ts\&quot;:73170,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2315;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordGlobalValueProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:367,\&quot;db\&quot;:53,\&quot;xhrServerTime\&quot;:407,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1883},{\&quot;ts\&quot;:73477,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2407;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://RecordUiController/ACTION$getRecordUis\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:677,\&quot;db\&quot;:152,\&quot;xhrServerTime\&quot;:764,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3191},{\&quot;ts\&quot;:76794,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2458;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://RecordUiController/ACTION$getPicklistValuesByRecordType\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:149,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:197,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1687},{\&quot;ts\&quot;:63549,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1866;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;one:appNavContainer\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.navigation.GlobalNavDropdownController/ACTION$getAllTabs\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:13067,\&quot;enqueueWait\&quot;:53,\&quot;serverTime\&quot;:{\&quot;total\&quot;:269,\&quot;db\&quot;:45,\&quot;xhrServerTime\&quot;:326,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:4,\&quot;duration\&quot;:15058}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:31227,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;force:highlightsPanel\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:1616},{\&quot;name\&quot;:\&quot;c:ConfigureProductsEqPropButton\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:1526},{\&quot;name\&quot;:\&quot;c:DealOverviewEqPropButton\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:1525},{\&quot;name\&quot;:\&quot;c:quotechevronlexnew\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:1612},{\&quot;name\&quot;:\&quot;flexipage:tabset\&quot;,\&quot;createCount\&quot;:2,\&quot;createTimeTotal\&quot;:3189}]}],\&quot;lds\&quot;:[{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;runtime-perf\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:78971,\&quot;context\&quot;:{\&quot;storeIngest\&quot;:40,\&quot;storeBroadcast\&quot;:33,\&quot;storeLookup\&quot;:22}}]},\&quot;owner\&quot;:\&quot;navex:standardManager\&quot;,\&quot;unixTS\&quot;:false,\&quot;ept\&quot;:16971,\&quot;previousPage\&quot;:{\&quot;context\&quot;:\&quot;home:landing\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/page/home\&quot;,\&quot;panel\&quot;:{\&quot;type\&quot;:\&quot;panel\&quot;,\&quot;devNameOrId\&quot;:\&quot;markup://forceSearch:groupContainer\&quot;}}},\&quot;attributes\&quot;:{\&quot;layoutContainer\&quot;:\&quot;DLC\&quot;,\&quot;navStyle\&quot;:\&quot;Standard\&quot;,\&quot;splitViewMode\&quot;:\&quot;none\&quot;,\&quot;darkModeEnabled\&quot;:false,\&quot;fieldInstancesEnabled\&quot;:true,\&quot;network\&quot;:{\&quot;maxAllowedParallelXHRs\&quot;:6},\&quot;cores\&quot;:8,\&quot;eptDeviation\&quot;:true,\&quot;eptDeviationReason\&quot;:\&quot;InteractionBeforePageLoaded|synthetic-hover\&quot;,\&quot;density\&quot;:\&quot;COMFY\&quot;,\&quot;totalEpt\&quot;:16971,\&quot;defaultCmp\&quot;:[\&quot;force:highlightsPanel\&quot;,\&quot;c:quotechevronlexnew\&quot;,\&quot;flexipage:tabset\&quot;,\&quot;flexipage:tabset\&quot;,\&quot;c:ConfigureProductsEqPropButton\&quot;,\&quot;c:DealOverviewEqPropButton\&quot;,\&quot;c:GenerateCFDPropButton\&quot;,\&quot;c:DemoteToDraftLWCContainer\&quot;,\&quot;c:UpdateOptyAdhocPropButton\&quot;,\&quot;c:TermsAndConditionsEqPropButton\&quot;,\&quot;c:EmailQuoteToOptyTeamEqPropButton\&quot;,\&quot;c:EmailContractualEqPropButton\&quot;,\&quot;c:MakePrimaryEqPropButton\&quot;,\&quot;c:DeactivateProposalLWCContainer\&quot;,\&quot;c:ViewOrderChangeEqPropButton\&quot;,\&quot;c:InformOtrEqPropButton\&quot;,\&quot;c:ImplementApprovedReqEqPropButton\&quot;,\&quot;c:ClonewithLineItems_diffOpty\&quot;,\&quot;c:AddressSearchPropButton\&quot;,\&quot;c:SubmitForApprovalEqPropButton\&quot;,\&quot;c:GoToAgreementEqPropButton\&quot;,\&quot;c:ClonewithLineItems_SameOppty\&quot;,\&quot;c:quoteEquipmentDetailLayout\&quot;],\&quot;gates\&quot;:{\&quot;lds.useNewTrackedFieldBehavior\&quot;:false,\&quot;scenarioTrackerEnabled.instrumentation.ltng\&quot;:true,\&quot;scenarioTrackerMarksEnabled.instrumentation.ltng\&quot;:false,\&quot;ui.services.PageScopedCache.enabled\&quot;:false,\&quot;browserIdleTime.instrumentation.ltng\&quot;:false,\&quot;clientTelemetry.instrumentation.ltng\&quot;:true,\&quot;lwcff_ENABLE_INNER_OUTER_TEXT_PATCH.lwc.ltng\&quot;:false,\&quot;lwcff_ENABLE_NON_COMPOSED_EVENTS_LEAKAGE.lwc.ltng\&quot;:false,\&quot;componentProfiler.instrumentation.ltng\&quot;:false,\&quot;versionedFlexipagesDescriptor.lwcFlexipages.uip\&quot;:false,\&quot;rrh.useLWCRelatedLists.__test__\&quot;:false,\&quot;relatedList.lwcDrillin\&quot;:false,\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true},\&quot;cacheStats\&quot;:{\&quot;AuraStorage_actions\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:3},\&quot;lds:Apex.getApex\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:1},\&quot;lds:UiApi.getObjectInfo\&quot;:{\&quot;hits\&quot;:5,\&quot;misses\&quot;:1},\&quot;lds:UiApi.getPicklistValuesByRecordType\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:1},\&quot;lds:UiApi.getRecord\&quot;:{\&quot;hits\&quot;:12,\&quot;misses\&quot;:7},\&quot;lds:UiApi.getRecordActions\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:5},\&quot;lds:UiApi.getRecordAvatars\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:1},\&quot;lds:UiApi.getRecordUi\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:3},\&quot;lds:UiApi.getRelatedListsInfo\&quot;:{\&quot;hits\&quot;:12,\&quot;misses\&quot;:1},\&quot;AuraRecordStore\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:3},\&quot;AuraRecordStore_navexStandardManager\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:1},\&quot;AuraRecordStore_forceSearchRecordPreview\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:1},\&quot;AuraRecordStore_bulkRecordRequestforceRelatedListsDataCollection\&quot;:{\&quot;hits\&quot;:16,\&quot;misses\&quot;:0},\&quot;AuraRecordStore_forceRecordData\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:1},\&quot;total\&quot;:{\&quot;hits\&quot;:45,\&quot;misses\&quot;:29}},\&quot;complexity\&quot;:{\&quot;fields\&quot;:9,\&quot;reference\&quot;:2,\&quot;picklist\&quot;:1,\&quot;string\&quot;:2,\&quot;currency\&quot;:2,\&quot;ADS_fields\&quot;:201,\&quot;ADS_records\&quot;:16},\&quot;sequence\&quot;:2,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;${c_recordId}\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:78973,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;defsUsage\&quot;,\&quot;attributes\&quot;:{\&quot;defs\&quot;:[\&quot;markup://forceSearch:assistantRecordPreview\&quot;,\&quot;markup://forceSearch:recordPreview\&quot;,\&quot;markup://forceSearch:recordPreviewHeader\&quot;,\&quot;markup://forceSearch:recordPreviewTitle\&quot;,\&quot;markup://force:recordAvatar\&quot;,\&quot;markup://forceSearch:recordPreviewBody\&quot;,\&quot;markup://forceSearch:recordPreviewActions\&quot;,\&quot;markup://force:actionsContainer\&quot;,\&quot;markup://forceSearch:recordPreviewRelatedList\&quot;,\&quot;markup://force:relatedListQuickLinksContainer\&quot;,\&quot;markup://force:relatedListQuickLinksContainerDataProvider\&quot;,\&quot;markup://force:quickLinkContainer\&quot;,\&quot;markup://force:relatedListContainerMetadataProvider\&quot;,\&quot;markup://one:recordHomeFlexipage2Wrapper\&quot;,\&quot;markup://ui:resizeObserver\&quot;,\&quot;markup://one:recordHomeFlexipage2\&quot;,\&quot;markup://force:relatedListsDataCollection\&quot;,\&quot;markup://forceSearch:recordPreviewFields\&quot;,\&quot;markup://lightning:formattedText\&quot;,\&quot;markup://lightning:formattedRichText\&quot;,\&quot;markup://forceChatter:actionChatterContainer\&quot;,\&quot;markup://forceChatter:sfxFollowAction\&quot;,\&quot;markup://force:action\&quot;,\&quot;markup://force:socialAction\&quot;,\&quot;markup://one:actionsRibbon\&quot;,\&quot;markup://one:actionsDropDown\&quot;,\&quot;markup://force:actionLink\&quot;,\&quot;markup://force:actionEventLink\&quot;,\&quot;markup://force:actionsDropDownMenuList\&quot;,\&quot;markup://force:detailPanelEventBroker\&quot;,\&quot;markup://force:highlightsActionWrapper\&quot;,\&quot;markup://force:recordCollection\&quot;,\&quot;markup://c:ConfigureProductsEqPropButton\&quot;,\&quot;markup://flexipage:component3\&quot;,\&quot;markup://c:DealOverviewEqPropButton\&quot;,\&quot;markup://c:GenerateCFDPropButton\&quot;,\&quot;markup://c:DemoteToDraftLWCContainer\&quot;,\&quot;markup://c:demotetodraft\&quot;,\&quot;markup://c:UpdateOptyAdhocPropButton\&quot;,\&quot;markup://c:TermsAndConditionsEqPropButton\&quot;,\&quot;markup://c:EmailQuoteToOptyTeamEqPropButton\&quot;,\&quot;markup://c:EmailContractualEqPropButton\&quot;,\&quot;markup://c:MakePrimaryEqPropButton\&quot;,\&quot;markup://c:DeactivateProposalLWCContainer\&quot;,\&quot;markup://c:changeproposalstatuslwc\&quot;,\&quot;markup://c:ViewOrderChangeEqPropButton\&quot;,\&quot;markup://c:InformOtrEqPropButton\&quot;,\&quot;markup://c:ImplementApprovedReqEqPropButton\&quot;,\&quot;markup://c:ClonewithLineItems_diffOpty\&quot;,\&quot;markup://c:AddressSearchPropButton\&quot;,\&quot;markup://c:SubmitForApprovalEqPropButton\&quot;,\&quot;markup://c:GoToAgreementEqPropButton\&quot;,\&quot;markup://c:ClonewithLineItems_SameOppty\&quot;,\&quot;markup://c:quoteEquipmentDetailLayout\&quot;,\&quot;markup://force:recordData\&quot;,\&quot;markup://lightning:buttonGroup\&quot;,\&quot;markup://lightning:recordEditForm\&quot;,\&quot;markup://lightning:messages\&quot;,\&quot;markup://lightning:accordion\&quot;,\&quot;markup://lightning:accordionSection\&quot;,\&quot;markup://lightning:outputField\&quot;,\&quot;markup://lightning:formattedDateTime\&quot;,\&quot;markup://lightning:auraFormViewEditWireBridge\&quot;,\&quot;markup://c:strikePopupOverNew\&quot;,\&quot;markup://lightning:iconSvgTemplatesCustom\&quot;,\&quot;markup://lightning:iconSvgTemplatesStandard\&quot;],\&quot;pageCounter\&quot;:2,\&quot;phase\&quot;:\&quot;EPT\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;defsUsage\&quot;,\&quot;scope\&quot;:\&quot;defsUsage\&quot;},\&quot;sequence\&quot;:29,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;${c_recordId}\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;}}}&quot;}],&quot;traces&quot;:&quot;[]&quot;,&quot;metrics&quot;:&quot;[{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-count\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185692,\&quot;value\&quot;:29},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-count\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063194334,\&quot;value\&quot;:20},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;get-record-normal-invoke-count\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063188916,\&quot;value\&quot;:5},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-size-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063196512,\&quot;value\&quot;:[10,460]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-watch-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063196512,\&quot;value\&quot;:[2,2]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-snapshot-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063196512,\&quot;value\&quot;:[0,17]},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.Apex.getApex\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063188913,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-count.Apex.getApex\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063188914,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-duration.Apex.getApex\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063192386,\&quot;value\&quot;:[3473]},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063194332,\&quot;value\&quot;:61},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-broadcast-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063196032,\&quot;value\&quot;:[0,0,0,0,2,1,0,0,0,0,0,0,5,0,8,0,5,0,3,1,4,0,0,0]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-ingest-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063196022,\&quot;value\&quot;:[0,1,3,1,1,1,1,0,0,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,2,0,1,2,0,1,1,6,6,5,1]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-lookup-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063196032,\&quot;value\&quot;:[2,0,1,0,0,0,0,1,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,1,0,10]},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.UiApi.getObjectInfo\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185636,\&quot;value\&quot;:7},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-count.UiApi.getObjectInfo\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185636,\&quot;value\&quot;:5},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-duration.UiApi.getObjectInfo\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063185636,\&quot;value\&quot;:[1,0,0,0,0]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-count.UiApi.getObjectInfo\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063181208,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-duration.UiApi.getObjectInfo\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063182972,\&quot;value\&quot;:[1767]},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.UiApi.getPicklistValuesByRecordType\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063194332,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-count.UiApi.getPicklistValuesByRecordType\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063194334,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-duration.UiApi.getPicklistValuesByRecordType\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063196032,\&quot;value\&quot;:[1700]},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.UiApi.getRecord\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063188914,\&quot;value\&quot;:23},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-count.UiApi.getRecord\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185692,\&quot;value\&quot;:12},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-duration.UiApi.getRecord\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063185692,\&quot;value\&quot;:[4,0,1,1,0,0,0,0,0,0,0,0]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-count.UiApi.getRecord\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063188916,\&quot;value\&quot;:7},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-duration.UiApi.getRecord\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063192383,\&quot;value\&quot;:[1697,1543,1649,1583,1688,3474,3469]},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.UiApi.getRecordActions\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185692,\&quot;value\&quot;:5},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-count.UiApi.getRecordActions\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185692,\&quot;value\&quot;:5},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-duration.UiApi.getRecordActions\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063186052,\&quot;value\&quot;:[2867,427,429,360,2873]},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.UiApi.getRecordAvatars\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185689,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-count.UiApi.getRecordAvatars\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185691,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-duration.UiApi.getRecordAvatars\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063187104,\&quot;value\&quot;:[1415]},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.UiApi.getRecordCreateDefaults\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063192602,\&quot;value\&quot;:4},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.UiApi.getRecordUi\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063192602,\&quot;value\&quot;:4},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-count.UiApi.getRecordUi\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063192602,\&quot;value\&quot;:3},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-duration.UiApi.getRecordUi\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063194312,\&quot;value\&quot;:[1959,1705,3298]},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.UiApi.getRelatedListsInfo\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185540,\&quot;value\&quot;:13},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-count.UiApi.getRelatedListsInfo\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185540,\&quot;value\&quot;:12},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-duration.UiApi.getRelatedListsInfo\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063185540,\&quot;value\&quot;:[0,0,0,0,0,0,0,0,0,1,0,0]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-count.UiApi.getRelatedListsInfo\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063181212,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-duration.UiApi.getRelatedListsInfo\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063182585,\&quot;value\&quot;:[1376]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;scenarioTime.ms\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063196503,\&quot;value\&quot;:[16982]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageReceived.beforeEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063196508,\&quot;value\&quot;:[3261884]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageSent.beforeEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063196508,\&quot;value\&quot;:[55817]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageReceived.afterEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063179536,\&quot;value\&quot;:[302176]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageSent.afterEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063179536,\&quot;value\&quot;:[483540]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsage.instrSizePct\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063179536,\&quot;value\&quot;:[1]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;ads-bridge-add-records-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063192589,\&quot;value\&quot;:[1,1,8,2]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;ads-bridge-emit-record-changed-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063194291,\&quot;value\&quot;:[2,4,7,4,3,3]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-size\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063188983,\&quot;value\&quot;:[89,594,89,2,1]},{\&quot;owner\&quot;:\&quot;adg-resolver\&quot;,\&quot;name\&quot;:\&quot;request\&quot;,\&quot;tags\&quot;:{\&quot;status\&quot;:\&quot;success\&quot;},\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063188983,\&quot;value\&quot;:5},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-type.root-property-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063188983,\&quot;value\&quot;:39},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-type.wire-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063188983,\&quot;value\&quot;:574},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-type.conditional-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185622,\&quot;value\&quot;:158},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.wire-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063188983,\&quot;value\&quot;:134},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.conditional-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185622,\&quot;value\&quot;:47},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.conditional-node-stopped\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063185622,\&quot;value\&quot;:[0,0,0,0,0,0,0,0,0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.conditional-node-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063185622,\&quot;value\&quot;:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getObjectInfo-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185622,\&quot;value\&quot;:3},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getObjectInfo-wire-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063185622,\&quot;value\&quot;:[1,0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.wire-node-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063187209,\&quot;value\&quot;:[2,6,7,1,1,1,1,1,0,1699,5,9,10,10,10,10,10,10,10,9,9,10,10,10,6,6,6,6,6,6,5,5,5,5,4,5,3,2,2,3,3,3,3,3,3,4,3,3,2,1,1,1,1,1,1,1,1,1,1,2,0,0,1,1,0,0,0,0,1,1,2875,0,0,0,1,1,428,0,1,0,0,0,430,0,0,0,0,0,2880,0,0,0,0,0,1651,1694]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getRecord-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185624,\&quot;value\&quot;:9},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.b-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185622,\&quot;value\&quot;:3},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.b-wire-unresolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063185622,\&quot;value\&quot;:[0,0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.v-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185622,\&quot;value\&quot;:3},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.v-wire-unresolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063185622,\&quot;value\&quot;:[0,0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.unknown-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063186053,\&quot;value\&quot;:68},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.unknown-wire-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063186053,\&quot;value\&quot;:[1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getRecordActions-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185623,\&quot;value\&quot;:4},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.c-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063188983,\&quot;value\&quot;:25},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.c-wire-unresolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063188983,\&quot;value\&quot;:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getRecord-wire-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063187209,\&quot;value\&quot;:[1,0,1697,0,0,0,0,1649,1688]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-type.iteration-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185502,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-type.multi-variate-conditional-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185502,\&quot;value\&quot;:3},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;extension-preprocess-time.ppr\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063185509,\&quot;value\&quot;:[6]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;extension-preprocess-time.batching\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063185515,\&quot;value\&quot;:[6]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-type.batch-wire-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185515,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.iteration-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185516,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.iteration-node-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063185516,\&quot;value\&quot;:[0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.multi-variate-conditional-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185516,\&quot;value\&quot;:3},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.multi-variate-conditional-node-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063185517,\&quot;value\&quot;:[0,0,1]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.UiApi.getObjectCreateActions-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185520,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.UiApi.getObjectCreateActions-wire-unresolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063185521,\&quot;value\&quot;:[1]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.UiApi.getRecordEditActions-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185521,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.UiApi.getRecordEditActions-wire-unresolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063185521,\&quot;value\&quot;:[0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.unknown-dependent-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063186053,\&quot;value\&quot;:5},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.unknown-dependent-wire-unresolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063186053,\&quot;value\&quot;:[0,0,0,0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.batch-wire-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185528,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.ProgressiveContext-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185533,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getRelatedListsInfo-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185540,\&quot;value\&quot;:12},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getRelatedListsInfo-wire-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063185540,\&quot;value\&quot;:[0,0,0,0,0,0,0,0,0,1,0,0]},{\&quot;owner\&quot;:\&quot;RecordHome.LWCHighlightsPanel\&quot;,\&quot;name\&quot;:\&quot;lwcHighlightsDataLoaded\&quot;,\&quot;tags\&quot;:{\&quot;mode\&quot;:\&quot;View\&quot;,\&quot;status\&quot;:\&quot;success\&quot;},\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063185641,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;RecordHome.LWCHighlightsPanel\&quot;,\&quot;name\&quot;:\&quot;lwcHighlightsDataLoaded\&quot;,\&quot;tags\&quot;:{\&quot;mode\&quot;:\&quot;View\&quot;,\&quot;status\&quot;:\&quot;success\&quot;},\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063185641,\&quot;value\&quot;:[82]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getRecordActions-wire-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063186053,\&quot;value\&quot;:[2868,427,429,2873]},{\&quot;owner\&quot;:\&quot;adg-resolver\&quot;,\&quot;name\&quot;:\&quot;duration\&quot;,\&quot;tags\&quot;:{\&quot;status\&quot;:\&quot;success\&quot;},\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063188984,\&quot;value\&quot;:[1]}]&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=59&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">7897500000056e1d47</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/visualforce/recsession-509" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">00D7d0000077kVG!ARsAQC.rOy7JkEMpFe2nokC6ZgJQM8NfmAS3UfzF4ZWpJ9kwwKMDdRsYA_pnyakgjXH7Zayls0XJQY1sSg.M3VhN09qN3aba</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">7d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cshc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cshc</stringProp>
                  <stringProp name="Argument.value">d000004y0jwd0000077kVG</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RSID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">RSID</stringProp>
                  <stringProp name="Argument.value">00D7d0000077kVG${c_clkRecordId}eyJlbmMiOiJBMjU2R0NNIiwiYXVkIjoiMDBEN2QwMDAwMDc3a1ZHIiwia2lkIjoie1widFwiOlwiMDBEN2QwMDAwMDc3a1ZHXCIsXCJ2XCI6XCIwMkcwYzAwMDAwMGtRdHVcIixcImFcIjpcInN1cnNpZGNvb2tpZWVuY3J5cHRcIixcInVcIjpcIjAwNTdkMDAwMDA0eTBqd1wifSIsImNyaXQiOlsiaWF0Il0sImlhdCI6MTYzMzA2MzAzNDY4NiwiZXhwIjowfQ==..hwLVI-LMJoSemrBn.yFZRrECqq4XMyJl23fxO917B59ixKK2Nj3jLEAE0RV_6JDBHpTiwNigMXX7yCstdcj2WCO1J8_wbCGmPPoPP-Y-oTJpK4_zaWY18MdF-CFzs5kU5wrWW6xsCFyBb_P25T09Yw_KnAlMLSUGr8B-5YD-rPpW_DM_1Y69zadr0CWRI1wxM4EPo6rYoRUToJGKnB_ika0oDvd2dlJQPntTMPOhoHZxcgtw7-iIHXAOQeDtXCLVuO5nqiUg=.iY0mGhgoQo1YHKWCg5nTzQ==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SUORG" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SUORG</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="retURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">retURL</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName4}/apex/QuoteEmbedded?t=1633063192254&amp;Id=${c_recordId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/visualforce/recsession</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=60&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getActionOverrides=1&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getIsLWCFlexipageEnabled=1&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getKeyPrefixesWithRecordTypes=1-507" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2483;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getActionOverrides&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;sObjectNames&quot;:[&quot;A360ReportsGlobalRegion__c&quot;,&quot;A360_Manage_Widgets__c&quot;,&quot;A360_W2W_columns__c&quot;,&quot;AATEST2__c&quot;,&quot;AISentimentResult&quot;,&quot;ALIAutomation__c&quot;,&quot;API_Authorization__c&quot;,&quot;APTPS_Tender_Term_Description__c&quot;,&quot;APTPS_Tender_Term_Group_Approval__c&quot;,&quot;APTPS_Tender_Term__c&quot;,&quot;APTS_Display_Fields__c&quot;,&quot;APTS_Display_Settings__c&quot;,&quot;APTS_Features_Settings__c&quot;,&quot;APTS_Invoice__c&quot;,&quot;APTS_Product_Area_Code__c&quot;,&quot;APTS_ProposalFieldValidation__c&quot;,&quot;APTS_Query_Settings__c&quot;,&quot;APTS_ReApproval_Config__c&quot;,&quot;APXT_CongaSign__CongaSign_Settings__c&quot;,&quot;APXT_CongaSign__Recipient__c&quot;,&quot;APXT_CongaSign__Transaction__c&quot;,&quot;Accessory_Modality_Code__c&quot;,&quot;Account&quot;,&quot;AccountBrand&quot;,&quot;AccountContactRelation&quot;,&quot;AccountForecast&quot;,&quot;AccountForecastAdjustment&quot;,&quot;AccountForecastPeriodMetric&quot;,&quot;AccountHospitalGrade__c&quot;,&quot;AccountInsight&quot;,&quot;AccountParticipant&quot;,&quot;AccountPartner&quot;,&quot;AccountProductForecast&quot;,&quot;AccountProductPeriodForecast&quot;,&quot;AccountRelationship&quot;,&quot;AccountStrategicViewSetting__c&quot;,&quot;AccountTeamMember&quot;,&quot;AccountUserTerritory2View&quot;,&quot;Account_360_DB_User_default_widgets__c&quot;,&quot;Account_Agreement_Association__c&quot;,&quot;Account_Hierarchy_Setting__c&quot;,&quot;Account_Plan_Competitor__c&quot;,&quot;Account_Plan_Contacts__c&quot;,&quot;Account_Plan_KPI__c&quot;,&quot;Account_Plan__c&quot;,&quot;Account_Prioritization__c&quot;,&quot;Account_Request_Settings__c&quot;,&quot;Account_Team_Audit_Trail_Settings__c&quot;,&quot;Account_Team_Audit_Trail_Test_Settings__c&quot;,&quot;Account_Team_Audit_Trail__c&quot;,&quot;Account_Team_Request_Settings__c&quot;,&quot;Account_Test_Settings__c&quot;,&quot;Accreditation&quot;,&quot;AcctMgrPeriodicTargetDstr&quot;,&quot;AcctMgrTarget&quot;,&quot;AcctMgrTargetDstr&quot;,&quot;ActionCadence&quot;,&quot;ActionPlan&quot;,&quot;ActionPlanItem&quot;,&quot;ActionPlanItemDependency&quot;,&quot;ActionPlanTemplate&quot;,&quot;ActionPlanTemplateItem&quot;,&quot;ActionPlanTemplateItemValue&quot;,&quot;ActionPlanTemplateVersion&quot;,&quot;ActionPlanTmplItmAssessmentInd&quot;,&quot;ActionPlnTmplItmDependency&quot;,&quot;Activate_OTD_process__c&quot;,&quot;ActivationTarget&quot;,&quot;ActiveScratchOrg&quot;,&quot;ActivityHistory&quot;,&quot;ActivityTiming&quot;,&quot;Activity_Library__c&quot;,&quot;Activity_Logger_Switch__c&quot;,&quot;AdCreativeSizeType&quot;,&quot;AdOrderItem&quot;,&quot;AdQuote&quot;,&quot;AdQuoteLine&quot;,&quot;AdServer&quot;,&quot;AdServerAccount&quot;,&quot;AdServerUser&quot;,&quot;AdSpaceCreativeSizeType&quot;,&quot;AdSpaceGroupMember&quot;,&quot;AdSpaceSpecification&quot;,&quot;AddOnDefinition&quot;,&quot;Address&quot;,&quot;AdvAccountForecastFact&quot;,&quot;AdvAcctForecastSetPartner&quot;,&quot;AgentTraining&quot;,&quot;Agreement_Contact_Role__c&quot;,&quot;Agreement_Product_Line_Item_Detail__c&quot;,&quot;Agreement_Product_Portfolio__c&quot;,&quot;AiDataset&quot;,&quot;AiImageDetectedObject&quot;,&quot;AiImageObject&quot;,&quot;AiImageTrainingObject&quot;,&quot;AiVisionModel&quot;,&quot;AiVisionModelMetric&quot;,&quot;AiVisionModelObjectMetric&quot;,&quot;AiVisitRecommendRequest&quot;,&quot;AiVisitRecommendation&quot;,&quot;AiVisitSummary&quot;,&quot;AiVisitTaskRcmd&quot;,&quot;AiVisitTaskRcmdRequest&quot;,&quot;AirTravelEmssnFctr&quot;,&quot;AirTravelEnrgyUse&quot;,&quot;AllergyIntolerance&quot;,&quot;AlternativePaymentMethod&quot;,&quot;ApiAnomalyEventStore&quot;,&quot;AppAnalyticsQueryRequest&quot;,&quot;AppExtension&quot;,&quot;AppMenuItem&quot;,&quot;AppUsageAssignment&quot;,&quot;ApplicationCase&quot;,&quot;AppointmentReason&quot;,&quot;AppointmentTopicTimeSlot&quot;,&quot;Approver_Detail__c&quot;,&quot;ApptBundleAggrDurDnscale&quot;,&quot;ApptBundleAggrPolicy&quot;,&quot;ApptBundleConfig&quot;,&quot;ApptBundlePolicy&quot;,&quot;ApptBundlePolicySvcTerr&quot;,&quot;ApptBundlePropagatePolicy&quot;,&quot;ApptBundleRestrictPolicy&quot;,&quot;ApptBundleSortPolicy&quot;,&quot;Apttus_Approval__ApprovalProcessInstance__c&quot;,&quot;Apttus_Approval__ApprovalRuleAssignee__c&quot;,&quot;Apttus_Approval__ApprovalRuleDimension__c&quot;,&quot;Apttus_Approval__ApprovalRuleEntry__c&quot;,&quot;Apttus_Approval__ApprovalRule__c&quot;,&quot;Apttus_Approval__Approval_Matrix__c&quot;,&quot;Apttus_Approval__Approval_Process__c&quot;,&quot;Apttus_Approval__Approval_Request_History__c&quot;,&quot;Apttus_Approval__Approval_Request__c&quot;,&quot;Apttus_Approval__ApprovalsCustomClasses__c&quot;,&quot;Apttus_Approval__ApprovalsCustomConfig__c&quot;,&quot;Apttus_Approval__ApprovalsSystemProperties__c&quot;,&quot;Apttus_Approval__Backup_Approver__c&quot;,&quot;Apttus_Approval__FormulaField__c&quot;,&quot;Apttus_Approval__SearchFilter__c&quot;,&quot;Apttus_Base2__BasePrivateProperties__c&quot;,&quot;Apttus_Base2__TurboEngineAdminProperties__c&quot;,&quot;Apttus_CMConfig__AgreementAdjustmentLineItem__c&quot;,&quot;Apttus_CMConfig__AgreementFootnote__c&quot;,&quot;Apttus_CMConfig__AgreementProductAttributeValueExt2__c&quot;,&quot;Apttus_CMConfig__AgreementProductAttributeValueExt3__c&quot;,&quot;Apttus_CMConfig__AgreementProductAttributeValueExt__c&quot;,&quot;Apttus_CMConfig__AgreementProductAttributeValue__c&quot;,&quot;Apttus_CMConfig__AgreementRelatedLineItem__c&quot;,&quot;Apttus_CMConfig__AgreementSummaryGroup__c&quot;,&quot;Apttus_CMConfig__AgreementSummary__c&quot;,&quot;Apttus_CMConfig__AgreementUsagePriceTier__c&quot;,&quot;Apttus_Config2__AccountLocation__c&quot;,&quot;Apttus_Config2__AdHocGroup__c&quot;,&quot;Apttus_Config2__AdjustmentLineItem__c&quot;,&quot;Apttus_Config2__AgreementPriceRule__c&quot;,&quot;Apttus_Config2__AgreementPriceTier__c&quot;,&quot;Apttus_Config2__AppliedExpressionInfo__c&quot;,&quot;Apttus_Config2__AppliedRuleActionInfo__c&quot;,&quot;Apttus_Config2__AppliedRuleInfo__c&quot;,&quot;Apttus_Config2__AssetAttributeValue__c&quot;,&quot;Apttus_Config2__AssetLineItem__c&quot;,&quot;Apttus_Config2__AssetUsagePriceTier__c&quot;,&quot;Apttus_Config2__BannerSettings__c&quot;,&quot;Apttus_Config2__BatchJob__c&quot;,&quot;Apttus_Config2__BillingPlanItem__c&quot;,&quot;Apttus_Config2__BillingPlan__c&quot;,&quot;Apttus_Config2__BillingPreference__c&quot;,&quot;Apttus_Config2__BundleComponentView__c&quot;,&quot;Apttus_Config2__ChargeGroupMember__c&quot;,&quot;Apttus_Config2__ChargeGroup__c&quot;,&quot;Apttus_Config2__ChargeType__c&quot;,&quot;Apttus_Config2__ClassificationHierarchy__c&quot;,&quot;Apttus_Config2__ClassificationName__c&quot;,&quot;Apttus_Config2__ConfigAssetPricingCriteriaFields__c&quot;,&quot;Apttus_Config2__ConfigAssetPricingDefault__c&quot;,&quot;Apttus_Config2__ConfigConstraintCriteriaFields__c&quot;,&quot;Apttus_Config2__ConfigCustomClasses__c&quot;,&quot;Apttus_Config2__ConfigCustomDisplayActions__c&quot;,&quot;Apttus_Config2__ConfigCustomDisplayColumns__c&quot;,&quot;Apttus_Config2__ConfigFieldExpressionsCriteriaFields__c&quot;,&quot;Apttus_Config2__ConfigFieldSet__c&quot;,&quot;Apttus_Config2__ConfigFlow__c&quot;,&quot;Apttus_Config2__ConfigHeaderCriteriaFields__c&quot;,&quot;Apttus_Config2__ConfigLineItemCriteriaFields__c&quot;,&quot;Apttus_Config2__ConfigLineItemCustomFields__c&quot;,&quot;Apttus_Config2__ConfigLineItemLimitFields__c&quot;,&quot;Apttus_Config2__ConfigRelatedPricingGroupFields__c&quot;,&quot;Apttus_Config2__ConfigSelectBundleOptionsSettings__c&quot;,&quot;Apttus_Config2__ConfigSelectConfigProductsSettings__c&quot;,&quot;Apttus_Config2__ConfigSmartSearchSettings__c&quot;,&quot;Apttus_Config2__ConfigSystemProperties__c&quot;,&quot;Apttus_Config2__ConfigUnusedObjects__c&quot;,&quot;Apttus_Config2__ConfigUserPreferences__c&quot;,&quot;Apttus_Config2__ConstraintRuleAction__c&quot;,&quot;Apttus_Config2__ConstraintRuleCondition__c&quot;,&quot;Apttus_Config2__ConstraintRule__c&quot;,&quot;Apttus_Config2__CustomMessage__c&quot;,&quot;Apttus_Config2__DataCache__c&quot;,&quot;Apttus_Config2__ExtOrderSummaryItemCriteriaFields__c&quot;,&quot;Apttus_Config2__FavoriteConfiguration__c&quot;,&quot;Apttus_Config2__FeatureSet__c&quot;,&quot;Apttus_Config2__Feature__c&quot;,&quot;Apttus_Config2__FieldExpression__c&quot;,&quot;Apttus_Config2__Footnote__c&quot;,&quot;Apttus_Config2__FormulaField__c&quot;,&quot;Apttus_Config2__FrequencyConversionRate__c&quot;,&quot;Apttus_Config2__GLAccountMapEntry__c&quot;,&quot;Apttus_Config2__GLAccountMapRule__c&quot;,&quot;Apttus_Config2__GuidedQuestion__c&quot;,&quot;Apttus_Config2__GuidedSearchRuleEntry__c&quot;,&quot;Apttus_Config2__GuidedSearchRuleFilter__c&quot;,&quot;Apttus_Config2__GuidedSearchRule__c&quot;,&quot;Apttus_Config2__IncentiveBenefitData__c&quot;,&quot;Apttus_Config2__IncentiveCoupon__c&quot;,&quot;Apttus_Config2__IncentiveCustomDisplayActions__c&quot;,&quot;Apttus_Config2__IncentiveCustomDisplaySetting__c&quot;,&quot;Apttus_Config2__IncentiveGroup__c&quot;,&quot;Apttus_Config2__IncentiveLimitData__c&quot;,&quot;Apttus_Config2__IncentiveLimit__c&quot;,&quot;Apttus_Config2__IncentiveSystemProperties__c&quot;,&quot;Apttus_Config2__Incentive__c&quot;,&quot;Apttus_Config2__InstalledProductsSettings__c&quot;,&quot;Apttus_Config2__LineItemRollup__c&quot;,&quot;Apttus_Config2__LineItem__c&quot;,&quot;Apttus_Config2__LookupFieldSettings__c&quot;,&quot;Apttus_Config2__LoyaltyPointAccrualLevelSettings__c&quot;,&quot;Apttus_Config2__ObjectSummarySettings__c&quot;,&quot;Apttus_Config2__OrderLineItemCriteriaFields__c&quot;,&quot;Apttus_Config2__OrderLineItemLimitFields__c&quot;,&quot;Apttus_Config2__OrderLineItemMapFields__c&quot;,&quot;Apttus_Config2__OrderLineItem__c&quot;,&quot;Apttus_Config2__OrderProductAttributeValue__c&quot;,&quot;Apttus_Config2__OrderSourceCustomFields__c&quot;,&quot;Apttus_Config2__OrderSystemProperties__c&quot;,&quot;Apttus_Config2__OrderTaxBreakup__c&quot;,&quot;Apttus_Config2__OrderUsagePriceTier__c&quot;,&quot;Apttus_Config2__Order__c&quot;,&quot;Apttus_Config2__PaymentTerm__c&quot;,&quot;Apttus_Config2__PriceBreakup__c&quot;,&quot;Apttus_Config2__PriceDimension__c&quot;,&quot;Apttus_Config2__PriceListCategory__c&quot;,&quot;Apttus_Config2__PriceListItem__c&quot;,&quot;Apttus_Config2__PriceList__c&quot;,&quot;Apttus_Config2__PriceMatrixEntry__c&quot;,&quot;Apttus_Config2__PriceMatrix__c&quot;,&quot;Apttus_Config2__PriceRuleEntry__c&quot;,&quot;Apttus_Config2__PriceRule__c&quot;,&quot;Apttus_Config2__PriceRuleset__c&quot;,&quot;Apttus_Config2__ProductAttributeGroupMember__c&quot;,&quot;Apttus_Config2__ProductAttributeGroup__c&quot;,&quot;Apttus_Config2__ProductAttributeValue__c&quot;,&quot;Apttus_Config2__ProductAttribute__c&quot;,&quot;Apttus_Config2__ProductClassification__c&quot;,&quot;Apttus_Config2__ProductConfiguration__c&quot;,&quot;Apttus_Config2__ProductConstraintEntry__c&quot;,&quot;Apttus_Config2__ProductConstraintView__c&quot;,&quot;Apttus_Config2__ProductConstraint__c&quot;,&quot;Apttus_Config2__ProductDefaultRuleFilter__c&quot;,&quot;Apttus_Config2__ProductDefaultRule__c&quot;,&quot;Apttus_Config2__ProductDefaultValue__c&quot;,&quot;Apttus_Config2__ProductFeatureValue__c&quot;,&quot;Apttus_Config2__ProductFeature__c&quot;,&quot;Apttus_Config2__ProductFilterView__c&quot;,&quot;Apttus_Config2__ProductFootnote__c&quot;,&quot;Apttus_Config2__ProductGroupMember__c&quot;,&quot;Apttus_Config2__ProductGroup__c&quot;,&quot;Apttus_Config2__ProductHierarchyView__c&quot;,&quot;Apttus_Config2__ProductInformation__c&quot;,&quot;Apttus_Config2__ProductOptionComponent__c&quot;,&quot;Apttus_Config2__ProductOptionGroup__c&quot;,&quot;Apttus_Config2__ProductOptionPrice__c&quot;,&quot;Apttus_Config2__ProductTranslation__c&quot;,&quot;Apttus_Config2__PublishedFavorite__c&quot;,&quot;Apttus_Config2__RelatedAccountLocation__c&quot;,&quot;Apttus_Config2__RelatedAssetLineItem__c&quot;,&quot;Apttus_Config2__RelatedIncentive__c&quot;,&quot;Apttus_Config2__RelatedLineItem__c&quot;,&quot;Apttus_Config2__RelatedOpportunityLineItemColl__c&quot;,&quot;Apttus_Config2__RelatedOpportunityLineItem__c&quot;,&quot;Apttus_Config2__RelatedPriceListItem__c&quot;,&quot;Apttus_Config2__RelatedProduct__c&quot;,&quot;Apttus_Config2__RevRecPolicy__c&quot;,&quot;Apttus_Config2__SearchAttributeValue__c&quot;,&quot;Apttus_Config2__SearchFilter__c&quot;,&quot;Apttus_Config2__SummaryGroup__c&quot;,&quot;Apttus_Config2__TaxBreakup__c&quot;,&quot;Apttus_Config2__TaxCertificate__c&quot;,&quot;Apttus_Config2__TaxCode__c&quot;,&quot;Apttus_Config2__TempDisplayColumn__c&quot;,&quot;Apttus_Config2__TempFilter__c&quot;,&quot;Apttus_Config2__TempIncentiveBenefitData__c&quot;,&quot;Apttus_Config2__TempIncentiveLimitData__c&quot;,&quot;Apttus_Config2__TempObject__c&quot;,&quot;Apttus_Config2__TempRenew__c&quot;,&quot;Apttus_Config2__UsagePriceTier__c&quot;,&quot;Apttus_Other_Variable_Cost__c&quot;,&quot;Apttus_Proposal__ProposalCustomClasses__c&quot;,&quot;Apttus_Proposal__ProposalSystemProperties__c&quot;,&quot;Apttus_Proposal__Proposal_Document_Output_Format__c&quot;,&quot;Apttus_Proposal__Proposal_Line_Item__c&quot;,&quot;Apttus_Proposal__Proposal_Request__c&quot;,&quot;Apttus_Proposal__Proposal__c&quot;,&quot;Apttus_QPConfig__ProposalAdjustmentLineItem__c&quot;,&quot;Apttus_QPConfig__ProposalFootnote__c&quot;,&quot;Apttus_QPConfig__ProposalIncentiveBenefitData__c&quot;,&quot;Apttus_QPConfig__ProposalIncentiveLimitData__c&quot;,&quot;Apttus_QPConfig__ProposalProductAttributeValueExt2__c&quot;,&quot;Apttus_QPConfig__ProposalProductAttributeValueExt3__c&quot;,&quot;Apttus_QPConfig__ProposalProductAttributeValueExt__c&quot;,&quot;Apttus_QPConfig__ProposalProductAttributeValue__c&quot;,&quot;Apttus_QPConfig__ProposalRelatedLineItem__c&quot;,&quot;Apttus_QPConfig__ProposalSummaryGroup__c&quot;,&quot;Apttus_QPConfig__ProposalSummary__c&quot;,&quot;Apttus_QPConfig__ProposalUsagePriceTier__c&quot;,&quot;Apttus_Reporting_Bundles__c&quot;,&quot;Apttus_XApps__Application__c&quot;,&quot;Apttus_XApps__XAuthorForExcelSystemProperties__c&quot;,&quot;Apttus__APTS_Agreement__c&quot;,&quot;Apttus__APTS_Related_Agreement__c&quot;,&quot;Apttus__APTS_Template__c&quot;,&quot;Apttus__AgreementLineItem__c&quot;,&quot;Apttus__Agreement_Clause__c&quot;,&quot;Apttus__Agreement_Protection__c&quot;,&quot;Apttus__Agreement_Rule_Condition__c&quot;,&quot;Apttus__Agreement_Rule__c&quot;,&quot;Apttus__AsyncMergeCall__c&quot;,&quot;Apttus__ComplyCustomClasses__c&quot;,&quot;Apttus__ComplyCustomProperties__c&quot;,&quot;Apttus__ComplySystemProperties__c&quot;,&quot;Apttus__DocAssemblyComponent__c&quot;,&quot;Apttus__DocAssemblyRule__c&quot;,&quot;Apttus__DocAssemblyRuleset__c&quot;,&quot;Apttus__DocumentVersionDetail__c&quot;,&quot;Apttus__DocumentVersionProperties__c&quot;,&quot;Apttus__DocumentVersion__c&quot;,&quot;Apttus__Document_Output_Format__c&quot;,&quot;Apttus__FormulaField__c&quot;,&quot;Apttus__IDEJobClauseExtraction__c&quot;,&quot;Apttus__IDEJobFieldExtraction__c&quot;,&quot;Apttus__IDEJob__c&quot;,&quot;Apttus__IDEMapClauseProvision__c&quot;,&quot;Apttus__IDEMapFieldProvision__c&quot;,&quot;Apttus__IDEMapProjectRecordType__c&quot;,&quot;Apttus__IDEMapProvisionRecordType__c&quot;,&quot;Apttus__IDEProvision__c&quot;,&quot;Apttus__LiteUserException__c&quot;,&quot;Apttus__LiteUserSummary__c&quot;,&quot;Apttus__Locale__c&quot;,&quot;Apttus__LoginHistory__c&quot;,&quot;Apttus__MSTeamsDetail__c&quot;,&quot;Apttus__QueryTemplateFilter__c&quot;,&quot;Apttus__QueryTemplateQualifier__c&quot;,&quot;Apttus__QueryTemplate__c&quot;,&quot;Apttus__ReviewCycle__c&quot;,&quot;Apttus__Reviewer__c&quot;,&quot;Apttus__SearchFilter__c&quot;,&quot;Apttus__TempObject__c&quot;,&quot;Apttus__TemplateClauseReference__c&quot;,&quot;Apttus__TemplateDatasourceFilter__c&quot;,&quot;Apttus__TemplateDynamicSection__c&quot;,&quot;Assessment&quot;,&quot;AssessmentIndDefinedValue&quot;,&quot;AssessmentIndValue&quot;,&quot;AssessmentIndicatorDefinition&quot;,&quot;AssessmentQuestion&quot;,&quot;AssessmentQuestionResponse&quot;,&quot;AssessmentQuestionSet&quot;,&quot;AssessmentQuestionVersion&quot;,&quot;AssessmentTask&quot;,&quot;AssessmentTaskContentDocument&quot;,&quot;AssessmentTaskDefinition&quot;,&quot;AssessmentTaskIndDefinition&quot;,&quot;AssessmentTaskOrder&quot;,&quot;Asset&quot;,&quot;AssetAction&quot;,&quot;AssetActionSource&quot;,&quot;AssetAttribute&quot;,&quot;AssetDowntimePeriod&quot;,&quot;AssetRelationship&quot;,&quot;AssetStatePeriod&quot;,&quot;AssetWarranty&quot;,&quot;AssignedResource&quot;,&quot;AssistantText&quot;,&quot;AssociatedLocation&quot;,&quot;Assortment&quot;,&quot;AssortmentProduct&quot;,&quot;AsyncOperationLog&quot;,&quot;AttachedContentNote&quot;,&quot;AttributeDefinition&quot;,&quot;Audit_Trail__c&quot;,&quot;AuthApplicationAsset&quot;,&quot;AuthApplicationPlace&quot;,&quot;AuthFormRequestRecord&quot;,&quot;AuthLocationAccessSchedule&quot;,&quot;AuthorNote&quot;,&quot;AuthorizationForm&quot;,&quot;AuthorizationFormConsent&quot;,&quot;AuthorizationFormDataUse&quot;,&quot;AuthorizationFormText&quot;,&quot;AuthorizedInsuranceLine&quot;,&quot;Award&quot;,&quot;BCEntityPermission&quot;,&quot;BCEntityPermissionSet&quot;,&quot;BCFieldPermission&quot;,&quot;BCParticipant&quot;,&quot;BCParticipantAccess&quot;,&quot;BCPermissionSet&quot;,&quot;BCRecordAccess&quot;,&quot;BCRecordAccessApproval&quot;,&quot;BCRelatedParticipant&quot;,&quot;Bad_Jobs__c&quot;,&quot;Banker&quot;,&quot;BatchJob&quot;,&quot;BatchJobPart&quot;,&quot;BatchJobPartFailedRecord&quot;,&quot;Batch_In_Sequence__c&quot;,&quot;Benefit&quot;,&quot;BenefitParameterValue&quot;,&quot;BenefitType&quot;,&quot;BillingPeriodItem&quot;,&quot;BillingPeriodTaxItem&quot;,&quot;BillingPolicy&quot;,&quot;BillingSchedule&quot;,&quot;BillingScheduleCreationStatus&quot;,&quot;BillingScheduleGroup&quot;,&quot;BillingTreatment&quot;,&quot;BillingTreatmentItem&quot;,&quot;Billing_Frequency_Matrix__c&quot;,&quot;BioprodPreBilledType__c&quot;,&quot;BldgEnrgyIntensity&quot;,&quot;BldgEnrgyIntensityVal&quot;,&quot;BldgSizeCategory&quot;,&quot;BlockchainAppMember&quot;,&quot;BlockchainApplication&quot;,&quot;BlockchainEntity&quot;,&quot;BlockchainField&quot;,&quot;BlockchainMember&quot;,&quot;BoardCertification&quot;,&quot;BranchUnit&quot;,&quot;BranchUnitBusinessMember&quot;,&quot;BranchUnitCustomer&quot;,&quot;BranchUnitRelatedRecord&quot;,&quot;Budget&quot;,&quot;BudgetAllocation&quot;,&quot;BulkPublishAccount_CS__c&quot;,&quot;BusRegAuthTypeDependency&quot;,&quot;BusRegAuthorizationType&quot;,&quot;BusinessBrand&quot;,&quot;BusinessHours&quot;,&quot;BusinessLicense&quot;,&quot;BusinessLicenseApplication&quot;,&quot;BusinessMilestone&quot;,&quot;BusinessProfile&quot;,&quot;BusinessType&quot;,&quot;BusinessUnitMember&quot;,&quot;Business_Profile_Custom_Settings__c&quot;,&quot;Buy_Back_Item_Type__c&quot;,&quot;BuyerAccount&quot;,&quot;BuyerGroup&quot;,&quot;BuyerGroupMember&quot;,&quot;BuyerGroupPricebook&quot;,&quot;ByPass_PCL_Check__c&quot;,&quot;CCP_APIInformation__c&quot;,&quot;CCP_BatchConfig__c&quot;,&quot;CCP_ContactUsHistory__c&quot;,&quot;CCP_CurrentOutage__c&quot;,&quot;CCP_EmailDistributionList__c&quot;,&quot;CCP_InstallationStatus__c&quot;,&quot;CCP_LanguageList__c&quot;,&quot;CCP_PartsOrderType__c&quot;,&quot;CCP_PerferenceSetting__c&quot;,&quot;CCP_RoleToPageMapping__c&quot;,&quot;CCP_SavedFilter__c&quot;,&quot;CCP_TrackingURLMapping__c&quot;,&quot;CFDJapanDescriptionSelectable__c&quot;,&quot;CFDSubtotal_GroupValues__c&quot;,&quot;CFD_Data__c&quot;,&quot;CFD_IB_Asset_Order__c&quot;,&quot;CFD_Line_Item__c&quot;,&quot;CFD_Print_Option_User_Preferences__c&quot;,&quot;CFO_Assignment_Matrix__c&quot;,&quot;CLI_Automation__c&quot;,&quot;CLM_Agreement_Rev_Rec_Conclusion__c&quot;,&quot;CLM_Entitlement_Tab__c&quot;,&quot;CLM_Feature_Settings__c&quot;,&quot;CMSetting__c&quot;,&quot;CP_GEHC_Custom_Batch_Filter_Support__c&quot;,&quot;CSO_W2C_SSO_Integration_API__c&quot;,&quot;CalcProcStepRelationship&quot;,&quot;CalculationMatrix&quot;,&quot;CalculationMatrixColumn&quot;,&quot;CalculationMatrixRow&quot;,&quot;CalculationMatrixVersion&quot;,&quot;CalculationProcedure&quot;,&quot;CalculationProcedureStep&quot;,&quot;CalculationProcedureVariable&quot;,&quot;CalculationProcedureVersion&quot;,&quot;CallTemplate&quot;,&quot;Campaign&quot;,&quot;CampaignInfluence&quot;,&quot;CampaignInsight&quot;,&quot;CampaignMember&quot;,&quot;CampaignMemberStatus&quot;,&quot;CardPaymentMethod&quot;,&quot;CareBarrier&quot;,&quot;CareBarrierDeterminant&quot;,&quot;CareBarrierType&quot;,&quot;CareBenefitVerifyRequest&quot;,&quot;CareDeterminant&quot;,&quot;CareDeterminantType&quot;,&quot;CareDiagnosis&quot;,&quot;CareInterventionType&quot;,&quot;CareLimitType&quot;,&quot;CareMetricTarget&quot;,&quot;CareObservation&quot;,&quot;CareObservationComponent&quot;,&quot;CarePerformer&quot;,&quot;CarePgmProvHealthcareProvider&quot;,&quot;CarePractnFacilityAppt&quot;,&quot;CarePreauth&quot;,&quot;CarePreauthItem&quot;,&quot;CareProgram&quot;,&quot;CareProgramCampaign&quot;,&quot;CareProgramEligibilityRule&quot;,&quot;CareProgramEnrollee&quot;,&quot;CareProgramEnrolleeProduct&quot;,&quot;CareProgramEnrollmentCard&quot;,&quot;CareProgramGoal&quot;,&quot;CareProgramProduct&quot;,&quot;CareProgramProvider&quot;,&quot;CareProgramTeamMember&quot;,&quot;CareProviderAdverseAction&quot;,&quot;CareProviderFacilitySpecialty&quot;,&quot;CareProviderSearchableField&quot;,&quot;CareRegisteredDevice&quot;,&quot;CareRequest&quot;,&quot;CareRequestDrug&quot;,&quot;CareRequestExtension&quot;,&quot;CareRequestItem&quot;,&quot;CareRequestReviewer&quot;,&quot;CareSpecialty&quot;,&quot;CareSpecialtyTaxonomy&quot;,&quot;CareTaxonomy&quot;,&quot;CartItem&quot;,&quot;Case&quot;,&quot;CaseComment&quot;,&quot;CaseContactRole&quot;,&quot;CaseEvalFormMapping__c&quot;,&quot;CaseMilestone&quot;,&quot;CaseProblemStatusCloseForm__c&quot;,&quot;CaseRelatedIssue&quot;,&quot;Case_Activities__c&quot;,&quot;Case_Comment__c&quot;,&quot;Case_Severity_Matrix__c&quot;,&quot;Case_To_CommEx_Interceptor__c&quot;,&quot;ChangeRequest&quot;,&quot;ChangeRequestRelatedIssue&quot;,&quot;ChannelObjectLinkingRule&quot;,&quot;ChannelProgram&quot;,&quot;ChannelProgramLevel&quot;,&quot;ChannelProgramMember&quot;,&quot;CharketSettings__c&quot;,&quot;Charket__CharketContext__c&quot;,&quot;Charket__Log__c&quot;,&quot;Charket__SkillContext__c&quot;,&quot;Charket__Skill__c&quot;,&quot;Charket__SurveyAnswer__c&quot;,&quot;Charket__SurveyQuestion__c&quot;,&quot;Charket__SurveyResponse__c&quot;,&quot;Charket__SurveyTaken__c&quot;,&quot;Charket__Survey__c&quot;,&quot;Charket__WeChatAccount__c&quot;,&quot;Charket__WeChatAgent__c&quot;,&quot;Charket__WeChatCouponDelivery__c&quot;,&quot;Charket__WeChatCoupon__c&quot;,&quot;Charket__WeChatEvent__c&quot;,&quot;Charket__WeChatFollowerPass__c&quot;,&quot;Charket__WeChatFollower__c&quot;,&quot;Charket__WeChatMenuFilters__c&quot;,&quot;Charket__WeChatMenuItem__c&quot;,&quot;Charket__WeChatMenu__c&quot;,&quot;Charket__WeChatMessageAttachment__c&quot;,&quot;Charket__WeChatMessage__c&quot;,&quot;Charket__WeChatNotificationTemplate__c&quot;,&quot;Charket__WeChatPass__c&quot;,&quot;Charket__WeChatQRCode__c&quot;,&quot;Charket__WeChatResponseItem__c&quot;,&quot;Charket__WeChatResponseKeyword__c&quot;,&quot;Charket__WeChatResponse__c&quot;,&quot;Charket__WeChatTagAssignment__c&quot;,&quot;Charket__WeChatTagLink__c&quot;,&quot;Charket__WeChatTag__c&quot;,&quot;Charket__WeChatTranscriptItem__c&quot;,&quot;Charket__WeChatTranscript__c&quot;,&quot;Chatter_Settings__c&quot;,&quot;China_BatchSize__c&quot;,&quot;China_Config_Setting__c&quot;,&quot;China_LS_Core_Imaging_PP__c&quot;,&quot;China_Profiles_Bypass_Validation__c&quot;,&quot;China_SalesFunct_PriceList_Map__c&quot;,&quot;China_Tender_Reserve_Details__c&quot;,&quot;Claim&quot;,&quot;ClaimCase&quot;,&quot;ClaimCovPaymentAdjustment&quot;,&quot;ClaimCovReserveAdjustment&quot;,&quot;ClaimCoverage&quot;,&quot;ClaimCoveragePaymentDetail&quot;,&quot;ClaimCoverageReserveDetail&quot;,&quot;ClaimItem&quot;,&quot;ClaimParticipant&quot;,&quot;ClaimPaymentSummary&quot;,&quot;ClinicalAlert&quot;,&quot;ClinicalEncounter&quot;,&quot;ClinicalEncounterDiagnosis&quot;,&quot;ClinicalEncounterFacility&quot;,&quot;ClinicalEncounterIdentifier&quot;,&quot;ClinicalEncounterProvider&quot;,&quot;ClinicalEncounterReason&quot;,&quot;ClinicalEncounterSvcRequest&quot;,&quot;ClinicalServiceRequest&quot;,&quot;ClinicalServiceRequestDetail&quot;,&quot;CloudServiceProvider&quot;,&quot;Cloudspm_Fusion__CustomHeaderColour__c&quot;,&quot;Cloudspm_Fusion__DocSign_Config__c&quot;,&quot;Cloudspm_Fusion__Fiscal_Year_Setting__c&quot;,&quot;Cloudspm_Fusion__Scheduler_Manager_Setting__c&quot;,&quot;CodeSet&quot;,&quot;CodeSetBundle&quot;,&quot;CollaborationGroup&quot;,&quot;CommEx_IT_SLA_Score_Matrix__c&quot;,&quot;CommEx_Support__c&quot;,&quot;CommSubscription&quot;,&quot;CommSubscriptionChannelType&quot;,&quot;CommSubscriptionConsent&quot;,&quot;CommSubscriptionTiming&quot;,&quot;CommerceEntitlementBuyerGroup&quot;,&quot;CommerceEntitlementPolicy&quot;,&quot;CommerceEntitlementProduct&quot;,&quot;CommexProductionSLAScoreMatrix__c&quot;,&quot;Commex_Case__c&quot;,&quot;CommissionSchedule&quot;,&quot;CommissionScheduleAssignment&quot;,&quot;Community_Article_Topics_connection__c&quot;,&quot;Community_Asset__c&quot;,&quot;Community_Event_Topics_connection__c&quot;,&quot;Community_Topic__c&quot;,&quot;Community_Training__c&quot;,&quot;Community_article_usage_details__c&quot;,&quot;Community_event__c&quot;,&quot;Community_points_management__c&quot;,&quot;Community_question__c&quot;,&quot;Community_template__c&quot;,&quot;Competitor_Attributes__c&quot;,&quot;Competitor__c&quot;,&quot;ComplaintCase&quot;,&quot;Config_Data_Map__c&quot;,&quot;Conga_OCC__OCCSettings__c&quot;,&quot;ConsentMetric&quot;,&quot;ConsentUsageMetric&quot;,&quot;Construction_Rev_Quote_PO__c&quot;,&quot;ConsumptionRate&quot;,&quot;ConsumptionSchedule&quot;,&quot;Contact&quot;,&quot;ContactEncounter&quot;,&quot;ContactEncounterParticipant&quot;,&quot;ContactPointAddress&quot;,&quot;ContactPointConsent&quot;,&quot;ContactPointEmail&quot;,&quot;ContactPointPhone&quot;,&quot;ContactPointTypeConsent&quot;,&quot;ContactRequest&quot;,&quot;ContactSuggestionInsight&quot;,&quot;Contact_Activity_Detail__c&quot;,&quot;Contact_Additional_Information__c&quot;,&quot;Contact_Relationship__c&quot;,&quot;ContentDocument&quot;,&quot;ContentDocumentListViewMapping&quot;,&quot;ContentNote&quot;,&quot;ContentVersion&quot;,&quot;ContentWorkspace&quot;,&quot;Contract&quot;,&quot;ContractContactRole&quot;,&quot;ContractLineItem&quot;,&quot;Contract_Line_Item__c&quot;,&quot;Contract__c&quot;,&quot;ConversationBroadcast&quot;,&quot;ConversationBroadcastEntry&quot;,&quot;Convert_Currency__c&quot;,&quot;CountryLangCurr_List__c&quot;,&quot;CountryNumberFormatMapping__c&quot;,&quot;CountryStateCity_Hieraracy__c&quot;,&quot;Country_List__c&quot;,&quot;County_List__c&quot;,&quot;CourseOffering&quot;,&quot;CoverageBenefit&quot;,&quot;CoverageBenefitItem&quot;,&quot;CoverageBenefitItemLimit&quot;,&quot;CoverageLimit&quot;,&quot;CoverageType&quot;,&quot;Covid_19_Surcharges__c&quot;,&quot;Covid_Exceptions__c&quot;,&quot;CrbnEmssnScopeAlloc&quot;,&quot;CrbnEmssnScopeAllocVal&quot;,&quot;Create_Quote_Local_Selection__c&quot;,&quot;CredentialStuffingEventStore&quot;,&quot;CreditInfoPageLayouts__c&quot;,&quot;CreditMemo&quot;,&quot;CreditMemoInvApplication&quot;,&quot;CreditMemoLine&quot;,&quot;Crisis&quot;,&quot;CustomAdminSetting__c&quot;,&quot;Custom_Favorite_Revision__c&quot;,&quot;Custom_Group_Name_Mapping__c&quot;,&quot;Custom_Picklist_Values__c&quot;,&quot;Customer&quot;,&quot;CustomerProperty&quot;,&quot;Customer_Event__c&quot;,&quot;Customer_Goal__c&quot;,&quot;Customer_Initiative__c&quot;,&quot;Customer_Project_Opportunity__c&quot;,&quot;Customer_Project_Parent_Opportunities__c&quot;,&quot;Customer_Project__c&quot;,&quot;Customer_Strategy_Opportunity__c&quot;,&quot;Customer_Strategy__c&quot;,&quot;Customer_Survey_Feedback__c&quot;,&quot;CventEvents__DataRefreshSettings__c&quot;,&quot;CventEvents__EnvironmentSettings__c&quot;,&quot;CventEvents__EventPurgeSettings__c&quot;,&quot;CventEvents__FieldsMapping__c&quot;,&quot;CventEvents__LogPurgeSettings__c&quot;,&quot;CventEvents__NominationRequestField__c&quot;,&quot;CventEvents__RecordMatchingCriteria__c&quot;,&quot;CventEvents__RecordMatchingRule__c&quot;,&quot;CventEvents__RecordTypeMatchingSettings__c&quot;,&quot;DG_Color_Settings__c&quot;,&quot;DMAPP__Dealmaker_AM_Plan_Unit_List__c&quot;,&quot;DMAPP__Dealmaker_AM_Report_List__c&quot;,&quot;DMAPP__Dealmaker_AM_Settings__c&quot;,&quot;DMAPP__Dealmaker_Account_Field__c&quot;,&quot;DMAPP__Dealmaker_Activity_Field__c&quot;,&quot;DMAPP__Dealmaker_Coach_Settings__c&quot;,&quot;DMAPP__Dealmaker_Contact_Field__c&quot;,&quot;DMAPP__Dealmaker_Core_Settings__c&quot;,&quot;DMAPP__Dealmaker_Insight_Settings__c&quot;,&quot;DMAPP__Dealmaker_Opp_Map_Filter_List__c&quot;,&quot;DMAPP__Dealmaker_Opportunity_Field__c&quot;,&quot;DMAPP__Dealmaker_Playbook_Settings__c&quot;,&quot;DMAPP__Dealmaker_Political_Map_Buyer_Roles__c&quot;,&quot;DMAPP__Dealmaker_Political_Map_Settings2__c&quot;,&quot;DMAPP__Dealmaker_Powerpoint__c&quot;,&quot;DMAPP__Dealmaker_Send_Usage_Settings__c&quot;,&quot;DMAPP__Dealmaker_Smart_OM_Settings__c&quot;,&quot;DMAPP__Made_To_Measure_Fields__c&quot;,&quot;DMAPP__Team_View_Plus_Views__c&quot;,&quot;DMMAX__DIESetting__c&quot;,&quot;DMMAX__MaxOpportunityPanelCfg__c&quot;,&quot;DMPPT__PPT_Customization__c&quot;,&quot;DMPPT__Secure_Folder_Settings__c&quot;,&quot;DOSMapping__c&quot;,&quot;DQA__c&quot;,&quot;DRM_DCS_Step_Names__c&quot;,&quot;DRM_Report_Dashboard_Analysis__c&quot;,&quot;Dashboard&quot;,&quot;DataAction&quot;,&quot;DataActionTarget&quot;,&quot;DataConnectorS3&quot;,&quot;DataLakeObjectInstance&quot;,&quot;DataStream&quot;,&quot;DataUseLegalBasis&quot;,&quot;DataUsePurpose&quot;,&quot;Data_Remediation_Config__c&quot;,&quot;DealChange_Concession_question_answers__c&quot;,&quot;DealGuidance__c&quot;,&quot;Deal_Change_Concession_Questions__c&quot;,&quot;Deal_Change_Root_Cause_Code__c&quot;,&quot;Deal_Overview_Permission__c&quot;,&quot;Deal_Terms__c&quot;,&quot;Deal_Version_Manager__c&quot;,&quot;Dealer_Entitlement_PLI__c&quot;,&quot;Default_Opportunity_Product__c&quot;,&quot;Default_Term_Classification_Type__c&quot;,&quot;DefinedSkill&quot;,&quot;DelegatedAccount&quot;,&quot;DeleteEvent&quot;,&quot;DeliveryTask&quot;,&quot;Department__c&quot;,&quot;Design_Center_Global_Region_Mapping__c&quot;,&quot;Design_Center_Request__c&quot;,&quot;DiagnosticSummary&quot;,&quot;DiagnosticSummaryDetail&quot;,&quot;DigitalSignature&quot;,&quot;DigitalWallet&quot;,&quot;Discount_Reason_Check__c&quot;,&quot;DistributorAuthorization&quot;,&quot;DocTemplateSectionCondition&quot;,&quot;DocumentChecklistItem&quot;,&quot;DocumentGenerationProcess&quot;,&quot;DocumentRecipient&quot;,&quot;DocumentTemplate&quot;,&quot;DocumentTemplateClause&quot;,&quot;DocumentTemplateContentDoc&quot;,&quot;DocumentTemplateSection&quot;,&quot;DocumentTemplateToken&quot;,&quot;Document_Output_Option__c&quot;,&quot;DrugDisplayTerm&quot;,&quot;DsarPolicyLog&quot;,&quot;DuplicateRecordItem&quot;,&quot;DuplicateRecordSet&quot;,&quot;ELTONGEHC__ELTON_Inventory_Org_Control__c&quot;,&quot;ELTONGEHC__Image_paths__c&quot;,&quot;ELTON__Data_Interface_Processing_History__c&quot;,&quot;ELTON__Data_Interface__c&quot;,&quot;ELTON__Equipment_AssignLoan_Settings__c&quot;,&quot;ELTON__Equipment_Assignment__c&quot;,&quot;ELTON__Equipment_Calendar__c&quot;,&quot;ELTON__Equipment_Chatter_Settings__c&quot;,&quot;ELTON__Equipment_Consumables__c&quot;,&quot;ELTON__Equipment_Count__c&quot;,&quot;ELTON__Equipment_Labels__c&quot;,&quot;ELTON__Equipment_Loan__c&quot;,&quot;ELTON__Equipment_Maintenance__c&quot;,&quot;ELTON__Equipment_Order_Line__c&quot;,&quot;ELTON__Equipment_Order__c&quot;,&quot;ELTON__Equipment_Quantity_Adjustment_History__c&quot;,&quot;ELTON__Equipment_Request_Preferences__c&quot;,&quot;ELTON__Equipment_Request__c&quot;,&quot;ELTON__Equipment_Reservation__c&quot;,&quot;ELTON__Equipment_Selection__c&quot;,&quot;ELTON__Equipment_Shipment__c&quot;,&quot;ELTON__Equipment_Status_Controls__c&quot;,&quot;ELTON__Equipment_Type__c&quot;,&quot;ELTON__Equipment__c&quot;,&quot;ELTON__Field_Mapping__c&quot;,&quot;ELTON__Insurance__c&quot;,&quot;ELTON__MobileScannerApplication__c&quot;,&quot;ELTON__Other__c&quot;,&quot;ELTON__Trigger_Control_Setting__c&quot;,&quot;ELTON__Users_on_Hold__c&quot;,&quot;EOMBillingAccountMap__c&quot;,&quot;EOMFieldMapping__c&quot;,&quot;ER_SR_Product_Portfolio__c&quot;,&quot;EdgeMart&quot;,&quot;EditionDefinition&quot;,&quot;Einstein_DataFlowJobId__c&quot;,&quot;ElectricityEmssnFctrSet&quot;,&quot;ElectronicMediaGroup&quot;,&quot;EmailContent&quot;,&quot;EmailMessage&quot;,&quot;EmailMessageRelation&quot;,&quot;EmailTemplate&quot;,&quot;Email_CFD_Templates__c&quot;,&quot;EmbeddedServiceConfig&quot;,&quot;EmbeddedServiceLiveAgent&quot;,&quot;EmbeddedServiceMenuSettings&quot;,&quot;EmpUserProvisionProcessErr&quot;,&quot;EmpUserProvisioningProcess&quot;,&quot;Employee&quot;,&quot;EmployeeAsset&quot;,&quot;EmployeeContact&quot;,&quot;EmployeeCrisisAssessment&quot;,&quot;EmployeeJob&quot;,&quot;EmployeeJobPosition&quot;,&quot;EngagementChannelType&quot;,&quot;EngagementProgram&quot;,&quot;EngagementProgramVersion&quot;,&quot;EnhancedEmailTemplate&quot;,&quot;EnhancedLetterhead&quot;,&quot;EnrolleeBenefit&quot;,&quot;EnrollmentEligibilityCriteria&quot;,&quot;Entitlement&quot;,&quot;EntityArchivingException&quot;,&quot;EntityArchivingJob&quot;,&quot;EntityArchivingSetup&quot;,&quot;EntityMilestone&quot;,&quot;EnvironmentHubMember&quot;,&quot;Equipment_De_Installation__c&quot;,&quot;Evaluate_Pharma_Tags__c&quot;,&quot;Event&quot;,&quot;Examination&quot;,&quot;Expense&quot;,&quot;ExpenseReport&quot;,&quot;ExpenseReportEntry&quot;,&quot;ExternalAccountHierarchy&quot;,&quot;Favorite_Event_Monitoring__c&quot;,&quot;Favorites__c&quot;,&quot;Feature_Switch__c&quot;,&quot;FeedItem&quot;,&quot;FieldServiceMobileExtension&quot;,&quot;FieldServiceMobileSettings&quot;,&quot;Field_Trip__Logistics__c&quot;,&quot;FileExtensionList__c&quot;,&quot;FinanceBalanceSnapshot&quot;,&quot;FinanceBook&quot;,&quot;FinancePeriod&quot;,&quot;FinanceTransaction&quot;,&quot;FinanceTransactionErrorLog&quot;,&quot;FinancialDeal&quot;,&quot;FinancialDealInteraction&quot;,&quot;FinancialDealParticipant&quot;,&quot;FinancialDealParty&quot;,&quot;FinancialDealProduct&quot;,&quot;FinclDealInteractionSummary&quot;,&quot;Fixed_Software_Costs__c&quot;,&quot;FlowDefinitionView&quot;,&quot;FlowOrchestrationHistory&quot;,&quot;FlowOrchestrationInstance&quot;,&quot;FlowOrchestrationStageInstance&quot;,&quot;FlowOrchestrationStepInstance&quot;,&quot;FlowOrchestrationWorkItem&quot;,&quot;FlowRecordTypeMapping__c&quot;,&quot;Folder&quot;,&quot;Forecasting_Filter_Setting__c&quot;,&quot;FrgtHaulingEmssnFctr&quot;,&quot;FrgtHaulingEnrgyUse&quot;,&quot;FtestAllContactPoint&quot;,&quot;FtestApplication2CInterface&quot;,&quot;FtestBigObjectLookup&quot;,&quot;FtestConcrete&quot;,&quot;FtestConcrete6&quot;,&quot;FtestConcrete7&quot;,&quot;FtestConcrete8&quot;,&quot;FtestContactPointEmail&quot;,&quot;FtestContactPointPhone&quot;,&quot;FtestZosUiPrototypeChild1&quot;,&quot;FtestZosUiPrototypeChild2&quot;,&quot;FtestZosUiPrototypeParent&quot;,&quot;FulfillmentOrder&quot;,&quot;FulfillmentOrderLineItem&quot;,&quot;GBLite__GBTestSettings__c&quot;,&quot;GBLite__GB_Global_Meta__c&quot;,&quot;GBLite__GB_Grid_Folder__c&quot;,&quot;GBLite__GB_Load_Cache__c&quot;,&quot;GBLite__GB_Save_Cache__c&quot;,&quot;GBLite__GB_User_Field_Settings__c&quot;,&quot;GBLite__GB_User_Filter_Settings__c&quot;,&quot;GBLite__GridBuddySettings__c&quot;,&quot;GBLite__GridBuddy_Usage_Analytics__c&quot;,&quot;GDPR_Language_Codes__c&quot;,&quot;GDPR_Regional_Mailbox__c&quot;,&quot;GDPR_Sender_Email__c&quot;,&quot;GECares_Community_Setting__c&quot;,&quot;GEDG__DG_Settings__c&quot;,&quot;GEDG__Deal_Guidance_Workspace__c&quot;,&quot;GEHCAskExpertQuestions__c&quot;,&quot;GEHCCommunityPublicGroup__c&quot;,&quot;GEHCDSA__Cat_Content_Junction__c&quot;,&quot;GEHCDSA__CategoryMobileConfig__c&quot;,&quot;GEHCDSA__Category__c&quot;,&quot;GEHCDSA__ContentReview__c&quot;,&quot;GEHCDSA__DSA_App_Setting__c&quot;,&quot;GEHCDSA__DSA_Playlist__c&quot;,&quot;GEHCDSA__MobileAppConfig__c&quot;,&quot;GEHCDSA__Playlist_Content_Junction__c&quot;,&quot;GEHCTopicCategoryHeaderCustomLabels__c&quot;,&quot;GEHCTrainingVideo__c&quot;,&quot;GEHC_All_Country_Region__c&quot;,&quot;GEHC_BC_Custom_Batch_Filter_Support__c&quot;,&quot;GEHC_Community_Topic_Translations__c&quot;,&quot;GEHC_ForsevaConfiguration__c&quot;,&quot;GEIDPBatchQuery__c&quot;,&quot;GEIDPContactMaskTestQuery__c&quot;,&quot;GEIDPContact_Opt_Out__c&quot;,&quot;GEIDPCountryListISO__c&quot;,&quot;GEIDPCustomAttributeClassInfo__c&quot;,&quot;GEIDPGSSAppIntegration__c&quot;,&quot;GEIDPGSSWelcomeMailLinks__c&quot;,&quot;GEIDPHLSEndPointURL__c&quot;,&quot;GEIDPLanguageList__c&quot;,&quot;GEIDPLocaleList__c&quot;,&quot;GEIDPLoginTextInfo__c&quot;,&quot;GEIDPProfileUpdateReqFieldsMapping__c&quot;,&quot;GEIDPProgressiveAppMandatoryParam__c&quot;,&quot;GEIDPRegistrationClassInfo__c&quot;,&quot;GEIDPSocial_Email_Domain__c&quot;,&quot;GEIDPUDXRegionConfig__c&quot;,&quot;GEIDP_ByPass_Components__c&quot;,&quot;GEIDP_Google_Captcha__c&quot;,&quot;GEIDP_LeadContactMapping__c&quot;,&quot;GEMDM__GEMDMCountryList__c&quot;,&quot;GEMDM__GEMDMCustomerSearch__c&quot;,&quot;GEMDM__GEMDMStateList__c&quot;,&quot;GEMDM__GE_MDM_Account_Field_Mapping__c&quot;,&quot;GEMDM__GE_MDM_Account_Search_Facets__c&quot;,&quot;GEMDM__GE_MDM_Account_Search_Field_Mapping__c&quot;,&quot;GEMDM__GE_MDM_Commercial_Hierarchy_Fields__c&quot;,&quot;GEMDM__GE_MDM_DUNS_Number_API_Name__c&quot;,&quot;GEMDM__GE_MDM_Event_Processing_Field_Mapping__c&quot;,&quot;GEMDM__GE_MDM_Event_Processing__c&quot;,&quot;GEMDM__GE_MDM_Failure_Notification_Recipient__c&quot;,&quot;GEMDM__GE_MDM_General_Package_Settings__c&quot;,&quot;GEMDM__GE_MDM_Integration_Activity_Settings__c&quot;,&quot;GEMDM__GE_MDM_MDM_Integration_Settings__c&quot;,&quot;GEMDM__GE_MDM_Master_Approved_Record_Type__c&quot;,&quot;GEMDM__GE_MDM_Merge_History__c&quot;,&quot;GEMDM__GE_MDM_OneKYC_Address_Label__c&quot;,&quot;GEMDM__GE_MDM_OneKYC_Inputs__c&quot;,&quot;GEMDM__GE_MDM_OneKYC_Sentry_Web_Services__c&quot;,&quot;GEMDM__GE_MDM_Start_KYC_Record_Type__c&quot;,&quot;GEMDM__GE_MDM_Subscription_Web_Service_Inputs__c&quot;,&quot;GEMDM__GE_MDM_Upload_Documents__c&quot;,&quot;GE_Goal__c&quot;,&quot;GE_HC_MT_Catalog__c&quot;,&quot;GE_HC_MT_PTDModality__c&quot;,&quot;GE_HC_MT_PTD_AgendaModuleTable__c&quot;,&quot;GE_HC_MT_SFDCForm__c&quot;,&quot;GE_HC_MT_TrainingMasterSearchFilters__c&quot;,&quot;GE_HC_MT_TrainingMaster__c&quot;,&quot;GE_HC_MT_Trigger_Setting__c&quot;,&quot;GE_X_Sell__GE_xSell_Account_Field_Mapping__c&quot;,&quot;GE_X_Sell__GE_xSell_MDM_Account_Criteria__c&quot;,&quot;GE_X_Sell__GE_xSell_Opportunity_Field_Mapping__c&quot;,&quot;GE_X_Sell__GE_xSell_Referral_Field_Mapping__c&quot;,&quot;GE_X_Sell__Lead_Sharing_Statistics_c__x&quot;,&quot;GE_X_Sell__Opportunity__x&quot;,&quot;GE_X_Sell__Referral__x&quot;,&quot;GE_X_Sell__User_Manager_Tree__c&quot;,&quot;GGO_NUTS_Settings__c&quot;,&quot;GON_Notify__c&quot;,&quot;GON_SO__c&quot;,&quot;GPMEndpoints__c&quot;,&quot;GPMRegionMapping__c&quot;,&quot;GPM_Product_Tier_Map__c&quot;,&quot;General_Settings__c&quot;,&quot;GeneratedDocument&quot;,&quot;GeneratedDocumentSection&quot;,&quot;GeneratedWaste&quot;,&quot;GenericVisitTask&quot;,&quot;GenericVisitTaskContext&quot;,&quot;Geo_Status__c&quot;,&quot;Global_EQ_AutoReapprovals__c&quot;,&quot;Global_Geography_Hierarchy__c&quot;,&quot;Global_Product_Hierarchy__c&quot;,&quot;Global_Region_CPQ_Settings__c&quot;,&quot;Global_Region_Name__c&quot;,&quot;Global_Region_Term_vs_Annual_Amount__c&quot;,&quot;Global_Region__c&quot;,&quot;Global_Region_for_Automatic_Oppty__c&quot;,&quot;Global_Region_for_Order_to_Oppty_Update__c&quot;,&quot;Global_Roll_UP_P_L_Definition__c&quot;,&quot;Global_Sub_Region_Geography_Names__c&quot;,&quot;GnrcVstKeyPerformanceInd&quot;,&quot;GnrcVstTaskContextRelation&quot;,&quot;Goal_Action__c&quot;,&quot;GroundTravelEmssnFctr&quot;,&quot;GroundTravelEnrgyUse&quot;,&quot;GuestBuyerProfile&quot;,&quot;HCIT_Product_Portfolio_Based_Approvals__c&quot;,&quot;HFS_Rate_Card__c&quot;,&quot;HealthCareDiagnosis&quot;,&quot;HealthCareProcedure&quot;,&quot;HealthCondition&quot;,&quot;HealthConditionDetail&quot;,&quot;HealthcareFacility&quot;,&quot;HealthcareFacilityNetwork&quot;,&quot;HealthcarePayerNetwork&quot;,&quot;HealthcarePractitionerFacility&quot;,&quot;HealthcareProvider&quot;,&quot;HealthcareProviderNpi&quot;,&quot;HealthcareProviderSpecialty&quot;,&quot;HealthcareProviderTaxonomy&quot;,&quot;Helium_Information__c&quot;,&quot;Holiday&quot;,&quot;HomePageNotification__c&quot;,&quot;HotelStayEmssnFctr&quot;,&quot;HotelStayEnrgyUse&quot;,&quot;IBAutomation__c&quot;,&quot;IB_Asset_Attribute__c&quot;,&quot;IB_Asset_Custom_Access__c&quot;,&quot;IB_Asset__c&quot;,&quot;IB_Product__c&quot;,&quot;IB_Products_Subregions_Mapping__c&quot;,&quot;IB_Settings__c&quot;,&quot;IB_Source__c&quot;,&quot;IBautomationAccounts__c&quot;,&quot;IC_Unit_Services__c&quot;,&quot;IDQ_Country_List__c&quot;,&quot;IMO5IntegrationCS__c&quot;,&quot;IPAddressRange&quot;,&quot;ITOKYC_AcctStatePostalReq__c&quot;,&quot;ITOKYC_AdminProfileList__c&quot;,&quot;ITOKYC_EmailDL__c&quot;,&quot;ITOKYC_FMModalityEmails__c&quot;,&quot;ITOKYC_ITOTeamMapProvice__c&quot;,&quot;ITOKYC_Queue_Desc__c&quot;,&quot;ITOKYC_RegionOperation__c&quot;,&quot;ITOKYC_RegionValues__c&quot;,&quot;ITOKYC_SHS_Queue_Desc_Sendback__c&quot;,&quot;ITOKYC_SHS_Queue_Desc__c&quot;,&quot;ITOKYC_SelectTeamMapping__c&quot;,&quot;Identifier&quot;,&quot;IdentityDocument&quot;,&quot;IdentityResolution&quot;,&quot;Image&quot;,&quot;InStoreLocation&quot;,&quot;Incident&quot;,&quot;IncludedLicenseDefinition&quot;,&quot;India_Region_Quote_Setting__c&quot;,&quot;Individual&quot;,&quot;IndividualApplication&quot;,&quot;InflationRate&quot;,&quot;InfoAuthRequestForm&quot;,&quot;InfoAuthorizationRequest&quot;,&quot;InsightsApplication&quot;,&quot;InsightsExternalData&quot;,&quot;InsightsExternalDataPart&quot;,&quot;InspectionAssessmentInd&quot;,&quot;InspectionType&quot;,&quot;InspectionViolation&quot;,&quot;Install_Cost__c&quot;,&quot;Installation_Attachment_Type__c&quot;,&quot;Installation_Contacts__c&quot;,&quot;Installation_For_CFD_Mapping__c&quot;,&quot;Installation_Settings__c&quot;,&quot;Installation__c&quot;,&quot;InsuranceClaimAsset&quot;,&quot;InsurancePolicy&quot;,&quot;InsurancePolicyAsset&quot;,&quot;InsurancePolicyCoverage&quot;,&quot;InsurancePolicyMemberAsset&quot;,&quot;InsurancePolicyOwner&quot;,&quot;InsurancePolicyParticipant&quot;,&quot;InsurancePolicySurcharge&quot;,&quot;InsurancePolicyTransaction&quot;,&quot;InsuranceProfile&quot;,&quot;IntegrationFieldMap__c&quot;,&quot;Integration_General_Settings__c&quot;,&quot;Integration_Id_Values__c&quot;,&quot;Integration_System_Logs_Setting__c&quot;,&quot;Interaction&quot;,&quot;InteractionAttendee&quot;,&quot;InteractionParticipant&quot;,&quot;InteractionSumDiscussedAccount&quot;,&quot;InteractionSummary&quot;,&quot;InteractionSummaryParticipant&quot;,&quot;InternalOrganizationUnit&quot;,&quot;Invoice&quot;,&quot;InvoiceAddressGroup&quot;,&quot;InvoiceLine&quot;,&quot;Japan_Sales_Service_MCT_BR__c&quot;,&quot;JobFamily&quot;,&quot;JobPosition&quot;,&quot;JobProfile&quot;,&quot;JournalSubType&quot;,&quot;JournalType&quot;,&quot;KBMAX__Quote_Product__c&quot;,&quot;KBMAX__Quote__c&quot;,&quot;KnowledgeArticleVersion&quot;,&quot;LCT__c&quot;,&quot;LSAccountChatterPost__c&quot;,&quot;LS_Country_List__c&quot;,&quot;LS_German_Managers__c&quot;,&quot;LS_State_List__c&quot;,&quot;LTEVAlidationValues__c&quot;,&quot;LandingPage&quot;,&quot;LandingPageContent&quot;,&quot;Language_List__c&quot;,&quot;Language_To_ISO_Code__c&quot;,&quot;Languages_Available__c&quot;,&quot;Lead&quot;,&quot;Lead_Product_Line_Item__c&quot;,&quot;LearnerSkill&quot;,&quot;LearningItem&quot;,&quot;LegalEntity&quot;,&quot;Lens&quot;,&quot;LicensingError&quot;,&quot;LicensingRequest&quot;,&quot;LicensingRequestOrderItem&quot;,&quot;LicensingSnapshotRequest&quot;,&quot;Line_Item_Billing_Term__c&quot;,&quot;Line_Item_Product_Pricing_Detail__c&quot;,&quot;ListEmail&quot;,&quot;ListEmailSentResult&quot;,&quot;LiveAgentSession&quot;,&quot;LiveChatSensitiveDataRule&quot;,&quot;LiveChatTranscript&quot;,&quot;LiveChatVisitor&quot;,&quot;LoanApplicant&quot;,&quot;LoanApplicantAddress&quot;,&quot;LoanApplicantAsset&quot;,&quot;LoanApplicantDeclaration&quot;,&quot;LoanApplicantEmployment&quot;,&quot;LoanApplicantIncome&quot;,&quot;LoanApplicantLiability&quot;,&quot;LoanApplicationAsset&quot;,&quot;LoanApplicationFinancial&quot;,&quot;LoanApplicationLiability&quot;,&quot;LoanApplicationProperty&quot;,&quot;LoanApplicationTitleHolder&quot;,&quot;LocWaitlistMsgTemplate&quot;,&quot;Location&quot;,&quot;LocationGroup&quot;,&quot;LocationGroupAssignment&quot;,&quot;LocationTrustMeasure&quot;,&quot;LocationWaitlist&quot;,&quot;LocationWaitlistedParty&quot;,&quot;LoyaltyLedger&quot;,&quot;LoyaltyMemberCurrency&quot;,&quot;LoyaltyMemberTier&quot;,&quot;LoyaltyPartnerProduct&quot;,&quot;LoyaltyPgmGroupMbrRlnsp&quot;,&quot;LoyaltyProgram&quot;,&quot;LoyaltyProgramCurrency&quot;,&quot;LoyaltyProgramMbrPromotion&quot;,&quot;LoyaltyProgramMember&quot;,&quot;LoyaltyProgramMemberCase&quot;,&quot;LoyaltyProgramPartner&quot;,&quot;LoyaltyProgramProcess&quot;,&quot;LoyaltyProgramProcessParameter&quot;,&quot;LoyaltyProgramProcessRule&quot;,&quot;LoyaltyTier&quot;,&quot;LoyaltyTierBenefit&quot;,&quot;LoyaltyTierGroup&quot;,&quot;MCTCustomSettings__c&quot;,&quot;MCTSalesArea__c&quot;,&quot;MCT_Europe_Report_Language__c&quot;,&quot;MCT_Integration_User__c&quot;,&quot;MDM_ManageAccountConfig__c&quot;,&quot;MPM4_BASE__Milestone1_Expense__c&quot;,&quot;MPM4_BASE__Milestone1_Log__c&quot;,&quot;MPM4_BASE__Milestone1_Milestone__c&quot;,&quot;MPM4_BASE__Milestone1_Program__c&quot;,&quot;MPM4_BASE__Milestone1_Project__c&quot;,&quot;MPM4_BASE__Milestone1_Settings__c&quot;,&quot;MPM4_BASE__Milestone1_Task__c&quot;,&quot;MPM4_BASE__Milestone1_Time__c&quot;,&quot;MPM4_BASE__Risk__c&quot;,&quot;MPM4_BASE__TH_User_Settings__c&quot;,&quot;MS_BillingTerm_Template_Items__c&quot;,&quot;MS_BillingTerm_Template__c&quot;,&quot;MS_BillingTerm__c&quot;,&quot;MUST_Integration_Country_Mapping__c&quot;,&quot;Macro&quot;,&quot;Magnetic_Containment__c&quot;,&quot;MaintenanceAsset&quot;,&quot;MaintenancePlan&quot;,&quot;MaintenanceWorkRule&quot;,&quot;ManagedContentVariant&quot;,&quot;Manufacturing_Site_SPC__c&quot;,&quot;MarketSegment&quot;,&quot;MarketSegmentActivation&quot;,&quot;MarketingAppExtActivity&quot;,&quot;MarketingAppExtAssignment&quot;,&quot;MarketingAppExtension&quot;,&quot;MarketingForm&quot;,&quot;MarketingLink&quot;,&quot;MarketingLinkContent&quot;,&quot;MediaChannel&quot;,&quot;MediaContentTitle&quot;,&quot;Medication&quot;,&quot;MedicationRequest&quot;,&quot;MedicationStatement&quot;,&quot;MedicinalIngredient&quot;,&quot;MemberBenefit&quot;,&quot;MemberPlan&quot;,&quot;MessagingChannel&quot;,&quot;MessagingDeliveryError&quot;,&quot;MessagingEndUser&quot;,&quot;MessagingSession&quot;,&quot;MessagingTemplate&quot;,&quot;MktCalculatedInsight&quot;,&quot;MobileSettingsAssignment&quot;,&quot;ModalityList__c&quot;,&quot;Modality_For_Eset_Link__c&quot;,&quot;Modality_For_VSA_Finish__c&quot;,&quot;Modality__c&quot;,&quot;Monitoring_Assignment_Matrix__c&quot;,&quot;Monthly_Operating_Rates__c&quot;,&quot;MultipartyInfoAuthRequest&quot;,&quot;MyPBackOfficeTask__c&quot;,&quot;My_Favorites_Settings__c&quot;,&quot;NETDET_IP_Addresses__c&quot;,&quot;NL_Price_Matrix_Japan__c&quot;,&quot;NamespaceRegistry&quot;,&quot;NeedHelpLinks__c&quot;,&quot;NetworkReferencedObject&quot;,&quot;Note&quot;,&quot;Notification_Criteria_Fields__c&quot;,&quot;Notification_Defaults__c&quot;,&quot;Notification_Framework_Settings__c&quot;,&quot;Notification_Items__c&quot;,&quot;Notification_Queue_Email__c&quot;,&quot;Notification_Queue__c&quot;,&quot;Notification_Record_Ownership__c&quot;,&quot;Notification_Rule__c&quot;,&quot;Notification_Setting__c&quot;,&quot;Notification_Template_Fields__c&quot;,&quot;OAuthCredentials__c&quot;,&quot;OAuthToken__c&quot;,&quot;OCCR_AddConfig_Parameter__c&quot;,&quot;OCCR_Reporting__c&quot;,&quot;OCLI_LostReason_Settings__c&quot;,&quot;OCLI_Status_Settings__c&quot;,&quot;OCLI_Type_Settings__c&quot;,&quot;ODS_Product_Protfolio__c&quot;,&quot;OP_Target_Master__c&quot;,&quot;ObjectStateDefinition&quot;,&quot;ObjectStateTransition&quot;,&quot;ObjectStateValue&quot;,&quot;ObjectTerritory2Association&quot;,&quot;Object_Landing_Page_Settings__c&quot;,&quot;OccupationLicenseApplication&quot;,&quot;OcrDocumentScanResult&quot;,&quot;Omitted_Functionality__c&quot;,&quot;OmniDataPack&quot;,&quot;OmniDataTransform&quot;,&quot;OmniDataTransformItem&quot;,&quot;OmniESignatureTemplate&quot;,&quot;OmniProcess&quot;,&quot;OmniProcessCompilation&quot;,&quot;OmniProcessElement&quot;,&quot;OmniProcessTransientData&quot;,&quot;OmniScriptSavedSession&quot;,&quot;OmniUiCard&quot;,&quot;OpenActivity&quot;,&quot;OperatingHours&quot;,&quot;OperatingHoursHoliday&quot;,&quot;OperatingUnitMap__c&quot;,&quot;Opp_Close_Step__c&quot;,&quot;Opp_Close_To_Future_RecordType_Settings__c&quot;,&quot;Opp_Products_Report__c&quot;,&quot;Opp_Sync_Mail__c&quot;,&quot;Opp_Tender_Status_Settings__c&quot;,&quot;Opportunity&quot;,&quot;OpportunityContactRole&quot;,&quot;OpportunityContactRoleSuggestionInsight&quot;,&quot;OpportunityHistory&quot;,&quot;OpportunityIBAssetJunction__c&quot;,&quot;OpportunityInsight&quot;,&quot;OpportunityLineItem&quot;,&quot;OpportunityLineItemSchedule&quot;,&quot;OpportunityParticipant&quot;,&quot;OpportunityPartner&quot;,&quot;OpportunitySplit&quot;,&quot;OpportunityTeamMember&quot;,&quot;Opportunity_Amendment_Request_Settings__c&quot;,&quot;Opportunity_Amendment_Result_Settings__c&quot;,&quot;Opportunity_Competitor_Setting__c&quot;,&quot;Opportunity_Competitor__c&quot;,&quot;Opportunity_GE_Bid_Decision_Settings__c&quot;,&quot;Opportunity_Order_Package__c&quot;,&quot;Opportunity_Owner_History__c&quot;,&quot;Opportunity_Sales_Forecast_Category__c&quot;,&quot;Opportunity_Step_settings__c&quot;,&quot;Opportunity_Tender_Type_Settings__c&quot;,&quot;Opportunity_owner_update_settings__c&quot;,&quot;Oppty_Primary_Reason_for_No_Bid_Settings__c&quot;,&quot;Oppty_Territory_Mapping__c&quot;,&quot;Order&quot;,&quot;OrderAction&quot;,&quot;OrderAdjustmentGroup&quot;,&quot;OrderAdjustmentGroupSummary&quot;,&quot;OrderChangeLog&quot;,&quot;OrderDeliveryGroup&quot;,&quot;OrderDeliveryGroupSummary&quot;,&quot;OrderDeliveryMethod&quot;,&quot;OrderItem&quot;,&quot;OrderItemAdjustmentLineItem&quot;,&quot;OrderItemAdjustmentLineSummary&quot;,&quot;OrderItemConsumptionRate&quot;,&quot;OrderItemConsumptionSchedule&quot;,&quot;OrderItemSummary&quot;,&quot;OrderItemSummaryChange&quot;,&quot;OrderItemTaxLineItem&quot;,&quot;OrderItemTaxLineItemSummary&quot;,&quot;OrderPaymentSummary&quot;,&quot;OrderPreview_Permission__c&quot;,&quot;OrderPreview_Select_Template__c&quot;,&quot;OrderRTLOV__c&quot;,&quot;OrderSummary&quot;,&quot;OrderSummaryRoutingSchedule&quot;,&quot;Order_Change_Detail__c&quot;,&quot;Order_Detail_Task_LTV_Code__c&quot;,&quot;Order_Detail_Task__c&quot;,&quot;Order_Forecast_Category_Settings__c&quot;,&quot;Order_Forecast_Dimension__c&quot;,&quot;Order_Forecast_History__c&quot;,&quot;Order_Forecast_OP__c&quot;,&quot;Order_Header_Global__c&quot;,&quot;Order_Header__c&quot;,&quot;Order_Notification__c&quot;,&quot;Order_Preview_Mandatory_Fields__c&quot;,&quot;Order_RTS_Interface_Log__c&quot;,&quot;Order_Shortage_Detail__c&quot;,&quot;Order_Status__c&quot;,&quot;Order__c&quot;,&quot;OrgMetric&quot;,&quot;OrgMetricScanResult&quot;,&quot;OrgMetricScanSummary&quot;,&quot;OtherComponentTask&quot;,&quot;OtherEmssnFctrSet&quot;,&quot;OtherEmssnFctrSetItem&quot;,&quot;PEGA_Order_Package__c&quot;,&quot;POS_Email_Notifications__c&quot;,&quot;Parent_Opportunity_Settings__c&quot;,&quot;Parent_Opportunity__c&quot;,&quot;Parent_Quote_GR_Mapping__c&quot;,&quot;PartnerFundAllocation&quot;,&quot;PartnerFundClaim&quot;,&quot;PartnerFundRequest&quot;,&quot;PartnerMarketingBudget&quot;,&quot;PartyConsent&quot;,&quot;PartyIncome&quot;,&quot;PatientHealthReaction&quot;,&quot;PatientImmunization&quot;,&quot;PatientMedicalProcedure&quot;,&quot;PatientMedicalProcedureDetail&quot;,&quot;PatientMedicationDosage&quot;,&quot;Payment&quot;,&quot;PaymentApplicationMethod&quot;,&quot;PaymentAuthAdjustment&quot;,&quot;PaymentAuthorization&quot;,&quot;PaymentBatchRun&quot;,&quot;PaymentGateway&quot;,&quot;PaymentGatewayLog&quot;,&quot;PaymentLineInvoice&quot;,&quot;PaymentPolicy&quot;,&quot;PaymentSchedule&quot;,&quot;PaymentScheduleItem&quot;,&quot;PaymentTerm&quot;,&quot;PaymentTermItem&quot;,&quot;PaymentTreatment&quot;,&quot;PcmtEmssnFctrSet&quot;,&quot;PcmtEmssnFctrSetItem&quot;,&quot;PegaPE__Pega_Gadget_Configuration__c&quot;,&quot;Pega_Global_Regions__c&quot;,&quot;PendingOrderSummary&quot;,&quot;People_soft_field_Maping__c&quot;,&quot;PersonAccount&quot;,&quot;PersonEducation&quot;,&quot;PersonEmployment&quot;,&quot;PersonExamination&quot;,&quot;PersonLanguage&quot;,&quot;PersonLifeEvent&quot;,&quot;PersonList&quot;,&quot;PersonListMember&quot;,&quot;PersonName&quot;,&quot;PgmRebateTypBnftMapping&quot;,&quot;PlanBenefit&quot;,&quot;PlanBenefitItem&quot;,&quot;PlatformLicenseDefinition&quot;,&quot;PoS_Term_Opportunity_PortFolio_Matrix__c&quot;,&quot;Policy_Risk_Flag__c&quot;,&quot;Polygon&quot;,&quot;Postal_Code__c&quot;,&quot;Pre_Install_Items__c&quot;,&quot;Pre_Order_Consultation_POC__c&quot;,&quot;Precise_Address__c&quot;,&quot;PreliminaryApplicationRef&quot;,&quot;Prevent_Task_Types_Duplicate__c&quot;,&quot;PriceAdjustmentSchedule&quot;,&quot;Pricebook2&quot;,&quot;PricebookEntry&quot;,&quot;Primary_Secondary_ReasonMapping__c&quot;,&quot;Probe_and_Coil_Addition__c&quot;,&quot;Probe_and_Coil_Data1__c&quot;,&quot;Problem&quot;,&quot;ProblemIncident&quot;,&quot;Problem_Case_Scoring__c&quot;,&quot;ProcessException&quot;,&quot;ProcessInstanceHistory&quot;,&quot;ProcessInstanceStep&quot;,&quot;ProcessInstanceWorkitem&quot;,&quot;Producer&quot;,&quot;ProducerCommission&quot;,&quot;ProducerPolicyAssignment&quot;,&quot;Product2&quot;,&quot;Product2DataTranslation&quot;,&quot;Product2__c&quot;,&quot;ProductAttribute&quot;,&quot;ProductAttributeSet&quot;,&quot;ProductAttributeSetItem&quot;,&quot;ProductAttributeSetProduct&quot;,&quot;ProductAvailabilityProjection&quot;,&quot;ProductCatalog&quot;,&quot;ProductCategory&quot;,&quot;ProductCategoryDataTranslation&quot;,&quot;ProductCategoryMedia&quot;,&quot;ProductCategoryProduct&quot;,&quot;ProductConsumed&quot;,&quot;ProductConsumedState&quot;,&quot;ProductConsumptionSchedule&quot;,&quot;ProductCoverage&quot;,&quot;ProductCoverageLimit&quot;,&quot;ProductFulfillmentLocation&quot;,&quot;ProductItem&quot;,&quot;ProductItemTransaction&quot;,&quot;ProductLicenseMap&quot;,&quot;ProductMedia&quot;,&quot;ProductQuantityRule&quot;,&quot;ProductRequest&quot;,&quot;ProductRequestLineItem&quot;,&quot;ProductRequired&quot;,&quot;ProductSellingModel&quot;,&quot;ProductSellingModelOption&quot;,&quot;ProductServiceCampaign&quot;,&quot;ProductServiceCampaignItem&quot;,&quot;ProductTransfer&quot;,&quot;ProductTransferState&quot;,&quot;ProductWarrantyTerm&quot;,&quot;Product_Access__c&quot;,&quot;Product_Activity_Detail__c&quot;,&quot;Product_Area_Code_Details__c&quot;,&quot;Product_Attribute_Value_Ext_1__c&quot;,&quot;Product_Charge_Type_Mapping__c&quot;,&quot;Product_Commercial_LifeCycle__c&quot;,&quot;Product_Complexity_Score_Settings__c&quot;,&quot;Product_Country_Material_Setting__c&quot;,&quot;Product_Country_Name_Setting__c&quot;,&quot;Product_Integration_Object__c&quot;,&quot;Product_Lead_Time__c&quot;,&quot;Product_Master__c&quot;,&quot;Product_Portfolio__c&quot;,&quot;Product_Pricing_Detail__c&quot;,&quot;Product_Pricing_Information__c&quot;,&quot;Product_Score_Chevron_Settings__c&quot;,&quot;Product_Special_Access_Request__c&quot;,&quot;Product_Special_Access__c&quot;,&quot;ProgramRebateTypPayoutSrc&quot;,&quot;ProgramRebateType&quot;,&quot;ProgramRebateTypeBenefit&quot;,&quot;ProgramRebateTypeFilter&quot;,&quot;ProgramRebateTypePayout&quot;,&quot;ProgramRebateTypeProduct&quot;,&quot;ProgramRebateTypeReference&quot;,&quot;Project_Contacts__c&quot;,&quot;Project_Stakeholder__c&quot;,&quot;Promotion&quot;,&quot;PromotionChannel&quot;,&quot;PromotionLoyaltyPtnrProdt&quot;,&quot;PromotionMarketSegment&quot;,&quot;PromotionProduct&quot;,&quot;PromotionProductCategory&quot;,&quot;PromotionQualifier&quot;,&quot;PromotionSegment&quot;,&quot;PromotionSegmentBuyerGroup&quot;,&quot;PromotionSegmentSalesStore&quot;,&quot;PromotionTarget&quot;,&quot;Proposal_Line_Item_Billing_Term__c&quot;,&quot;ProrationPolicy&quot;,&quot;ProviderNetworkContract&quot;,&quot;ProviderNetworkTier&quot;,&quot;ProviderSearchSyncLog&quot;,&quot;ProvisioningRun&quot;,&quot;ProvisioningRunEvent&quot;,&quot;PublicComplaint&quot;,&quot;PublicProgram&quot;,&quot;PurchaseQuantityRule&quot;,&quot;PurchaserPlan&quot;,&quot;PurchaserPlanAssn&quot;,&quot;QuickText&quot;,&quot;Quote&quot;,&quot;QuoteExtension__c&quot;,&quot;QuoteItemTaxItem&quot;,&quot;QuoteLineItem&quot;,&quot;QuoteStatusDetails__c&quot;,&quot;Quote_Contact_Role__c&quot;,&quot;Quote_Defaults__c&quot;,&quot;Quote_Remediate1__c&quot;,&quot;Quote_Remediate2__c&quot;,&quot;Quote_Remediate__c&quot;,&quot;RR_from_Task_Custom_Setting__c&quot;,&quot;RTSInterfaceCS__c&quot;,&quot;RTS_Enhancement__c&quot;,&quot;RebateMemberProductAggregate&quot;,&quot;RebatePayment&quot;,&quot;RebatePayoutAdjustment&quot;,&quot;RebateProgram&quot;,&quot;RebateProgramMember&quot;,&quot;RebateProgramMemberPayout&quot;,&quot;RebateProgramPayoutPeriod&quot;,&quot;RecalcDateUpdate__c&quot;,&quot;ReceivedDocument&quot;,&quot;Recommendation&quot;,&quot;RecordAction&quot;,&quot;RecordAlert&quot;,&quot;RecordMergeHistory&quot;,&quot;RecordType&quot;,&quot;RecordsetFilterCriteria&quot;,&quot;RecordsetFilterCriteriaRule&quot;,&quot;RefrigerantEmssnFctr&quot;,&quot;Refund&quot;,&quot;RefundLinePayment&quot;,&quot;RegAuthorizationTypeProduct&quot;,&quot;Region_For_VSA_Finish__c&quot;,&quot;Region_List__c&quot;,&quot;Region_Listing__c&quot;,&quot;Region_Settings__c&quot;,&quot;Regions_For_Eset_Link__c&quot;,&quot;RegulatoryAuthority&quot;,&quot;RegulatoryAuthorizationType&quot;,&quot;RegulatoryCode&quot;,&quot;RegulatoryCodeAssessmentInd&quot;,&quot;RegulatoryCodeViolation&quot;,&quot;RegulatoryTrxnFee&quot;,&quot;RegulatoryTrxnFeeItem&quot;,&quot;RegulatoryTrxnFeePayment&quot;,&quot;Reltio_Attribute_Data_type_mapping__c&quot;,&quot;Reltio_Country_Attributes__c&quot;,&quot;Reminder_Time_List__c&quot;,&quot;RentalCarEmssnFctr&quot;,&quot;RentalCarEnrgyUse&quot;,&quot;ReplyText&quot;,&quot;Report&quot;,&quot;ReportAnomalyEventStore&quot;,&quot;Reservation_buffer_days__c&quot;,&quot;ResidentialLoanApplication&quot;,&quot;ResourceAbsence&quot;,&quot;ResourcePreference&quot;,&quot;Resource_Request_Record_Types__c&quot;,&quot;RetailLocationGroup&quot;,&quot;RetailStore&quot;,&quot;RetailStoreGroupAssignment&quot;,&quot;RetailStoreKpi&quot;,&quot;RetailVisitKpi&quot;,&quot;ReturnOrder&quot;,&quot;ReturnOrderItemAdjustment&quot;,&quot;ReturnOrderItemTax&quot;,&quot;ReturnOrderLineItem&quot;,&quot;RevRecogTreatmentItemGroup&quot;,&quot;RevenueDistributionMethod&quot;,&quot;RevenueElement&quot;,&quot;RevenueElementDistribution&quot;,&quot;RevenueRecogTreatmentItem&quot;,&quot;RevenueRecognitionPolicy&quot;,&quot;RevenueRecognitionTreatment&quot;,&quot;RevenueTransactionErrorLog&quot;,&quot;Revenue__c&quot;,&quot;ReviewRequests__c&quot;,&quot;SCORE_Approval_Threshold_Matrix__c&quot;,&quot;SCORE_Policy_6_0__c&quot;,&quot;SCORE_Product_Portfolio_Matrix__c&quot;,&quot;SDI_Business_Type__c&quot;,&quot;SFDCFieldTranslations__c&quot;,&quot;SFDC_Siebel_Integration__c&quot;,&quot;SF_License_Costs__c&quot;,&quot;SMAXAttributeSettings__c&quot;,&quot;SSO_API__c&quot;,&quot;SSO_ID__c&quot;,&quot;SVMXC__Batch_Lot_Master__c&quot;,&quot;SVMXC__Config_Change_Detail__c&quot;,&quot;SVMXC__Field_Default_Rules__c&quot;,&quot;SVMXC__SM_Application_Feature__c&quot;,&quot;SVMXC__SM_Appointment_Status__c&quot;,&quot;SVMXC__SM_Batch_Lot__c&quot;,&quot;SVMXC__SM_Change_Order_Configuration__c&quot;,&quot;SVMXC__SM_Change_Order_Criteria__c&quot;,&quot;SVMXC__SM_Change_Order_Line__c&quot;,&quot;SVMXC__SM_Change_Order_Log__c&quot;,&quot;SVMXC__SM_Change_Order_Parts__c&quot;,&quot;SVMXC__SM_Change_Order__c&quot;,&quot;SVMXC__SM_Crew_Resource__c&quot;,&quot;SVMXC__SM_Crew__c&quot;,&quot;SVMXC__SM_Feature_Permission__c&quot;,&quot;SVMXC__SM_IG_Job_Child__c&quot;,&quot;SVMXC__SM_IG_Job_Request__c&quot;,&quot;SVMXC__SM_IoT_Field_Mapping__c&quot;,&quot;SVMXC__SM_Recent_Items__c&quot;,&quot;SVMXC__SM_SB_Queue_Inbound__c&quot;,&quot;SVMXC__SM_SB_Queue_Outbound__c&quot;,&quot;SVMXC__SM_SFA_Process__c&quot;,&quot;SVMXC__SM_SFMTransactionSync__c&quot;,&quot;SVMXC__SPM_Mean_Time_Between_Failure__c&quot;,&quot;SWB_General_Settings__c&quot;,&quot;SalesAgreement&quot;,&quot;SalesAgreementProduct&quot;,&quot;SalesAgreementProductSchedule&quot;,&quot;SalesChannel&quot;,&quot;Sales_Coach_Activity__c&quot;,&quot;Sales_Coach_Admin__c&quot;,&quot;Sales_Coach_Role__c&quot;,&quot;Sales_Coach_Section_Item__c&quot;,&quot;Sales_Coach_Section__c&quot;,&quot;Sales_Coach_Stage__c&quot;,&quot;Salesforce_General_Setting__c&quot;,&quot;Schedule__c&quot;,&quot;SchedulingConstraint&quot;,&quot;Scope3CrbnFtprnt&quot;,&quot;Scope3EmssnSrc&quot;,&quot;Scope3PcmtItem&quot;,&quot;Scope3PcmtSummary&quot;,&quot;Score_Global_Flag_Help_Menu_Settings__c&quot;,&quot;Scorecard&quot;,&quot;ScorecardAssociation&quot;,&quot;ScorecardMetric&quot;,&quot;ScratchOrgInfo&quot;,&quot;SearchPromotionRule&quot;,&quot;SecuritiesHolding&quot;,&quot;Seller&quot;,&quot;Send_Email_to_Users_Settings__c&quot;,&quot;Send_Welcome_Email_to_Users__c&quot;,&quot;SerializedProduct&quot;,&quot;SerializedProductTransaction&quot;,&quot;ServiceAppointment&quot;,&quot;ServiceAppointmentCapacityUsage&quot;,&quot;ServiceContract&quot;,&quot;ServiceCrew&quot;,&quot;ServiceCrewMember&quot;,&quot;ServiceReport&quot;,&quot;ServiceResource&quot;,&quot;ServiceResourceCapacity&quot;,&quot;ServiceResourcePreference&quot;,&quot;ServiceResourceSkill&quot;,&quot;ServiceTerritory&quot;,&quot;ServiceTerritoryLocation&quot;,&quot;ServiceTerritoryMember&quot;,&quot;ServiceTerritoryWorkType&quot;,&quot;Service_CPQ_General_Setting__c&quot;,&quot;Service_Contract_Schedule_Detail__c&quot;,&quot;Service_Oppty_Country_with_USD__c&quot;,&quot;Service_Region_Country_List__c&quot;,&quot;Service_Request__c&quot;,&quot;Service_Staging_Object__c&quot;,&quot;SessionHijackingEventStore&quot;,&quot;SettingUsageDefinition&quot;,&quot;SettingUsageMap&quot;,&quot;SetupAssistantStep&quot;,&quot;Shadow_Activity_Detail__c&quot;,&quot;Shadow_Activity__c&quot;,&quot;SharingRecordCollection&quot;,&quot;SharingRecordCollectionItem&quot;,&quot;Shift&quot;,&quot;ShiftPattern&quot;,&quot;ShiftPatternEntry&quot;,&quot;ShiftSchedulingOperation&quot;,&quot;ShiftTemplate&quot;,&quot;Shipment&quot;,&quot;ShipmentItem&quot;,&quot;Shipment_Detail__c&quot;,&quot;Siebel_General_Settings__c&quot;,&quot;SignatureTask&quot;,&quot;SignatureTaskLineItem&quot;,&quot;SiqExchangeConnection&quot;,&quot;Site_Ready_Risk__c&quot;,&quot;SkillLevelDefinition&quot;,&quot;SkillRequirement&quot;,&quot;Skip_Validation_for_Lead_Conversion__c&quot;,&quot;Snippet&quot;,&quot;SnippetAssignment&quot;,&quot;SocialPersona&quot;,&quot;SocialPost&quot;,&quot;SpreadCallback_Criteria__c&quot;,&quot;Stakeholder_Relationship_Map_Settings__c&quot;,&quot;Stakeholder__c&quot;,&quot;StandardPermissionSet&quot;,&quot;State_List__c&quot;,&quot;StnryAssetCrbnFtprnt&quot;,&quot;StnryAssetCrbnFtprntItm&quot;,&quot;StnryAssetEnrgyUse&quot;,&quot;StnryAssetEnvrSrc&quot;,&quot;StoreActionPlanTemplate&quot;,&quot;StoreAssortment&quot;,&quot;StoreProduct&quot;,&quot;StreamingChannel&quot;,&quot;StreamingChannel__c&quot;,&quot;SubTotalCFD__c&quot;,&quot;SubTotalValues__c&quot;,&quot;Sub_Region_Settings__c&quot;,&quot;SubmITO_P_L_Mapping__c&quot;,&quot;Subtotal_Map__c&quot;,&quot;SupportPageSection__c&quot;,&quot;SupportSettings__c&quot;,&quot;Survey&quot;,&quot;SurveyEmailBranding&quot;,&quot;SurveyInvitation&quot;,&quot;SurveyQuestion&quot;,&quot;SurveyQuestionChoice&quot;,&quot;SurveyQuestionResponse&quot;,&quot;SurveyResponse&quot;,&quot;SurveyVersion&quot;,&quot;SvcCatalogReqRelatedItem&quot;,&quot;SvcCatalogRequest&quot;,&quot;Swarm&quot;,&quot;SwarmMember&quot;,&quot;System_Component__c&quot;,&quot;TASKRAY_LTNG__trLTNGGlobalSettings__c&quot;,&quot;TASKRAY__Project_Task_PublicAttrs__c&quot;,&quot;TASKRAY__Project_Task__c&quot;,&quot;TASKRAY__Project__c&quot;,&quot;TASKRAY__ViewProjectTasks__c&quot;,&quot;TASKRAY__trBaseline_Project__c&quot;,&quot;TASKRAY__trBaseline_Task_Group__c&quot;,&quot;TASKRAY__trBaseline_Task__c&quot;,&quot;TASKRAY__trBoardFilterDetails__c&quot;,&quot;TASKRAY__trBoardFilterShareJunction__c&quot;,&quot;TASKRAY__trBoardFilterUserJunction__c&quot;,&quot;TASKRAY__trBoardFilter__c&quot;,&quot;TASKRAY__trBoardPowerFilter__c&quot;,&quot;TASKRAY__trChecklistGroup__c&quot;,&quot;TASKRAY__trChecklistItem__c&quot;,&quot;TASKRAY__trContributor__c&quot;,&quot;TASKRAY__trDependency__c&quot;,&quot;TASKRAY__trGlobalSettings__c&quot;,&quot;TASKRAY__trHistory__c&quot;,&quot;TASKRAY__trMetadataCache__c&quot;,&quot;TASKRAY__trPendingInterview__c&quot;,&quot;TASKRAY__trProjectInboxNotification__c&quot;,&quot;TASKRAY__trProjectNotification__c&quot;,&quot;TASKRAY__trRecordTypeMapping__c&quot;,&quot;TASKRAY__trSettings__c&quot;,&quot;TASKRAY__trTaskGroup__c&quot;,&quot;TASKRAY__trTaskInboxNotification__c&quot;,&quot;TASKRAY__trTaskNotification__c&quot;,&quot;TASKRAY__trTaskTime__c&quot;,&quot;TCO_Cost_Data__c&quot;,&quot;TabDefinition&quot;,&quot;Task&quot;,&quot;TaskRay_CustomerContact__c&quot;,&quot;TaskRay_Helium_Information__c&quot;,&quot;TaskRay_Install_Cost__c&quot;,&quot;TaskRay_Pre_Install_Items__c&quot;,&quot;TaskRay_Stakeholder__c&quot;,&quot;Task_Types_For_Eset_Link__c&quot;,&quot;Task_Types_for_Date_Update__c&quot;,&quot;Taskray_Change_Order__c&quot;,&quot;Taskray_Construction_Rev_Quote_PO__c&quot;,&quot;Taskray_DCR__c&quot;,&quot;Taskray_Eset_Link__c&quot;,&quot;Taskray_Magnetic_Containment__c&quot;,&quot;Taskray_Order_Shortage_Detail__c&quot;,&quot;Taskray_Project_Settings__c&quot;,&quot;Taskray_REST_Project_Status__c&quot;,&quot;Taskray_Site_Ready_Risk__c&quot;,&quot;Taskray_Survey_Languages_Mapping__c&quot;,&quot;Taskray_Task_Types_For_Project__c&quot;,&quot;Taskray_Task_Types_For_RR__c&quot;,&quot;Taskray_eOMRegions__c&quot;,&quot;Taskray_eOM_event_log__c&quot;,&quot;TaxCertificate&quot;,&quot;TaxEngine&quot;,&quot;TaxEngineInteractionLog&quot;,&quot;TaxPolicy&quot;,&quot;TaxTreatment&quot;,&quot;TempCareAreaRemediation__c&quot;,&quot;Template_Product_Information__c&quot;,&quot;Template_Tender_Term_Information__c&quot;,&quot;Tenant&quot;,&quot;TenantParameterMap&quot;,&quot;Term_Exceptions__c&quot;,&quot;TermsFieldEditableProfiles__c&quot;,&quot;Territory_Account__c&quot;,&quot;Territory__c&quot;,&quot;TestCustom__c&quot;,&quot;Test_Classes_Settings__c&quot;,&quot;ThreatDetectionFeedback&quot;,&quot;Tiba_Custom_Settings__c&quot;,&quot;Tier1_Level_Thresholds__c&quot;,&quot;TimeSheet&quot;,&quot;TimeSheetEntry&quot;,&quot;TimeSheetTemplate&quot;,&quot;TimeSlot&quot;,&quot;Top_X_Designation__c&quot;,&quot;Topic&quot;,&quot;Trade_In_Valuation_Settings__c&quot;,&quot;TrainingCourseParticipant&quot;,&quot;TransactionJournal&quot;,&quot;TravelMode&quot;,&quot;TrialEnvironmentSignup&quot;,&quot;Trigger_For_Box__c&quot;,&quot;TrnCourse&quot;,&quot;USERLocale__c&quot;,&quot;UnifiedEmail&quot;,&quot;UnitOfMeasure&quot;,&quot;UnitOfMeasureConversion&quot;,&quot;UsageEntitlement&quot;,&quot;UsageEntitlementPeriod&quot;,&quot;UsageEntitlementUsage&quot;,&quot;UsageFactor&quot;,&quot;User&quot;,&quot;UserAppMenuItem&quot;,&quot;UserLicenseDefinition&quot;,&quot;User_Action__c&quot;,&quot;User_Link__c&quot;,&quot;User_Log_Setting__c&quot;,&quot;VCP_All_Region_BU__c&quot;,&quot;VCP_Setting__c&quot;,&quot;Validate_VAT_Country__c&quot;,&quot;VehicleAssetCrbnFtprnt&quot;,&quot;VehicleAssetEmssnSrc&quot;,&quot;VehicleAssetEnrgyUse&quot;,&quot;VehicleUserAssignment&quot;,&quot;Vendor_Cost_Matrix__c&quot;,&quot;Vendor__c&quot;,&quot;VideoCall&quot;,&quot;ViolationEnforcementAction&quot;,&quot;ViolationInspAssessmentInd&quot;,&quot;ViolationType&quot;,&quot;ViolationTypeAssessmentInd&quot;,&quot;VisionPredictionSettings&quot;,&quot;Visit&quot;,&quot;VisitOps__Agenda_Survey__c&quot;,&quot;VisitOps__Agenda__c&quot;,&quot;VisitOps__AttendeeImportInstructions__c&quot;,&quot;VisitOps__Attendee__c&quot;,&quot;VisitOps__CSVHeaderForAttendees__c&quot;,&quot;VisitOps__Caterer__c&quot;,&quot;VisitOps__CateringProductsAndServices__c&quot;,&quot;VisitOps__Company__c&quot;,&quot;VisitOps__Content_Custom_Setting__c&quot;,&quot;VisitOps__Expense__c&quot;,&quot;VisitOps__Expertise_Area__c&quot;,&quot;VisitOps__Innovation_Board__c&quot;,&quot;VisitOps__LocationTypeLink__c&quot;,&quot;VisitOps__Location_Product_Category__c&quot;,&quot;VisitOps__Location_Product_Link__c&quot;,&quot;VisitOps__Location_Product__c&quot;,&quot;VisitOps__Location__c&quot;,&quot;VisitOps__Logistics_Supplier_Link__c&quot;,&quot;VisitOps__Mobile_Visit_Roles__c&quot;,&quot;VisitOps__Place__c&quot;,&quot;VisitOps__Presenter_Agenda_Link__c&quot;,&quot;VisitOps__Presenter_Expertise_Link__c&quot;,&quot;VisitOps__Presenter_Survey__c&quot;,&quot;VisitOps__Presenter__c&quot;,&quot;VisitOps__Products_and_Services__c&quot;,&quot;VisitOps__Program_Location_Link__c&quot;,&quot;VisitOps__Program_Type_Link__c&quot;,&quot;VisitOps__Program__c&quot;,&quot;VisitOps__Room_Schedule__c&quot;,&quot;VisitOps__Room__c&quot;,&quot;VisitOps__Status_Mapping__c&quot;,&quot;VisitOps__Status__c&quot;,&quot;VisitOps__Supplier__c&quot;,&quot;VisitOps__Survey__c&quot;,&quot;VisitOps__Topic_Category__c&quot;,&quot;VisitOps__Topic__c&quot;,&quot;VisitOps__VisitBundle__c&quot;,&quot;VisitOps__VisitType__c&quot;,&quot;VisitOps__Visit_Content__c&quot;,&quot;VisitOps__Visit_Control__c&quot;,&quot;VisitOps__Visit_Logistics__c&quot;,&quot;VisitOps__Visit__c&quot;,&quot;VisitTask&quot;,&quot;VisitTaskContext&quot;,&quot;VisitTaskContextRelation&quot;,&quot;VisitedParty&quot;,&quot;Visitor&quot;,&quot;VoiceCall&quot;,&quot;VolunteerProject&quot;,&quot;Voucher&quot;,&quot;VoucherDefinition&quot;,&quot;W2CGlobRegionSvcSubRegionMapping__c&quot;,&quot;WM4SF3__WalkMeExtension__c&quot;,&quot;WM4SF3__WalkMeLicense__c&quot;,&quot;WarrantyTerm&quot;,&quot;WasteFootprint&quot;,&quot;WasteFootprintItem&quot;,&quot;WaveAutoInstallRequest&quot;,&quot;WebCart&quot;,&quot;WebStore&quot;,&quot;WebStoreBuyerGroup&quot;,&quot;WebStoreCatalog&quot;,&quot;WebStorePricebook&quot;,&quot;WebStoreSearchProdSettings&quot;,&quot;WebserviceIntegration__c&quot;,&quot;WorkCapacityLimit&quot;,&quot;WorkCapacityUsage&quot;,&quot;WorkContract&quot;,&quot;WorkForecastRun&quot;,&quot;WorkOrder&quot;,&quot;WorkOrderLineItem&quot;,&quot;WorkPlan&quot;,&quot;WorkPlanSelectionRule&quot;,&quot;WorkPlanTemplate&quot;,&quot;WorkPlanTemplateEntry&quot;,&quot;WorkSkillRouting&quot;,&quot;WorkStep&quot;,&quot;WorkStepTemplate&quot;,&quot;WorkType&quot;,&quot;WorkTypeCareSpecialty&quot;,&quot;WorkTypeCodeSetBundle&quot;,&quot;WorkTypeGroup&quot;,&quot;WorkTypeGroupMember&quot;,&quot;WorkerCompCoverageClass&quot;,&quot;Workflow_Master_Deactivation__c&quot;,&quot;WorkforceCapacityPlan&quot;,&quot;WstDispoEmssnFctrSet&quot;,&quot;WstDispoEmssnFctrSetItm&quot;,&quot;Zone_List__c&quot;,&quot;Zone_Settings__c&quot;,&quot;Zone__c&quot;,&quot;analyticsadopt__DatasetDetails__c&quot;,&quot;analyticsadopt__DatasetSpecs__c&quot;,&quot;box__BOSS_Exception__c&quot;,&quot;box__FRUP__c&quot;,&quot;box__Folder_Details__c&quot;,&quot;box__Folder_Meta__c&quot;,&quot;box__ItemMoveQueue__c&quot;,&quot;box__LeadConvertQueue__c&quot;,&quot;box__Lead_Setting__c&quot;,&quot;box__SSO_Setting__c&quot;,&quot;catalogitems__c&quot;,&quot;ctcoach__CT_Coach_Assessment__c&quot;,&quot;ctcoach__CT_Coach_Score__c&quot;,&quot;dfsle__EOS_Type__c&quot;,&quot;eBluebook_TradeIn_application__c&quot;,&quot;eContacts__Queue_Item__c&quot;,&quot;eContacts__Settings__c&quot;,&quot;eOMRegions__c&quot;,&quot;eOM_Auth__c&quot;,&quot;eOM_Batch_Audit__c&quot;,&quot;eOM_CountryCode_Region_Mapping__c&quot;,&quot;eOM_Disabled_Modalities__c&quot;,&quot;eOM_Integration_Configuration__c&quot;,&quot;eOM_OU_Region_Mapping__c&quot;,&quot;eOM_Status_Mapping__c&quot;,&quot;email_alert__c&quot;,&quot;footprint__footprint_Listview__c&quot;,&quot;galigeo__Category__c&quot;,&quot;galigeo__Dashboard__c&quot;,&quot;galigeo__Data_Source__c&quot;,&quot;galigeo__GGO_Custom_Object__c&quot;,&quot;galigeo__GeoFilter_Condition__c&quot;,&quot;galigeo__GeoFilter_Definition__c&quot;,&quot;galigeo__Geographic_Layer__c&quot;,&quot;galigeo__Map_Object_Action__c&quot;,&quot;galigeo__Map_Object_Field__c&quot;,&quot;galigeo__Query_Field__c&quot;,&quot;galigeo__Query_Layer__c&quot;,&quot;galigeo__SW_Map_Object__c&quot;,&quot;galigeo__SellWhereConfig__c&quot;,&quot;galigeo__SellWhereConfiguration__c&quot;,&quot;galigeo__SellWhereImages__c&quot;,&quot;galigeo__SellWhereMapConfig__c&quot;,&quot;galigeo__Symbology__c&quot;,&quot;galigeo__Thematic__c&quot;,&quot;galigeo__Visual_Analytic__c&quot;,&quot;galigeo__Visual_DataSet__c&quot;,&quot;galigeo__Visual_Object__c&quot;,&quot;gecorpcoebox__Box_Administrator__c&quot;,&quot;gecorpcoebox__Device_Name__c&quot;,&quot;gecorpcoebox__GE_Box_Permission_Set__c&quot;,&quot;ltngsharing__PrivateTestObject__c&quot;,&quot;ltngsharing__ReadOnlyTestObject__c&quot;,&quot;maps__MapsSetting__c&quot;,&quot;mkto_si__MarketoSettings__c&quot;,&quot;mkto_si__UserPreferences__c&quot;,&quot;quote_hub_user_preference__c&quot;,&quot;refedge__Advanced_Routing__c&quot;,&quot;refedge__POR_App_Configuration__c&quot;,&quot;refedge__User_Profile__c&quot;,&quot;rtsync__LoggerSettings__c&quot;,&quot;rtsync__Reltio_Sbc_Filter_Setting__c&quot;,&quot;rtsync__Reltio_Sync_Settings__c&quot;,&quot;taskRay_resource_request__c&quot;,&quot;taskray_Customer_Event__c&quot;,&quot;tinderbox__Document__c&quot;,&quot;tinderbox__Proposal__c&quot;,&quot;tinderbox__TinderBox_Accounts__c&quot;,&quot;tinderbox__TinderBox_Log__c&quot;,&quot;tinderbox__TinderBox__c&quot;,&quot;tinderbox__content__c&quot;],&quot;appId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;storable&quot;:true},{&quot;id&quot;:&quot;2484;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getKeyPrefixesWithRecordTypes&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true},{&quot;id&quot;:&quot;2485;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getIsLWCFlexipageEnabled&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;sObjectNames&quot;:[&quot;A360ReportsGlobalRegion__c&quot;,&quot;A360_Manage_Widgets__c&quot;,&quot;A360_W2W_columns__c&quot;,&quot;AATEST2__c&quot;,&quot;AISentimentResult&quot;,&quot;ALIAutomation__c&quot;,&quot;API_Authorization__c&quot;,&quot;APTPS_Tender_Term_Description__c&quot;,&quot;APTPS_Tender_Term_Group_Approval__c&quot;,&quot;APTPS_Tender_Term__c&quot;,&quot;APTS_Display_Fields__c&quot;,&quot;APTS_Display_Settings__c&quot;,&quot;APTS_Features_Settings__c&quot;,&quot;APTS_Invoice__c&quot;,&quot;APTS_Product_Area_Code__c&quot;,&quot;APTS_ProposalFieldValidation__c&quot;,&quot;APTS_Query_Settings__c&quot;,&quot;APTS_ReApproval_Config__c&quot;,&quot;APXT_CongaSign__CongaSign_Settings__c&quot;,&quot;APXT_CongaSign__Recipient__c&quot;,&quot;APXT_CongaSign__Transaction__c&quot;,&quot;Accessory_Modality_Code__c&quot;,&quot;Account&quot;,&quot;AccountBrand&quot;,&quot;AccountContactRelation&quot;,&quot;AccountForecast&quot;,&quot;AccountForecastAdjustment&quot;,&quot;AccountForecastPeriodMetric&quot;,&quot;AccountHospitalGrade__c&quot;,&quot;AccountInsight&quot;,&quot;AccountParticipant&quot;,&quot;AccountPartner&quot;,&quot;AccountProductForecast&quot;,&quot;AccountProductPeriodForecast&quot;,&quot;AccountRelationship&quot;,&quot;AccountStrategicViewSetting__c&quot;,&quot;AccountTeamMember&quot;,&quot;AccountUserTerritory2View&quot;,&quot;Account_360_DB_User_default_widgets__c&quot;,&quot;Account_Agreement_Association__c&quot;,&quot;Account_Hierarchy_Setting__c&quot;,&quot;Account_Plan_Competitor__c&quot;,&quot;Account_Plan_Contacts__c&quot;,&quot;Account_Plan_KPI__c&quot;,&quot;Account_Plan__c&quot;,&quot;Account_Prioritization__c&quot;,&quot;Account_Request_Settings__c&quot;,&quot;Account_Team_Audit_Trail_Settings__c&quot;,&quot;Account_Team_Audit_Trail_Test_Settings__c&quot;,&quot;Account_Team_Audit_Trail__c&quot;,&quot;Account_Team_Request_Settings__c&quot;,&quot;Account_Test_Settings__c&quot;,&quot;Accreditation&quot;,&quot;AcctMgrPeriodicTargetDstr&quot;,&quot;AcctMgrTarget&quot;,&quot;AcctMgrTargetDstr&quot;,&quot;ActionCadence&quot;,&quot;ActionPlan&quot;,&quot;ActionPlanItem&quot;,&quot;ActionPlanItemDependency&quot;,&quot;ActionPlanTemplate&quot;,&quot;ActionPlanTemplateItem&quot;,&quot;ActionPlanTemplateItemValue&quot;,&quot;ActionPlanTemplateVersion&quot;,&quot;ActionPlanTmplItmAssessmentInd&quot;,&quot;ActionPlnTmplItmDependency&quot;,&quot;Activate_OTD_process__c&quot;,&quot;ActivationTarget&quot;,&quot;ActiveScratchOrg&quot;,&quot;ActivityHistory&quot;,&quot;ActivityTiming&quot;,&quot;Activity_Library__c&quot;,&quot;Activity_Logger_Switch__c&quot;,&quot;AdCreativeSizeType&quot;,&quot;AdOrderItem&quot;,&quot;AdQuote&quot;,&quot;AdQuoteLine&quot;,&quot;AdServer&quot;,&quot;AdServerAccount&quot;,&quot;AdServerUser&quot;,&quot;AdSpaceCreativeSizeType&quot;,&quot;AdSpaceGroupMember&quot;,&quot;AdSpaceSpecification&quot;,&quot;AddOnDefinition&quot;,&quot;Address&quot;,&quot;AdvAccountForecastFact&quot;,&quot;AdvAcctForecastSetPartner&quot;,&quot;AgentTraining&quot;,&quot;Agreement_Contact_Role__c&quot;,&quot;Agreement_Product_Line_Item_Detail__c&quot;,&quot;Agreement_Product_Portfolio__c&quot;,&quot;AiDataset&quot;,&quot;AiImageDetectedObject&quot;,&quot;AiImageObject&quot;,&quot;AiImageTrainingObject&quot;,&quot;AiVisionModel&quot;,&quot;AiVisionModelMetric&quot;,&quot;AiVisionModelObjectMetric&quot;,&quot;AiVisitRecommendRequest&quot;,&quot;AiVisitRecommendation&quot;,&quot;AiVisitSummary&quot;,&quot;AiVisitTaskRcmd&quot;,&quot;AiVisitTaskRcmdRequest&quot;,&quot;AirTravelEmssnFctr&quot;,&quot;AirTravelEnrgyUse&quot;,&quot;AllergyIntolerance&quot;,&quot;AlternativePaymentMethod&quot;,&quot;ApiAnomalyEventStore&quot;,&quot;AppAnalyticsQueryRequest&quot;,&quot;AppExtension&quot;,&quot;AppMenuItem&quot;,&quot;AppUsageAssignment&quot;,&quot;ApplicationCase&quot;,&quot;AppointmentReason&quot;,&quot;AppointmentTopicTimeSlot&quot;,&quot;Approver_Detail__c&quot;,&quot;ApptBundleAggrDurDnscale&quot;,&quot;ApptBundleAggrPolicy&quot;,&quot;ApptBundleConfig&quot;,&quot;ApptBundlePolicy&quot;,&quot;ApptBundlePolicySvcTerr&quot;,&quot;ApptBundlePropagatePolicy&quot;,&quot;ApptBundleRestrictPolicy&quot;,&quot;ApptBundleSortPolicy&quot;,&quot;Apttus_Approval__ApprovalProcessInstance__c&quot;,&quot;Apttus_Approval__ApprovalRuleAssignee__c&quot;,&quot;Apttus_Approval__ApprovalRuleDimension__c&quot;,&quot;Apttus_Approval__ApprovalRuleEntry__c&quot;,&quot;Apttus_Approval__ApprovalRule__c&quot;,&quot;Apttus_Approval__Approval_Matrix__c&quot;,&quot;Apttus_Approval__Approval_Process__c&quot;,&quot;Apttus_Approval__Approval_Request_History__c&quot;,&quot;Apttus_Approval__Approval_Request__c&quot;,&quot;Apttus_Approval__ApprovalsCustomClasses__c&quot;,&quot;Apttus_Approval__ApprovalsCustomConfig__c&quot;,&quot;Apttus_Approval__ApprovalsSystemProperties__c&quot;,&quot;Apttus_Approval__Backup_Approver__c&quot;,&quot;Apttus_Approval__FormulaField__c&quot;,&quot;Apttus_Approval__SearchFilter__c&quot;,&quot;Apttus_Base2__BasePrivateProperties__c&quot;,&quot;Apttus_Base2__TurboEngineAdminProperties__c&quot;,&quot;Apttus_CMConfig__AgreementAdjustmentLineItem__c&quot;,&quot;Apttus_CMConfig__AgreementFootnote__c&quot;,&quot;Apttus_CMConfig__AgreementProductAttributeValueExt2__c&quot;,&quot;Apttus_CMConfig__AgreementProductAttributeValueExt3__c&quot;,&quot;Apttus_CMConfig__AgreementProductAttributeValueExt__c&quot;,&quot;Apttus_CMConfig__AgreementProductAttributeValue__c&quot;,&quot;Apttus_CMConfig__AgreementRelatedLineItem__c&quot;,&quot;Apttus_CMConfig__AgreementSummaryGroup__c&quot;,&quot;Apttus_CMConfig__AgreementSummary__c&quot;,&quot;Apttus_CMConfig__AgreementUsagePriceTier__c&quot;,&quot;Apttus_Config2__AccountLocation__c&quot;,&quot;Apttus_Config2__AdHocGroup__c&quot;,&quot;Apttus_Config2__AdjustmentLineItem__c&quot;,&quot;Apttus_Config2__AgreementPriceRule__c&quot;,&quot;Apttus_Config2__AgreementPriceTier__c&quot;,&quot;Apttus_Config2__AppliedExpressionInfo__c&quot;,&quot;Apttus_Config2__AppliedRuleActionInfo__c&quot;,&quot;Apttus_Config2__AppliedRuleInfo__c&quot;,&quot;Apttus_Config2__AssetAttributeValue__c&quot;,&quot;Apttus_Config2__AssetLineItem__c&quot;,&quot;Apttus_Config2__AssetUsagePriceTier__c&quot;,&quot;Apttus_Config2__BannerSettings__c&quot;,&quot;Apttus_Config2__BatchJob__c&quot;,&quot;Apttus_Config2__BillingPlanItem__c&quot;,&quot;Apttus_Config2__BillingPlan__c&quot;,&quot;Apttus_Config2__BillingPreference__c&quot;,&quot;Apttus_Config2__BundleComponentView__c&quot;,&quot;Apttus_Config2__ChargeGroupMember__c&quot;,&quot;Apttus_Config2__ChargeGroup__c&quot;,&quot;Apttus_Config2__ChargeType__c&quot;,&quot;Apttus_Config2__ClassificationHierarchy__c&quot;,&quot;Apttus_Config2__ClassificationName__c&quot;,&quot;Apttus_Config2__ConfigAssetPricingCriteriaFields__c&quot;,&quot;Apttus_Config2__ConfigAssetPricingDefault__c&quot;,&quot;Apttus_Config2__ConfigConstraintCriteriaFields__c&quot;,&quot;Apttus_Config2__ConfigCustomClasses__c&quot;,&quot;Apttus_Config2__ConfigCustomDisplayActions__c&quot;,&quot;Apttus_Config2__ConfigCustomDisplayColumns__c&quot;,&quot;Apttus_Config2__ConfigFieldExpressionsCriteriaFields__c&quot;,&quot;Apttus_Config2__ConfigFieldSet__c&quot;,&quot;Apttus_Config2__ConfigFlow__c&quot;,&quot;Apttus_Config2__ConfigHeaderCriteriaFields__c&quot;,&quot;Apttus_Config2__ConfigLineItemCriteriaFields__c&quot;,&quot;Apttus_Config2__ConfigLineItemCustomFields__c&quot;,&quot;Apttus_Config2__ConfigLineItemLimitFields__c&quot;,&quot;Apttus_Config2__ConfigRelatedPricingGroupFields__c&quot;,&quot;Apttus_Config2__ConfigSelectBundleOptionsSettings__c&quot;,&quot;Apttus_Config2__ConfigSelectConfigProductsSettings__c&quot;,&quot;Apttus_Config2__ConfigSmartSearchSettings__c&quot;,&quot;Apttus_Config2__ConfigSystemProperties__c&quot;,&quot;Apttus_Config2__ConfigUnusedObjects__c&quot;,&quot;Apttus_Config2__ConfigUserPreferences__c&quot;,&quot;Apttus_Config2__ConstraintRuleAction__c&quot;,&quot;Apttus_Config2__ConstraintRuleCondition__c&quot;,&quot;Apttus_Config2__ConstraintRule__c&quot;,&quot;Apttus_Config2__CustomMessage__c&quot;,&quot;Apttus_Config2__DataCache__c&quot;,&quot;Apttus_Config2__ExtOrderSummaryItemCriteriaFields__c&quot;,&quot;Apttus_Config2__FavoriteConfiguration__c&quot;,&quot;Apttus_Config2__FeatureSet__c&quot;,&quot;Apttus_Config2__Feature__c&quot;,&quot;Apttus_Config2__FieldExpression__c&quot;,&quot;Apttus_Config2__Footnote__c&quot;,&quot;Apttus_Config2__FormulaField__c&quot;,&quot;Apttus_Config2__FrequencyConversionRate__c&quot;,&quot;Apttus_Config2__GLAccountMapEntry__c&quot;,&quot;Apttus_Config2__GLAccountMapRule__c&quot;,&quot;Apttus_Config2__GuidedQuestion__c&quot;,&quot;Apttus_Config2__GuidedSearchRuleEntry__c&quot;,&quot;Apttus_Config2__GuidedSearchRuleFilter__c&quot;,&quot;Apttus_Config2__GuidedSearchRule__c&quot;,&quot;Apttus_Config2__IncentiveBenefitData__c&quot;,&quot;Apttus_Config2__IncentiveCoupon__c&quot;,&quot;Apttus_Config2__IncentiveCustomDisplayActions__c&quot;,&quot;Apttus_Config2__IncentiveCustomDisplaySetting__c&quot;,&quot;Apttus_Config2__IncentiveGroup__c&quot;,&quot;Apttus_Config2__IncentiveLimitData__c&quot;,&quot;Apttus_Config2__IncentiveLimit__c&quot;,&quot;Apttus_Config2__IncentiveSystemProperties__c&quot;,&quot;Apttus_Config2__Incentive__c&quot;,&quot;Apttus_Config2__InstalledProductsSettings__c&quot;,&quot;Apttus_Config2__LineItemRollup__c&quot;,&quot;Apttus_Config2__LineItem__c&quot;,&quot;Apttus_Config2__LookupFieldSettings__c&quot;,&quot;Apttus_Config2__LoyaltyPointAccrualLevelSettings__c&quot;,&quot;Apttus_Config2__ObjectSummarySettings__c&quot;,&quot;Apttus_Config2__OrderLineItemCriteriaFields__c&quot;,&quot;Apttus_Config2__OrderLineItemLimitFields__c&quot;,&quot;Apttus_Config2__OrderLineItemMapFields__c&quot;,&quot;Apttus_Config2__OrderLineItem__c&quot;,&quot;Apttus_Config2__OrderProductAttributeValue__c&quot;,&quot;Apttus_Config2__OrderSourceCustomFields__c&quot;,&quot;Apttus_Config2__OrderSystemProperties__c&quot;,&quot;Apttus_Config2__OrderTaxBreakup__c&quot;,&quot;Apttus_Config2__OrderUsagePriceTier__c&quot;,&quot;Apttus_Config2__Order__c&quot;,&quot;Apttus_Config2__PaymentTerm__c&quot;,&quot;Apttus_Config2__PriceBreakup__c&quot;,&quot;Apttus_Config2__PriceDimension__c&quot;,&quot;Apttus_Config2__PriceListCategory__c&quot;,&quot;Apttus_Config2__PriceListItem__c&quot;,&quot;Apttus_Config2__PriceList__c&quot;,&quot;Apttus_Config2__PriceMatrixEntry__c&quot;,&quot;Apttus_Config2__PriceMatrix__c&quot;,&quot;Apttus_Config2__PriceRuleEntry__c&quot;,&quot;Apttus_Config2__PriceRule__c&quot;,&quot;Apttus_Config2__PriceRuleset__c&quot;,&quot;Apttus_Config2__ProductAttributeGroupMember__c&quot;,&quot;Apttus_Config2__ProductAttributeGroup__c&quot;,&quot;Apttus_Config2__ProductAttributeValue__c&quot;,&quot;Apttus_Config2__ProductAttribute__c&quot;,&quot;Apttus_Config2__ProductClassification__c&quot;,&quot;Apttus_Config2__ProductConfiguration__c&quot;,&quot;Apttus_Config2__ProductConstraintEntry__c&quot;,&quot;Apttus_Config2__ProductConstraintView__c&quot;,&quot;Apttus_Config2__ProductConstraint__c&quot;,&quot;Apttus_Config2__ProductDefaultRuleFilter__c&quot;,&quot;Apttus_Config2__ProductDefaultRule__c&quot;,&quot;Apttus_Config2__ProductDefaultValue__c&quot;,&quot;Apttus_Config2__ProductFeatureValue__c&quot;,&quot;Apttus_Config2__ProductFeature__c&quot;,&quot;Apttus_Config2__ProductFilterView__c&quot;,&quot;Apttus_Config2__ProductFootnote__c&quot;,&quot;Apttus_Config2__ProductGroupMember__c&quot;,&quot;Apttus_Config2__ProductGroup__c&quot;,&quot;Apttus_Config2__ProductHierarchyView__c&quot;,&quot;Apttus_Config2__ProductInformation__c&quot;,&quot;Apttus_Config2__ProductOptionComponent__c&quot;,&quot;Apttus_Config2__ProductOptionGroup__c&quot;,&quot;Apttus_Config2__ProductOptionPrice__c&quot;,&quot;Apttus_Config2__ProductTranslation__c&quot;,&quot;Apttus_Config2__PublishedFavorite__c&quot;,&quot;Apttus_Config2__RelatedAccountLocation__c&quot;,&quot;Apttus_Config2__RelatedAssetLineItem__c&quot;,&quot;Apttus_Config2__RelatedIncentive__c&quot;,&quot;Apttus_Config2__RelatedLineItem__c&quot;,&quot;Apttus_Config2__RelatedOpportunityLineItemColl__c&quot;,&quot;Apttus_Config2__RelatedOpportunityLineItem__c&quot;,&quot;Apttus_Config2__RelatedPriceListItem__c&quot;,&quot;Apttus_Config2__RelatedProduct__c&quot;,&quot;Apttus_Config2__RevRecPolicy__c&quot;,&quot;Apttus_Config2__SearchAttributeValue__c&quot;,&quot;Apttus_Config2__SearchFilter__c&quot;,&quot;Apttus_Config2__SummaryGroup__c&quot;,&quot;Apttus_Config2__TaxBreakup__c&quot;,&quot;Apttus_Config2__TaxCertificate__c&quot;,&quot;Apttus_Config2__TaxCode__c&quot;,&quot;Apttus_Config2__TempDisplayColumn__c&quot;,&quot;Apttus_Config2__TempFilter__c&quot;,&quot;Apttus_Config2__TempIncentiveBenefitData__c&quot;,&quot;Apttus_Config2__TempIncentiveLimitData__c&quot;,&quot;Apttus_Config2__TempObject__c&quot;,&quot;Apttus_Config2__TempRenew__c&quot;,&quot;Apttus_Config2__UsagePriceTier__c&quot;,&quot;Apttus_Other_Variable_Cost__c&quot;,&quot;Apttus_Proposal__ProposalCustomClasses__c&quot;,&quot;Apttus_Proposal__ProposalSystemProperties__c&quot;,&quot;Apttus_Proposal__Proposal_Document_Output_Format__c&quot;,&quot;Apttus_Proposal__Proposal_Line_Item__c&quot;,&quot;Apttus_Proposal__Proposal_Request__c&quot;,&quot;Apttus_Proposal__Proposal__c&quot;,&quot;Apttus_QPConfig__ProposalAdjustmentLineItem__c&quot;,&quot;Apttus_QPConfig__ProposalFootnote__c&quot;,&quot;Apttus_QPConfig__ProposalIncentiveBenefitData__c&quot;,&quot;Apttus_QPConfig__ProposalIncentiveLimitData__c&quot;,&quot;Apttus_QPConfig__ProposalProductAttributeValueExt2__c&quot;,&quot;Apttus_QPConfig__ProposalProductAttributeValueExt3__c&quot;,&quot;Apttus_QPConfig__ProposalProductAttributeValueExt__c&quot;,&quot;Apttus_QPConfig__ProposalProductAttributeValue__c&quot;,&quot;Apttus_QPConfig__ProposalRelatedLineItem__c&quot;,&quot;Apttus_QPConfig__ProposalSummaryGroup__c&quot;,&quot;Apttus_QPConfig__ProposalSummary__c&quot;,&quot;Apttus_QPConfig__ProposalUsagePriceTier__c&quot;,&quot;Apttus_Reporting_Bundles__c&quot;,&quot;Apttus_XApps__Application__c&quot;,&quot;Apttus_XApps__XAuthorForExcelSystemProperties__c&quot;,&quot;Apttus__APTS_Agreement__c&quot;,&quot;Apttus__APTS_Related_Agreement__c&quot;,&quot;Apttus__APTS_Template__c&quot;,&quot;Apttus__AgreementLineItem__c&quot;,&quot;Apttus__Agreement_Clause__c&quot;,&quot;Apttus__Agreement_Protection__c&quot;,&quot;Apttus__Agreement_Rule_Condition__c&quot;,&quot;Apttus__Agreement_Rule__c&quot;,&quot;Apttus__AsyncMergeCall__c&quot;,&quot;Apttus__ComplyCustomClasses__c&quot;,&quot;Apttus__ComplyCustomProperties__c&quot;,&quot;Apttus__ComplySystemProperties__c&quot;,&quot;Apttus__DocAssemblyComponent__c&quot;,&quot;Apttus__DocAssemblyRule__c&quot;,&quot;Apttus__DocAssemblyRuleset__c&quot;,&quot;Apttus__DocumentVersionDetail__c&quot;,&quot;Apttus__DocumentVersionProperties__c&quot;,&quot;Apttus__DocumentVersion__c&quot;,&quot;Apttus__Document_Output_Format__c&quot;,&quot;Apttus__FormulaField__c&quot;,&quot;Apttus__IDEJobClauseExtraction__c&quot;,&quot;Apttus__IDEJobFieldExtraction__c&quot;,&quot;Apttus__IDEJob__c&quot;,&quot;Apttus__IDEMapClauseProvision__c&quot;,&quot;Apttus__IDEMapFieldProvision__c&quot;,&quot;Apttus__IDEMapProjectRecordType__c&quot;,&quot;Apttus__IDEMapProvisionRecordType__c&quot;,&quot;Apttus__IDEProvision__c&quot;,&quot;Apttus__LiteUserException__c&quot;,&quot;Apttus__LiteUserSummary__c&quot;,&quot;Apttus__Locale__c&quot;,&quot;Apttus__LoginHistory__c&quot;,&quot;Apttus__MSTeamsDetail__c&quot;,&quot;Apttus__QueryTemplateFilter__c&quot;,&quot;Apttus__QueryTemplateQualifier__c&quot;,&quot;Apttus__QueryTemplate__c&quot;,&quot;Apttus__ReviewCycle__c&quot;,&quot;Apttus__Reviewer__c&quot;,&quot;Apttus__SearchFilter__c&quot;,&quot;Apttus__TempObject__c&quot;,&quot;Apttus__TemplateClauseReference__c&quot;,&quot;Apttus__TemplateDatasourceFilter__c&quot;,&quot;Apttus__TemplateDynamicSection__c&quot;,&quot;Assessment&quot;,&quot;AssessmentIndDefinedValue&quot;,&quot;AssessmentIndValue&quot;,&quot;AssessmentIndicatorDefinition&quot;,&quot;AssessmentQuestion&quot;,&quot;AssessmentQuestionResponse&quot;,&quot;AssessmentQuestionSet&quot;,&quot;AssessmentQuestionVersion&quot;,&quot;AssessmentTask&quot;,&quot;AssessmentTaskContentDocument&quot;,&quot;AssessmentTaskDefinition&quot;,&quot;AssessmentTaskIndDefinition&quot;,&quot;AssessmentTaskOrder&quot;,&quot;Asset&quot;,&quot;AssetAction&quot;,&quot;AssetActionSource&quot;,&quot;AssetAttribute&quot;,&quot;AssetDowntimePeriod&quot;,&quot;AssetRelationship&quot;,&quot;AssetStatePeriod&quot;,&quot;AssetWarranty&quot;,&quot;AssignedResource&quot;,&quot;AssistantText&quot;,&quot;AssociatedLocation&quot;,&quot;Assortment&quot;,&quot;AssortmentProduct&quot;,&quot;AsyncOperationLog&quot;,&quot;AttachedContentNote&quot;,&quot;AttributeDefinition&quot;,&quot;Audit_Trail__c&quot;,&quot;AuthApplicationAsset&quot;,&quot;AuthApplicationPlace&quot;,&quot;AuthFormRequestRecord&quot;,&quot;AuthLocationAccessSchedule&quot;,&quot;AuthorNote&quot;,&quot;AuthorizationForm&quot;,&quot;AuthorizationFormConsent&quot;,&quot;AuthorizationFormDataUse&quot;,&quot;AuthorizationFormText&quot;,&quot;AuthorizedInsuranceLine&quot;,&quot;Award&quot;,&quot;BCEntityPermission&quot;,&quot;BCEntityPermissionSet&quot;,&quot;BCFieldPermission&quot;,&quot;BCParticipant&quot;,&quot;BCParticipantAccess&quot;,&quot;BCPermissionSet&quot;,&quot;BCRecordAccess&quot;,&quot;BCRecordAccessApproval&quot;,&quot;BCRelatedParticipant&quot;,&quot;Bad_Jobs__c&quot;,&quot;Banker&quot;,&quot;BatchJob&quot;,&quot;BatchJobPart&quot;,&quot;BatchJobPartFailedRecord&quot;,&quot;Batch_In_Sequence__c&quot;,&quot;Benefit&quot;,&quot;BenefitParameterValue&quot;,&quot;BenefitType&quot;,&quot;BillingPeriodItem&quot;,&quot;BillingPeriodTaxItem&quot;,&quot;BillingPolicy&quot;,&quot;BillingSchedule&quot;,&quot;BillingScheduleCreationStatus&quot;,&quot;BillingScheduleGroup&quot;,&quot;BillingTreatment&quot;,&quot;BillingTreatmentItem&quot;,&quot;Billing_Frequency_Matrix__c&quot;,&quot;BioprodPreBilledType__c&quot;,&quot;BldgEnrgyIntensity&quot;,&quot;BldgEnrgyIntensityVal&quot;,&quot;BldgSizeCategory&quot;,&quot;BlockchainAppMember&quot;,&quot;BlockchainApplication&quot;,&quot;BlockchainEntity&quot;,&quot;BlockchainField&quot;,&quot;BlockchainMember&quot;,&quot;BoardCertification&quot;,&quot;BranchUnit&quot;,&quot;BranchUnitBusinessMember&quot;,&quot;BranchUnitCustomer&quot;,&quot;BranchUnitRelatedRecord&quot;,&quot;Budget&quot;,&quot;BudgetAllocation&quot;,&quot;BulkPublishAccount_CS__c&quot;,&quot;BusRegAuthTypeDependency&quot;,&quot;BusRegAuthorizationType&quot;,&quot;BusinessBrand&quot;,&quot;BusinessHours&quot;,&quot;BusinessLicense&quot;,&quot;BusinessLicenseApplication&quot;,&quot;BusinessMilestone&quot;,&quot;BusinessProfile&quot;,&quot;BusinessType&quot;,&quot;BusinessUnitMember&quot;,&quot;Business_Profile_Custom_Settings__c&quot;,&quot;Buy_Back_Item_Type__c&quot;,&quot;BuyerAccount&quot;,&quot;BuyerGroup&quot;,&quot;BuyerGroupMember&quot;,&quot;BuyerGroupPricebook&quot;,&quot;ByPass_PCL_Check__c&quot;,&quot;CCP_APIInformation__c&quot;,&quot;CCP_BatchConfig__c&quot;,&quot;CCP_ContactUsHistory__c&quot;,&quot;CCP_CurrentOutage__c&quot;,&quot;CCP_EmailDistributionList__c&quot;,&quot;CCP_InstallationStatus__c&quot;,&quot;CCP_LanguageList__c&quot;,&quot;CCP_PartsOrderType__c&quot;,&quot;CCP_PerferenceSetting__c&quot;,&quot;CCP_RoleToPageMapping__c&quot;,&quot;CCP_SavedFilter__c&quot;,&quot;CCP_TrackingURLMapping__c&quot;,&quot;CFDJapanDescriptionSelectable__c&quot;,&quot;CFDSubtotal_GroupValues__c&quot;,&quot;CFD_Data__c&quot;,&quot;CFD_IB_Asset_Order__c&quot;,&quot;CFD_Line_Item__c&quot;,&quot;CFD_Print_Option_User_Preferences__c&quot;,&quot;CFO_Assignment_Matrix__c&quot;,&quot;CLI_Automation__c&quot;,&quot;CLM_Agreement_Rev_Rec_Conclusion__c&quot;,&quot;CLM_Entitlement_Tab__c&quot;,&quot;CLM_Feature_Settings__c&quot;,&quot;CMSetting__c&quot;,&quot;CP_GEHC_Custom_Batch_Filter_Support__c&quot;,&quot;CSO_W2C_SSO_Integration_API__c&quot;,&quot;CalcProcStepRelationship&quot;,&quot;CalculationMatrix&quot;,&quot;CalculationMatrixColumn&quot;,&quot;CalculationMatrixRow&quot;,&quot;CalculationMatrixVersion&quot;,&quot;CalculationProcedure&quot;,&quot;CalculationProcedureStep&quot;,&quot;CalculationProcedureVariable&quot;,&quot;CalculationProcedureVersion&quot;,&quot;CallTemplate&quot;,&quot;Campaign&quot;,&quot;CampaignInfluence&quot;,&quot;CampaignInsight&quot;,&quot;CampaignMember&quot;,&quot;CampaignMemberStatus&quot;,&quot;CardPaymentMethod&quot;,&quot;CareBarrier&quot;,&quot;CareBarrierDeterminant&quot;,&quot;CareBarrierType&quot;,&quot;CareBenefitVerifyRequest&quot;,&quot;CareDeterminant&quot;,&quot;CareDeterminantType&quot;,&quot;CareDiagnosis&quot;,&quot;CareInterventionType&quot;,&quot;CareLimitType&quot;,&quot;CareMetricTarget&quot;,&quot;CareObservation&quot;,&quot;CareObservationComponent&quot;,&quot;CarePerformer&quot;,&quot;CarePgmProvHealthcareProvider&quot;,&quot;CarePractnFacilityAppt&quot;,&quot;CarePreauth&quot;,&quot;CarePreauthItem&quot;,&quot;CareProgram&quot;,&quot;CareProgramCampaign&quot;,&quot;CareProgramEligibilityRule&quot;,&quot;CareProgramEnrollee&quot;,&quot;CareProgramEnrolleeProduct&quot;,&quot;CareProgramEnrollmentCard&quot;,&quot;CareProgramGoal&quot;,&quot;CareProgramProduct&quot;,&quot;CareProgramProvider&quot;,&quot;CareProgramTeamMember&quot;,&quot;CareProviderAdverseAction&quot;,&quot;CareProviderFacilitySpecialty&quot;,&quot;CareProviderSearchableField&quot;,&quot;CareRegisteredDevice&quot;,&quot;CareRequest&quot;,&quot;CareRequestDrug&quot;,&quot;CareRequestExtension&quot;,&quot;CareRequestItem&quot;,&quot;CareRequestReviewer&quot;,&quot;CareSpecialty&quot;,&quot;CareSpecialtyTaxonomy&quot;,&quot;CareTaxonomy&quot;,&quot;CartItem&quot;,&quot;Case&quot;,&quot;CaseComment&quot;,&quot;CaseContactRole&quot;,&quot;CaseEvalFormMapping__c&quot;,&quot;CaseMilestone&quot;,&quot;CaseProblemStatusCloseForm__c&quot;,&quot;CaseRelatedIssue&quot;,&quot;Case_Activities__c&quot;,&quot;Case_Comment__c&quot;,&quot;Case_Severity_Matrix__c&quot;,&quot;Case_To_CommEx_Interceptor__c&quot;,&quot;ChangeRequest&quot;,&quot;ChangeRequestRelatedIssue&quot;,&quot;ChannelObjectLinkingRule&quot;,&quot;ChannelProgram&quot;,&quot;ChannelProgramLevel&quot;,&quot;ChannelProgramMember&quot;,&quot;CharketSettings__c&quot;,&quot;Charket__CharketContext__c&quot;,&quot;Charket__Log__c&quot;,&quot;Charket__SkillContext__c&quot;,&quot;Charket__Skill__c&quot;,&quot;Charket__SurveyAnswer__c&quot;,&quot;Charket__SurveyQuestion__c&quot;,&quot;Charket__SurveyResponse__c&quot;,&quot;Charket__SurveyTaken__c&quot;,&quot;Charket__Survey__c&quot;,&quot;Charket__WeChatAccount__c&quot;,&quot;Charket__WeChatAgent__c&quot;,&quot;Charket__WeChatCouponDelivery__c&quot;,&quot;Charket__WeChatCoupon__c&quot;,&quot;Charket__WeChatEvent__c&quot;,&quot;Charket__WeChatFollowerPass__c&quot;,&quot;Charket__WeChatFollower__c&quot;,&quot;Charket__WeChatMenuFilters__c&quot;,&quot;Charket__WeChatMenuItem__c&quot;,&quot;Charket__WeChatMenu__c&quot;,&quot;Charket__WeChatMessageAttachment__c&quot;,&quot;Charket__WeChatMessage__c&quot;,&quot;Charket__WeChatNotificationTemplate__c&quot;,&quot;Charket__WeChatPass__c&quot;,&quot;Charket__WeChatQRCode__c&quot;,&quot;Charket__WeChatResponseItem__c&quot;,&quot;Charket__WeChatResponseKeyword__c&quot;,&quot;Charket__WeChatResponse__c&quot;,&quot;Charket__WeChatTagAssignment__c&quot;,&quot;Charket__WeChatTagLink__c&quot;,&quot;Charket__WeChatTag__c&quot;,&quot;Charket__WeChatTranscriptItem__c&quot;,&quot;Charket__WeChatTranscript__c&quot;,&quot;Chatter_Settings__c&quot;,&quot;China_BatchSize__c&quot;,&quot;China_Config_Setting__c&quot;,&quot;China_LS_Core_Imaging_PP__c&quot;,&quot;China_Profiles_Bypass_Validation__c&quot;,&quot;China_SalesFunct_PriceList_Map__c&quot;,&quot;China_Tender_Reserve_Details__c&quot;,&quot;Claim&quot;,&quot;ClaimCase&quot;,&quot;ClaimCovPaymentAdjustment&quot;,&quot;ClaimCovReserveAdjustment&quot;,&quot;ClaimCoverage&quot;,&quot;ClaimCoveragePaymentDetail&quot;,&quot;ClaimCoverageReserveDetail&quot;,&quot;ClaimItem&quot;,&quot;ClaimParticipant&quot;,&quot;ClaimPaymentSummary&quot;,&quot;ClinicalAlert&quot;,&quot;ClinicalEncounter&quot;,&quot;ClinicalEncounterDiagnosis&quot;,&quot;ClinicalEncounterFacility&quot;,&quot;ClinicalEncounterIdentifier&quot;,&quot;ClinicalEncounterProvider&quot;,&quot;ClinicalEncounterReason&quot;,&quot;ClinicalEncounterSvcRequest&quot;,&quot;ClinicalServiceRequest&quot;,&quot;ClinicalServiceRequestDetail&quot;,&quot;CloudServiceProvider&quot;,&quot;Cloudspm_Fusion__CustomHeaderColour__c&quot;,&quot;Cloudspm_Fusion__DocSign_Config__c&quot;,&quot;Cloudspm_Fusion__Fiscal_Year_Setting__c&quot;,&quot;Cloudspm_Fusion__Scheduler_Manager_Setting__c&quot;,&quot;CodeSet&quot;,&quot;CodeSetBundle&quot;,&quot;CollaborationGroup&quot;,&quot;CommEx_IT_SLA_Score_Matrix__c&quot;,&quot;CommEx_Support__c&quot;,&quot;CommSubscription&quot;,&quot;CommSubscriptionChannelType&quot;,&quot;CommSubscriptionConsent&quot;,&quot;CommSubscriptionTiming&quot;,&quot;CommerceEntitlementBuyerGroup&quot;,&quot;CommerceEntitlementPolicy&quot;,&quot;CommerceEntitlementProduct&quot;,&quot;CommexProductionSLAScoreMatrix__c&quot;,&quot;Commex_Case__c&quot;,&quot;CommissionSchedule&quot;,&quot;CommissionScheduleAssignment&quot;,&quot;Community_Article_Topics_connection__c&quot;,&quot;Community_Asset__c&quot;,&quot;Community_Event_Topics_connection__c&quot;,&quot;Community_Topic__c&quot;,&quot;Community_Training__c&quot;,&quot;Community_article_usage_details__c&quot;,&quot;Community_event__c&quot;,&quot;Community_points_management__c&quot;,&quot;Community_question__c&quot;,&quot;Community_template__c&quot;,&quot;Competitor_Attributes__c&quot;,&quot;Competitor__c&quot;,&quot;ComplaintCase&quot;,&quot;Config_Data_Map__c&quot;,&quot;Conga_OCC__OCCSettings__c&quot;,&quot;ConsentMetric&quot;,&quot;ConsentUsageMetric&quot;,&quot;Construction_Rev_Quote_PO__c&quot;,&quot;ConsumptionRate&quot;,&quot;ConsumptionSchedule&quot;,&quot;Contact&quot;,&quot;ContactEncounter&quot;,&quot;ContactEncounterParticipant&quot;,&quot;ContactPointAddress&quot;,&quot;ContactPointConsent&quot;,&quot;ContactPointEmail&quot;,&quot;ContactPointPhone&quot;,&quot;ContactPointTypeConsent&quot;,&quot;ContactRequest&quot;,&quot;ContactSuggestionInsight&quot;,&quot;Contact_Activity_Detail__c&quot;,&quot;Contact_Additional_Information__c&quot;,&quot;Contact_Relationship__c&quot;,&quot;ContentDocument&quot;,&quot;ContentDocumentListViewMapping&quot;,&quot;ContentNote&quot;,&quot;ContentVersion&quot;,&quot;ContentWorkspace&quot;,&quot;Contract&quot;,&quot;ContractContactRole&quot;,&quot;ContractLineItem&quot;,&quot;Contract_Line_Item__c&quot;,&quot;Contract__c&quot;,&quot;ConversationBroadcast&quot;,&quot;ConversationBroadcastEntry&quot;,&quot;Convert_Currency__c&quot;,&quot;CountryLangCurr_List__c&quot;,&quot;CountryNumberFormatMapping__c&quot;,&quot;CountryStateCity_Hieraracy__c&quot;,&quot;Country_List__c&quot;,&quot;County_List__c&quot;,&quot;CourseOffering&quot;,&quot;CoverageBenefit&quot;,&quot;CoverageBenefitItem&quot;,&quot;CoverageBenefitItemLimit&quot;,&quot;CoverageLimit&quot;,&quot;CoverageType&quot;,&quot;Covid_19_Surcharges__c&quot;,&quot;Covid_Exceptions__c&quot;,&quot;CrbnEmssnScopeAlloc&quot;,&quot;CrbnEmssnScopeAllocVal&quot;,&quot;Create_Quote_Local_Selection__c&quot;,&quot;CredentialStuffingEventStore&quot;,&quot;CreditInfoPageLayouts__c&quot;,&quot;CreditMemo&quot;,&quot;CreditMemoInvApplication&quot;,&quot;CreditMemoLine&quot;,&quot;Crisis&quot;,&quot;CustomAdminSetting__c&quot;,&quot;Custom_Favorite_Revision__c&quot;,&quot;Custom_Group_Name_Mapping__c&quot;,&quot;Custom_Picklist_Values__c&quot;,&quot;Customer&quot;,&quot;CustomerProperty&quot;,&quot;Customer_Event__c&quot;,&quot;Customer_Goal__c&quot;,&quot;Customer_Initiative__c&quot;,&quot;Customer_Project_Opportunity__c&quot;,&quot;Customer_Project_Parent_Opportunities__c&quot;,&quot;Customer_Project__c&quot;,&quot;Customer_Strategy_Opportunity__c&quot;,&quot;Customer_Strategy__c&quot;,&quot;Customer_Survey_Feedback__c&quot;,&quot;CventEvents__DataRefreshSettings__c&quot;,&quot;CventEvents__EnvironmentSettings__c&quot;,&quot;CventEvents__EventPurgeSettings__c&quot;,&quot;CventEvents__FieldsMapping__c&quot;,&quot;CventEvents__LogPurgeSettings__c&quot;,&quot;CventEvents__NominationRequestField__c&quot;,&quot;CventEvents__RecordMatchingCriteria__c&quot;,&quot;CventEvents__RecordMatchingRule__c&quot;,&quot;CventEvents__RecordTypeMatchingSettings__c&quot;,&quot;DG_Color_Settings__c&quot;,&quot;DMAPP__Dealmaker_AM_Plan_Unit_List__c&quot;,&quot;DMAPP__Dealmaker_AM_Report_List__c&quot;,&quot;DMAPP__Dealmaker_AM_Settings__c&quot;,&quot;DMAPP__Dealmaker_Account_Field__c&quot;,&quot;DMAPP__Dealmaker_Activity_Field__c&quot;,&quot;DMAPP__Dealmaker_Coach_Settings__c&quot;,&quot;DMAPP__Dealmaker_Contact_Field__c&quot;,&quot;DMAPP__Dealmaker_Core_Settings__c&quot;,&quot;DMAPP__Dealmaker_Insight_Settings__c&quot;,&quot;DMAPP__Dealmaker_Opp_Map_Filter_List__c&quot;,&quot;DMAPP__Dealmaker_Opportunity_Field__c&quot;,&quot;DMAPP__Dealmaker_Playbook_Settings__c&quot;,&quot;DMAPP__Dealmaker_Political_Map_Buyer_Roles__c&quot;,&quot;DMAPP__Dealmaker_Political_Map_Settings2__c&quot;,&quot;DMAPP__Dealmaker_Powerpoint__c&quot;,&quot;DMAPP__Dealmaker_Send_Usage_Settings__c&quot;,&quot;DMAPP__Dealmaker_Smart_OM_Settings__c&quot;,&quot;DMAPP__Made_To_Measure_Fields__c&quot;,&quot;DMAPP__Team_View_Plus_Views__c&quot;,&quot;DMMAX__DIESetting__c&quot;,&quot;DMMAX__MaxOpportunityPanelCfg__c&quot;,&quot;DMPPT__PPT_Customization__c&quot;,&quot;DMPPT__Secure_Folder_Settings__c&quot;,&quot;DOSMapping__c&quot;,&quot;DQA__c&quot;,&quot;DRM_DCS_Step_Names__c&quot;,&quot;DRM_Report_Dashboard_Analysis__c&quot;,&quot;Dashboard&quot;,&quot;DataAction&quot;,&quot;DataActionTarget&quot;,&quot;DataConnectorS3&quot;,&quot;DataLakeObjectInstance&quot;,&quot;DataStream&quot;,&quot;DataUseLegalBasis&quot;,&quot;DataUsePurpose&quot;,&quot;Data_Remediation_Config__c&quot;,&quot;DealChange_Concession_question_answers__c&quot;,&quot;DealGuidance__c&quot;,&quot;Deal_Change_Concession_Questions__c&quot;,&quot;Deal_Change_Root_Cause_Code__c&quot;,&quot;Deal_Overview_Permission__c&quot;,&quot;Deal_Terms__c&quot;,&quot;Deal_Version_Manager__c&quot;,&quot;Dealer_Entitlement_PLI__c&quot;,&quot;Default_Opportunity_Product__c&quot;,&quot;Default_Term_Classification_Type__c&quot;,&quot;DefinedSkill&quot;,&quot;DelegatedAccount&quot;,&quot;DeleteEvent&quot;,&quot;DeliveryTask&quot;,&quot;Department__c&quot;,&quot;Design_Center_Global_Region_Mapping__c&quot;,&quot;Design_Center_Request__c&quot;,&quot;DiagnosticSummary&quot;,&quot;DiagnosticSummaryDetail&quot;,&quot;DigitalSignature&quot;,&quot;DigitalWallet&quot;,&quot;Discount_Reason_Check__c&quot;,&quot;DistributorAuthorization&quot;,&quot;DocTemplateSectionCondition&quot;,&quot;DocumentChecklistItem&quot;,&quot;DocumentGenerationProcess&quot;,&quot;DocumentRecipient&quot;,&quot;DocumentTemplate&quot;,&quot;DocumentTemplateClause&quot;,&quot;DocumentTemplateContentDoc&quot;,&quot;DocumentTemplateSection&quot;,&quot;DocumentTemplateToken&quot;,&quot;Document_Output_Option__c&quot;,&quot;DrugDisplayTerm&quot;,&quot;DsarPolicyLog&quot;,&quot;DuplicateRecordItem&quot;,&quot;DuplicateRecordSet&quot;,&quot;ELTONGEHC__ELTON_Inventory_Org_Control__c&quot;,&quot;ELTONGEHC__Image_paths__c&quot;,&quot;ELTON__Data_Interface_Processing_History__c&quot;,&quot;ELTON__Data_Interface__c&quot;,&quot;ELTON__Equipment_AssignLoan_Settings__c&quot;,&quot;ELTON__Equipment_Assignment__c&quot;,&quot;ELTON__Equipment_Calendar__c&quot;,&quot;ELTON__Equipment_Chatter_Settings__c&quot;,&quot;ELTON__Equipment_Consumables__c&quot;,&quot;ELTON__Equipment_Count__c&quot;,&quot;ELTON__Equipment_Labels__c&quot;,&quot;ELTON__Equipment_Loan__c&quot;,&quot;ELTON__Equipment_Maintenance__c&quot;,&quot;ELTON__Equipment_Order_Line__c&quot;,&quot;ELTON__Equipment_Order__c&quot;,&quot;ELTON__Equipment_Quantity_Adjustment_History__c&quot;,&quot;ELTON__Equipment_Request_Preferences__c&quot;,&quot;ELTON__Equipment_Request__c&quot;,&quot;ELTON__Equipment_Reservation__c&quot;,&quot;ELTON__Equipment_Selection__c&quot;,&quot;ELTON__Equipment_Shipment__c&quot;,&quot;ELTON__Equipment_Status_Controls__c&quot;,&quot;ELTON__Equipment_Type__c&quot;,&quot;ELTON__Equipment__c&quot;,&quot;ELTON__Field_Mapping__c&quot;,&quot;ELTON__Insurance__c&quot;,&quot;ELTON__MobileScannerApplication__c&quot;,&quot;ELTON__Other__c&quot;,&quot;ELTON__Trigger_Control_Setting__c&quot;,&quot;ELTON__Users_on_Hold__c&quot;,&quot;EOMBillingAccountMap__c&quot;,&quot;EOMFieldMapping__c&quot;,&quot;ER_SR_Product_Portfolio__c&quot;,&quot;EdgeMart&quot;,&quot;EditionDefinition&quot;,&quot;Einstein_DataFlowJobId__c&quot;,&quot;ElectricityEmssnFctrSet&quot;,&quot;ElectronicMediaGroup&quot;,&quot;EmailContent&quot;,&quot;EmailMessage&quot;,&quot;EmailMessageRelation&quot;,&quot;EmailTemplate&quot;,&quot;Email_CFD_Templates__c&quot;,&quot;EmbeddedServiceConfig&quot;,&quot;EmbeddedServiceLiveAgent&quot;,&quot;EmbeddedServiceMenuSettings&quot;,&quot;EmpUserProvisionProcessErr&quot;,&quot;EmpUserProvisioningProcess&quot;,&quot;Employee&quot;,&quot;EmployeeAsset&quot;,&quot;EmployeeContact&quot;,&quot;EmployeeCrisisAssessment&quot;,&quot;EmployeeJob&quot;,&quot;EmployeeJobPosition&quot;,&quot;EngagementChannelType&quot;,&quot;EngagementProgram&quot;,&quot;EngagementProgramVersion&quot;,&quot;EnhancedEmailTemplate&quot;,&quot;EnhancedLetterhead&quot;,&quot;EnrolleeBenefit&quot;,&quot;EnrollmentEligibilityCriteria&quot;,&quot;Entitlement&quot;,&quot;EntityArchivingException&quot;,&quot;EntityArchivingJob&quot;,&quot;EntityArchivingSetup&quot;,&quot;EntityMilestone&quot;,&quot;EnvironmentHubMember&quot;,&quot;Equipment_De_Installation__c&quot;,&quot;Evaluate_Pharma_Tags__c&quot;,&quot;Event&quot;,&quot;Examination&quot;,&quot;Expense&quot;,&quot;ExpenseReport&quot;,&quot;ExpenseReportEntry&quot;,&quot;ExternalAccountHierarchy&quot;,&quot;Favorite_Event_Monitoring__c&quot;,&quot;Favorites__c&quot;,&quot;Feature_Switch__c&quot;,&quot;FeedItem&quot;,&quot;FieldServiceMobileExtension&quot;,&quot;FieldServiceMobileSettings&quot;,&quot;Field_Trip__Logistics__c&quot;,&quot;FileExtensionList__c&quot;,&quot;FinanceBalanceSnapshot&quot;,&quot;FinanceBook&quot;,&quot;FinancePeriod&quot;,&quot;FinanceTransaction&quot;,&quot;FinanceTransactionErrorLog&quot;,&quot;FinancialDeal&quot;,&quot;FinancialDealInteraction&quot;,&quot;FinancialDealParticipant&quot;,&quot;FinancialDealParty&quot;,&quot;FinancialDealProduct&quot;,&quot;FinclDealInteractionSummary&quot;,&quot;Fixed_Software_Costs__c&quot;,&quot;FlowDefinitionView&quot;,&quot;FlowOrchestrationHistory&quot;,&quot;FlowOrchestrationInstance&quot;,&quot;FlowOrchestrationStageInstance&quot;,&quot;FlowOrchestrationStepInstance&quot;,&quot;FlowOrchestrationWorkItem&quot;,&quot;FlowRecordTypeMapping__c&quot;,&quot;Folder&quot;,&quot;Forecasting_Filter_Setting__c&quot;,&quot;FrgtHaulingEmssnFctr&quot;,&quot;FrgtHaulingEnrgyUse&quot;,&quot;FtestAllContactPoint&quot;,&quot;FtestApplication2CInterface&quot;,&quot;FtestBigObjectLookup&quot;,&quot;FtestConcrete&quot;,&quot;FtestConcrete6&quot;,&quot;FtestConcrete7&quot;,&quot;FtestConcrete8&quot;,&quot;FtestContactPointEmail&quot;,&quot;FtestContactPointPhone&quot;,&quot;FtestZosUiPrototypeChild1&quot;,&quot;FtestZosUiPrototypeChild2&quot;,&quot;FtestZosUiPrototypeParent&quot;,&quot;FulfillmentOrder&quot;,&quot;FulfillmentOrderLineItem&quot;,&quot;GBLite__GBTestSettings__c&quot;,&quot;GBLite__GB_Global_Meta__c&quot;,&quot;GBLite__GB_Grid_Folder__c&quot;,&quot;GBLite__GB_Load_Cache__c&quot;,&quot;GBLite__GB_Save_Cache__c&quot;,&quot;GBLite__GB_User_Field_Settings__c&quot;,&quot;GBLite__GB_User_Filter_Settings__c&quot;,&quot;GBLite__GridBuddySettings__c&quot;,&quot;GBLite__GridBuddy_Usage_Analytics__c&quot;,&quot;GDPR_Language_Codes__c&quot;,&quot;GDPR_Regional_Mailbox__c&quot;,&quot;GDPR_Sender_Email__c&quot;,&quot;GECares_Community_Setting__c&quot;,&quot;GEDG__DG_Settings__c&quot;,&quot;GEDG__Deal_Guidance_Workspace__c&quot;,&quot;GEHCAskExpertQuestions__c&quot;,&quot;GEHCCommunityPublicGroup__c&quot;,&quot;GEHCDSA__Cat_Content_Junction__c&quot;,&quot;GEHCDSA__CategoryMobileConfig__c&quot;,&quot;GEHCDSA__Category__c&quot;,&quot;GEHCDSA__ContentReview__c&quot;,&quot;GEHCDSA__DSA_App_Setting__c&quot;,&quot;GEHCDSA__DSA_Playlist__c&quot;,&quot;GEHCDSA__MobileAppConfig__c&quot;,&quot;GEHCDSA__Playlist_Content_Junction__c&quot;,&quot;GEHCTopicCategoryHeaderCustomLabels__c&quot;,&quot;GEHCTrainingVideo__c&quot;,&quot;GEHC_All_Country_Region__c&quot;,&quot;GEHC_BC_Custom_Batch_Filter_Support__c&quot;,&quot;GEHC_Community_Topic_Translations__c&quot;,&quot;GEHC_ForsevaConfiguration__c&quot;,&quot;GEIDPBatchQuery__c&quot;,&quot;GEIDPContactMaskTestQuery__c&quot;,&quot;GEIDPContact_Opt_Out__c&quot;,&quot;GEIDPCountryListISO__c&quot;,&quot;GEIDPCustomAttributeClassInfo__c&quot;,&quot;GEIDPGSSAppIntegration__c&quot;,&quot;GEIDPGSSWelcomeMailLinks__c&quot;,&quot;GEIDPHLSEndPointURL__c&quot;,&quot;GEIDPLanguageList__c&quot;,&quot;GEIDPLocaleList__c&quot;,&quot;GEIDPLoginTextInfo__c&quot;,&quot;GEIDPProfileUpdateReqFieldsMapping__c&quot;,&quot;GEIDPProgressiveAppMandatoryParam__c&quot;,&quot;GEIDPRegistrationClassInfo__c&quot;,&quot;GEIDPSocial_Email_Domain__c&quot;,&quot;GEIDPUDXRegionConfig__c&quot;,&quot;GEIDP_ByPass_Components__c&quot;,&quot;GEIDP_Google_Captcha__c&quot;,&quot;GEIDP_LeadContactMapping__c&quot;,&quot;GEMDM__GEMDMCountryList__c&quot;,&quot;GEMDM__GEMDMCustomerSearch__c&quot;,&quot;GEMDM__GEMDMStateList__c&quot;,&quot;GEMDM__GE_MDM_Account_Field_Mapping__c&quot;,&quot;GEMDM__GE_MDM_Account_Search_Facets__c&quot;,&quot;GEMDM__GE_MDM_Account_Search_Field_Mapping__c&quot;,&quot;GEMDM__GE_MDM_Commercial_Hierarchy_Fields__c&quot;,&quot;GEMDM__GE_MDM_DUNS_Number_API_Name__c&quot;,&quot;GEMDM__GE_MDM_Event_Processing_Field_Mapping__c&quot;,&quot;GEMDM__GE_MDM_Event_Processing__c&quot;,&quot;GEMDM__GE_MDM_Failure_Notification_Recipient__c&quot;,&quot;GEMDM__GE_MDM_General_Package_Settings__c&quot;,&quot;GEMDM__GE_MDM_Integration_Activity_Settings__c&quot;,&quot;GEMDM__GE_MDM_MDM_Integration_Settings__c&quot;,&quot;GEMDM__GE_MDM_Master_Approved_Record_Type__c&quot;,&quot;GEMDM__GE_MDM_Merge_History__c&quot;,&quot;GEMDM__GE_MDM_OneKYC_Address_Label__c&quot;,&quot;GEMDM__GE_MDM_OneKYC_Inputs__c&quot;,&quot;GEMDM__GE_MDM_OneKYC_Sentry_Web_Services__c&quot;,&quot;GEMDM__GE_MDM_Start_KYC_Record_Type__c&quot;,&quot;GEMDM__GE_MDM_Subscription_Web_Service_Inputs__c&quot;,&quot;GEMDM__GE_MDM_Upload_Documents__c&quot;,&quot;GE_Goal__c&quot;,&quot;GE_HC_MT_Catalog__c&quot;,&quot;GE_HC_MT_PTDModality__c&quot;,&quot;GE_HC_MT_PTD_AgendaModuleTable__c&quot;,&quot;GE_HC_MT_SFDCForm__c&quot;,&quot;GE_HC_MT_TrainingMasterSearchFilters__c&quot;,&quot;GE_HC_MT_TrainingMaster__c&quot;,&quot;GE_HC_MT_Trigger_Setting__c&quot;,&quot;GE_X_Sell__GE_xSell_Account_Field_Mapping__c&quot;,&quot;GE_X_Sell__GE_xSell_MDM_Account_Criteria__c&quot;,&quot;GE_X_Sell__GE_xSell_Opportunity_Field_Mapping__c&quot;,&quot;GE_X_Sell__GE_xSell_Referral_Field_Mapping__c&quot;,&quot;GE_X_Sell__Lead_Sharing_Statistics_c__x&quot;,&quot;GE_X_Sell__Opportunity__x&quot;,&quot;GE_X_Sell__Referral__x&quot;,&quot;GE_X_Sell__User_Manager_Tree__c&quot;,&quot;GGO_NUTS_Settings__c&quot;,&quot;GON_Notify__c&quot;,&quot;GON_SO__c&quot;,&quot;GPMEndpoints__c&quot;,&quot;GPMRegionMapping__c&quot;,&quot;GPM_Product_Tier_Map__c&quot;,&quot;General_Settings__c&quot;,&quot;GeneratedDocument&quot;,&quot;GeneratedDocumentSection&quot;,&quot;GeneratedWaste&quot;,&quot;GenericVisitTask&quot;,&quot;GenericVisitTaskContext&quot;,&quot;Geo_Status__c&quot;,&quot;Global_EQ_AutoReapprovals__c&quot;,&quot;Global_Geography_Hierarchy__c&quot;,&quot;Global_Product_Hierarchy__c&quot;,&quot;Global_Region_CPQ_Settings__c&quot;,&quot;Global_Region_Name__c&quot;,&quot;Global_Region_Term_vs_Annual_Amount__c&quot;,&quot;Global_Region__c&quot;,&quot;Global_Region_for_Automatic_Oppty__c&quot;,&quot;Global_Region_for_Order_to_Oppty_Update__c&quot;,&quot;Global_Roll_UP_P_L_Definition__c&quot;,&quot;Global_Sub_Region_Geography_Names__c&quot;,&quot;GnrcVstKeyPerformanceInd&quot;,&quot;GnrcVstTaskContextRelation&quot;,&quot;Goal_Action__c&quot;,&quot;GroundTravelEmssnFctr&quot;,&quot;GroundTravelEnrgyUse&quot;,&quot;GuestBuyerProfile&quot;,&quot;HCIT_Product_Portfolio_Based_Approvals__c&quot;,&quot;HFS_Rate_Card__c&quot;,&quot;HealthCareDiagnosis&quot;,&quot;HealthCareProcedure&quot;,&quot;HealthCondition&quot;,&quot;HealthConditionDetail&quot;,&quot;HealthcareFacility&quot;,&quot;HealthcareFacilityNetwork&quot;,&quot;HealthcarePayerNetwork&quot;,&quot;HealthcarePractitionerFacility&quot;,&quot;HealthcareProvider&quot;,&quot;HealthcareProviderNpi&quot;,&quot;HealthcareProviderSpecialty&quot;,&quot;HealthcareProviderTaxonomy&quot;,&quot;Helium_Information__c&quot;,&quot;Holiday&quot;,&quot;HomePageNotification__c&quot;,&quot;HotelStayEmssnFctr&quot;,&quot;HotelStayEnrgyUse&quot;,&quot;IBAutomation__c&quot;,&quot;IB_Asset_Attribute__c&quot;,&quot;IB_Asset_Custom_Access__c&quot;,&quot;IB_Asset__c&quot;,&quot;IB_Product__c&quot;,&quot;IB_Products_Subregions_Mapping__c&quot;,&quot;IB_Settings__c&quot;,&quot;IB_Source__c&quot;,&quot;IBautomationAccounts__c&quot;,&quot;IC_Unit_Services__c&quot;,&quot;IDQ_Country_List__c&quot;,&quot;IMO5IntegrationCS__c&quot;,&quot;IPAddressRange&quot;,&quot;ITOKYC_AcctStatePostalReq__c&quot;,&quot;ITOKYC_AdminProfileList__c&quot;,&quot;ITOKYC_EmailDL__c&quot;,&quot;ITOKYC_FMModalityEmails__c&quot;,&quot;ITOKYC_ITOTeamMapProvice__c&quot;,&quot;ITOKYC_Queue_Desc__c&quot;,&quot;ITOKYC_RegionOperation__c&quot;,&quot;ITOKYC_RegionValues__c&quot;,&quot;ITOKYC_SHS_Queue_Desc_Sendback__c&quot;,&quot;ITOKYC_SHS_Queue_Desc__c&quot;,&quot;ITOKYC_SelectTeamMapping__c&quot;,&quot;Identifier&quot;,&quot;IdentityDocument&quot;,&quot;IdentityResolution&quot;,&quot;Image&quot;,&quot;InStoreLocation&quot;,&quot;Incident&quot;,&quot;IncludedLicenseDefinition&quot;,&quot;India_Region_Quote_Setting__c&quot;,&quot;Individual&quot;,&quot;IndividualApplication&quot;,&quot;InflationRate&quot;,&quot;InfoAuthRequestForm&quot;,&quot;InfoAuthorizationRequest&quot;,&quot;InsightsApplication&quot;,&quot;InsightsExternalData&quot;,&quot;InsightsExternalDataPart&quot;,&quot;InspectionAssessmentInd&quot;,&quot;InspectionType&quot;,&quot;InspectionViolation&quot;,&quot;Install_Cost__c&quot;,&quot;Installation_Attachment_Type__c&quot;,&quot;Installation_Contacts__c&quot;,&quot;Installation_For_CFD_Mapping__c&quot;,&quot;Installation_Settings__c&quot;,&quot;Installation__c&quot;,&quot;InsuranceClaimAsset&quot;,&quot;InsurancePolicy&quot;,&quot;InsurancePolicyAsset&quot;,&quot;InsurancePolicyCoverage&quot;,&quot;InsurancePolicyMemberAsset&quot;,&quot;InsurancePolicyOwner&quot;,&quot;InsurancePolicyParticipant&quot;,&quot;InsurancePolicySurcharge&quot;,&quot;InsurancePolicyTransaction&quot;,&quot;InsuranceProfile&quot;,&quot;IntegrationFieldMap__c&quot;,&quot;Integration_General_Settings__c&quot;,&quot;Integration_Id_Values__c&quot;,&quot;Integration_System_Logs_Setting__c&quot;,&quot;Interaction&quot;,&quot;InteractionAttendee&quot;,&quot;InteractionParticipant&quot;,&quot;InteractionSumDiscussedAccount&quot;,&quot;InteractionSummary&quot;,&quot;InteractionSummaryParticipant&quot;,&quot;InternalOrganizationUnit&quot;,&quot;Invoice&quot;,&quot;InvoiceAddressGroup&quot;,&quot;InvoiceLine&quot;,&quot;Japan_Sales_Service_MCT_BR__c&quot;,&quot;JobFamily&quot;,&quot;JobPosition&quot;,&quot;JobProfile&quot;,&quot;JournalSubType&quot;,&quot;JournalType&quot;,&quot;KBMAX__Quote_Product__c&quot;,&quot;KBMAX__Quote__c&quot;,&quot;KnowledgeArticleVersion&quot;,&quot;LCT__c&quot;,&quot;LSAccountChatterPost__c&quot;,&quot;LS_Country_List__c&quot;,&quot;LS_German_Managers__c&quot;,&quot;LS_State_List__c&quot;,&quot;LTEVAlidationValues__c&quot;,&quot;LandingPage&quot;,&quot;LandingPageContent&quot;,&quot;Language_List__c&quot;,&quot;Language_To_ISO_Code__c&quot;,&quot;Languages_Available__c&quot;,&quot;Lead&quot;,&quot;Lead_Product_Line_Item__c&quot;,&quot;LearnerSkill&quot;,&quot;LearningItem&quot;,&quot;LegalEntity&quot;,&quot;Lens&quot;,&quot;LicensingError&quot;,&quot;LicensingRequest&quot;,&quot;LicensingRequestOrderItem&quot;,&quot;LicensingSnapshotRequest&quot;,&quot;Line_Item_Billing_Term__c&quot;,&quot;Line_Item_Product_Pricing_Detail__c&quot;,&quot;ListEmail&quot;,&quot;ListEmailSentResult&quot;,&quot;LiveAgentSession&quot;,&quot;LiveChatSensitiveDataRule&quot;,&quot;LiveChatTranscript&quot;,&quot;LiveChatVisitor&quot;,&quot;LoanApplicant&quot;,&quot;LoanApplicantAddress&quot;,&quot;LoanApplicantAsset&quot;,&quot;LoanApplicantDeclaration&quot;,&quot;LoanApplicantEmployment&quot;,&quot;LoanApplicantIncome&quot;,&quot;LoanApplicantLiability&quot;,&quot;LoanApplicationAsset&quot;,&quot;LoanApplicationFinancial&quot;,&quot;LoanApplicationLiability&quot;,&quot;LoanApplicationProperty&quot;,&quot;LoanApplicationTitleHolder&quot;,&quot;LocWaitlistMsgTemplate&quot;,&quot;Location&quot;,&quot;LocationGroup&quot;,&quot;LocationGroupAssignment&quot;,&quot;LocationTrustMeasure&quot;,&quot;LocationWaitlist&quot;,&quot;LocationWaitlistedParty&quot;,&quot;LoyaltyLedger&quot;,&quot;LoyaltyMemberCurrency&quot;,&quot;LoyaltyMemberTier&quot;,&quot;LoyaltyPartnerProduct&quot;,&quot;LoyaltyPgmGroupMbrRlnsp&quot;,&quot;LoyaltyProgram&quot;,&quot;LoyaltyProgramCurrency&quot;,&quot;LoyaltyProgramMbrPromotion&quot;,&quot;LoyaltyProgramMember&quot;,&quot;LoyaltyProgramMemberCase&quot;,&quot;LoyaltyProgramPartner&quot;,&quot;LoyaltyProgramProcess&quot;,&quot;LoyaltyProgramProcessParameter&quot;,&quot;LoyaltyProgramProcessRule&quot;,&quot;LoyaltyTier&quot;,&quot;LoyaltyTierBenefit&quot;,&quot;LoyaltyTierGroup&quot;,&quot;MCTCustomSettings__c&quot;,&quot;MCTSalesArea__c&quot;,&quot;MCT_Europe_Report_Language__c&quot;,&quot;MCT_Integration_User__c&quot;,&quot;MDM_ManageAccountConfig__c&quot;,&quot;MPM4_BASE__Milestone1_Expense__c&quot;,&quot;MPM4_BASE__Milestone1_Log__c&quot;,&quot;MPM4_BASE__Milestone1_Milestone__c&quot;,&quot;MPM4_BASE__Milestone1_Program__c&quot;,&quot;MPM4_BASE__Milestone1_Project__c&quot;,&quot;MPM4_BASE__Milestone1_Settings__c&quot;,&quot;MPM4_BASE__Milestone1_Task__c&quot;,&quot;MPM4_BASE__Milestone1_Time__c&quot;,&quot;MPM4_BASE__Risk__c&quot;,&quot;MPM4_BASE__TH_User_Settings__c&quot;,&quot;MS_BillingTerm_Template_Items__c&quot;,&quot;MS_BillingTerm_Template__c&quot;,&quot;MS_BillingTerm__c&quot;,&quot;MUST_Integration_Country_Mapping__c&quot;,&quot;Macro&quot;,&quot;Magnetic_Containment__c&quot;,&quot;MaintenanceAsset&quot;,&quot;MaintenancePlan&quot;,&quot;MaintenanceWorkRule&quot;,&quot;ManagedContentVariant&quot;,&quot;Manufacturing_Site_SPC__c&quot;,&quot;MarketSegment&quot;,&quot;MarketSegmentActivation&quot;,&quot;MarketingAppExtActivity&quot;,&quot;MarketingAppExtAssignment&quot;,&quot;MarketingAppExtension&quot;,&quot;MarketingForm&quot;,&quot;MarketingLink&quot;,&quot;MarketingLinkContent&quot;,&quot;MediaChannel&quot;,&quot;MediaContentTitle&quot;,&quot;Medication&quot;,&quot;MedicationRequest&quot;,&quot;MedicationStatement&quot;,&quot;MedicinalIngredient&quot;,&quot;MemberBenefit&quot;,&quot;MemberPlan&quot;,&quot;MessagingChannel&quot;,&quot;MessagingDeliveryError&quot;,&quot;MessagingEndUser&quot;,&quot;MessagingSession&quot;,&quot;MessagingTemplate&quot;,&quot;MktCalculatedInsight&quot;,&quot;MobileSettingsAssignment&quot;,&quot;ModalityList__c&quot;,&quot;Modality_For_Eset_Link__c&quot;,&quot;Modality_For_VSA_Finish__c&quot;,&quot;Modality__c&quot;,&quot;Monitoring_Assignment_Matrix__c&quot;,&quot;Monthly_Operating_Rates__c&quot;,&quot;MultipartyInfoAuthRequest&quot;,&quot;MyPBackOfficeTask__c&quot;,&quot;My_Favorites_Settings__c&quot;,&quot;NETDET_IP_Addresses__c&quot;,&quot;NL_Price_Matrix_Japan__c&quot;,&quot;NamespaceRegistry&quot;,&quot;NeedHelpLinks__c&quot;,&quot;NetworkReferencedObject&quot;,&quot;Note&quot;,&quot;Notification_Criteria_Fields__c&quot;,&quot;Notification_Defaults__c&quot;,&quot;Notification_Framework_Settings__c&quot;,&quot;Notification_Items__c&quot;,&quot;Notification_Queue_Email__c&quot;,&quot;Notification_Queue__c&quot;,&quot;Notification_Record_Ownership__c&quot;,&quot;Notification_Rule__c&quot;,&quot;Notification_Setting__c&quot;,&quot;Notification_Template_Fields__c&quot;,&quot;OAuthCredentials__c&quot;,&quot;OAuthToken__c&quot;,&quot;OCCR_AddConfig_Parameter__c&quot;,&quot;OCCR_Reporting__c&quot;,&quot;OCLI_LostReason_Settings__c&quot;,&quot;OCLI_Status_Settings__c&quot;,&quot;OCLI_Type_Settings__c&quot;,&quot;ODS_Product_Protfolio__c&quot;,&quot;OP_Target_Master__c&quot;,&quot;ObjectStateDefinition&quot;,&quot;ObjectStateTransition&quot;,&quot;ObjectStateValue&quot;,&quot;ObjectTerritory2Association&quot;,&quot;Object_Landing_Page_Settings__c&quot;,&quot;OccupationLicenseApplication&quot;,&quot;OcrDocumentScanResult&quot;,&quot;Omitted_Functionality__c&quot;,&quot;OmniDataPack&quot;,&quot;OmniDataTransform&quot;,&quot;OmniDataTransformItem&quot;,&quot;OmniESignatureTemplate&quot;,&quot;OmniProcess&quot;,&quot;OmniProcessCompilation&quot;,&quot;OmniProcessElement&quot;,&quot;OmniProcessTransientData&quot;,&quot;OmniScriptSavedSession&quot;,&quot;OmniUiCard&quot;,&quot;OpenActivity&quot;,&quot;OperatingHours&quot;,&quot;OperatingHoursHoliday&quot;,&quot;OperatingUnitMap__c&quot;,&quot;Opp_Close_Step__c&quot;,&quot;Opp_Close_To_Future_RecordType_Settings__c&quot;,&quot;Opp_Products_Report__c&quot;,&quot;Opp_Sync_Mail__c&quot;,&quot;Opp_Tender_Status_Settings__c&quot;,&quot;Opportunity&quot;,&quot;OpportunityContactRole&quot;,&quot;OpportunityContactRoleSuggestionInsight&quot;,&quot;OpportunityHistory&quot;,&quot;OpportunityIBAssetJunction__c&quot;,&quot;OpportunityInsight&quot;,&quot;OpportunityLineItem&quot;,&quot;OpportunityLineItemSchedule&quot;,&quot;OpportunityParticipant&quot;,&quot;OpportunityPartner&quot;,&quot;OpportunitySplit&quot;,&quot;OpportunityTeamMember&quot;,&quot;Opportunity_Amendment_Request_Settings__c&quot;,&quot;Opportunity_Amendment_Result_Settings__c&quot;,&quot;Opportunity_Competitor_Setting__c&quot;,&quot;Opportunity_Competitor__c&quot;,&quot;Opportunity_GE_Bid_Decision_Settings__c&quot;,&quot;Opportunity_Order_Package__c&quot;,&quot;Opportunity_Owner_History__c&quot;,&quot;Opportunity_Sales_Forecast_Category__c&quot;,&quot;Opportunity_Step_settings__c&quot;,&quot;Opportunity_Tender_Type_Settings__c&quot;,&quot;Opportunity_owner_update_settings__c&quot;,&quot;Oppty_Primary_Reason_for_No_Bid_Settings__c&quot;,&quot;Oppty_Territory_Mapping__c&quot;,&quot;Order&quot;,&quot;OrderAction&quot;,&quot;OrderAdjustmentGroup&quot;,&quot;OrderAdjustmentGroupSummary&quot;,&quot;OrderChangeLog&quot;,&quot;OrderDeliveryGroup&quot;,&quot;OrderDeliveryGroupSummary&quot;,&quot;OrderDeliveryMethod&quot;,&quot;OrderItem&quot;,&quot;OrderItemAdjustmentLineItem&quot;,&quot;OrderItemAdjustmentLineSummary&quot;,&quot;OrderItemConsumptionRate&quot;,&quot;OrderItemConsumptionSchedule&quot;,&quot;OrderItemSummary&quot;,&quot;OrderItemSummaryChange&quot;,&quot;OrderItemTaxLineItem&quot;,&quot;OrderItemTaxLineItemSummary&quot;,&quot;OrderPaymentSummary&quot;,&quot;OrderPreview_Permission__c&quot;,&quot;OrderPreview_Select_Template__c&quot;,&quot;OrderRTLOV__c&quot;,&quot;OrderSummary&quot;,&quot;OrderSummaryRoutingSchedule&quot;,&quot;Order_Change_Detail__c&quot;,&quot;Order_Detail_Task_LTV_Code__c&quot;,&quot;Order_Detail_Task__c&quot;,&quot;Order_Forecast_Category_Settings__c&quot;,&quot;Order_Forecast_Dimension__c&quot;,&quot;Order_Forecast_History__c&quot;,&quot;Order_Forecast_OP__c&quot;,&quot;Order_Header_Global__c&quot;,&quot;Order_Header__c&quot;,&quot;Order_Notification__c&quot;,&quot;Order_Preview_Mandatory_Fields__c&quot;,&quot;Order_RTS_Interface_Log__c&quot;,&quot;Order_Shortage_Detail__c&quot;,&quot;Order_Status__c&quot;,&quot;Order__c&quot;,&quot;OrgMetric&quot;,&quot;OrgMetricScanResult&quot;,&quot;OrgMetricScanSummary&quot;,&quot;OtherComponentTask&quot;,&quot;OtherEmssnFctrSet&quot;,&quot;OtherEmssnFctrSetItem&quot;,&quot;PEGA_Order_Package__c&quot;,&quot;POS_Email_Notifications__c&quot;,&quot;Parent_Opportunity_Settings__c&quot;,&quot;Parent_Opportunity__c&quot;,&quot;Parent_Quote_GR_Mapping__c&quot;,&quot;PartnerFundAllocation&quot;,&quot;PartnerFundClaim&quot;,&quot;PartnerFundRequest&quot;,&quot;PartnerMarketingBudget&quot;,&quot;PartyConsent&quot;,&quot;PartyIncome&quot;,&quot;PatientHealthReaction&quot;,&quot;PatientImmunization&quot;,&quot;PatientMedicalProcedure&quot;,&quot;PatientMedicalProcedureDetail&quot;,&quot;PatientMedicationDosage&quot;,&quot;Payment&quot;,&quot;PaymentApplicationMethod&quot;,&quot;PaymentAuthAdjustment&quot;,&quot;PaymentAuthorization&quot;,&quot;PaymentBatchRun&quot;,&quot;PaymentGateway&quot;,&quot;PaymentGatewayLog&quot;,&quot;PaymentLineInvoice&quot;,&quot;PaymentPolicy&quot;,&quot;PaymentSchedule&quot;,&quot;PaymentScheduleItem&quot;,&quot;PaymentTerm&quot;,&quot;PaymentTermItem&quot;,&quot;PaymentTreatment&quot;,&quot;PcmtEmssnFctrSet&quot;,&quot;PcmtEmssnFctrSetItem&quot;,&quot;PegaPE__Pega_Gadget_Configuration__c&quot;,&quot;Pega_Global_Regions__c&quot;,&quot;PendingOrderSummary&quot;,&quot;People_soft_field_Maping__c&quot;,&quot;PersonAccount&quot;,&quot;PersonEducation&quot;,&quot;PersonEmployment&quot;,&quot;PersonExamination&quot;,&quot;PersonLanguage&quot;,&quot;PersonLifeEvent&quot;,&quot;PersonList&quot;,&quot;PersonListMember&quot;,&quot;PersonName&quot;,&quot;PgmRebateTypBnftMapping&quot;,&quot;PlanBenefit&quot;,&quot;PlanBenefitItem&quot;,&quot;PlatformLicenseDefinition&quot;,&quot;PoS_Term_Opportunity_PortFolio_Matrix__c&quot;,&quot;Policy_Risk_Flag__c&quot;,&quot;Polygon&quot;,&quot;Postal_Code__c&quot;,&quot;Pre_Install_Items__c&quot;,&quot;Pre_Order_Consultation_POC__c&quot;,&quot;Precise_Address__c&quot;,&quot;PreliminaryApplicationRef&quot;,&quot;Prevent_Task_Types_Duplicate__c&quot;,&quot;PriceAdjustmentSchedule&quot;,&quot;Pricebook2&quot;,&quot;PricebookEntry&quot;,&quot;Primary_Secondary_ReasonMapping__c&quot;,&quot;Probe_and_Coil_Addition__c&quot;,&quot;Probe_and_Coil_Data1__c&quot;,&quot;Problem&quot;,&quot;ProblemIncident&quot;,&quot;Problem_Case_Scoring__c&quot;,&quot;ProcessException&quot;,&quot;ProcessInstanceHistory&quot;,&quot;ProcessInstanceStep&quot;,&quot;ProcessInstanceWorkitem&quot;,&quot;Producer&quot;,&quot;ProducerCommission&quot;,&quot;ProducerPolicyAssignment&quot;,&quot;Product2&quot;,&quot;Product2DataTranslation&quot;,&quot;Product2__c&quot;,&quot;ProductAttribute&quot;,&quot;ProductAttributeSet&quot;,&quot;ProductAttributeSetItem&quot;,&quot;ProductAttributeSetProduct&quot;,&quot;ProductAvailabilityProjection&quot;,&quot;ProductCatalog&quot;,&quot;ProductCategory&quot;,&quot;ProductCategoryDataTranslation&quot;,&quot;ProductCategoryMedia&quot;,&quot;ProductCategoryProduct&quot;,&quot;ProductConsumed&quot;,&quot;ProductConsumedState&quot;,&quot;ProductConsumptionSchedule&quot;,&quot;ProductCoverage&quot;,&quot;ProductCoverageLimit&quot;,&quot;ProductFulfillmentLocation&quot;,&quot;ProductItem&quot;,&quot;ProductItemTransaction&quot;,&quot;ProductLicenseMap&quot;,&quot;ProductMedia&quot;,&quot;ProductQuantityRule&quot;,&quot;ProductRequest&quot;,&quot;ProductRequestLineItem&quot;,&quot;ProductRequired&quot;,&quot;ProductSellingModel&quot;,&quot;ProductSellingModelOption&quot;,&quot;ProductServiceCampaign&quot;,&quot;ProductServiceCampaignItem&quot;,&quot;ProductTransfer&quot;,&quot;ProductTransferState&quot;,&quot;ProductWarrantyTerm&quot;,&quot;Product_Access__c&quot;,&quot;Product_Activity_Detail__c&quot;,&quot;Product_Area_Code_Details__c&quot;,&quot;Product_Attribute_Value_Ext_1__c&quot;,&quot;Product_Charge_Type_Mapping__c&quot;,&quot;Product_Commercial_LifeCycle__c&quot;,&quot;Product_Complexity_Score_Settings__c&quot;,&quot;Product_Country_Material_Setting__c&quot;,&quot;Product_Country_Name_Setting__c&quot;,&quot;Product_Integration_Object__c&quot;,&quot;Product_Lead_Time__c&quot;,&quot;Product_Master__c&quot;,&quot;Product_Portfolio__c&quot;,&quot;Product_Pricing_Detail__c&quot;,&quot;Product_Pricing_Information__c&quot;,&quot;Product_Score_Chevron_Settings__c&quot;,&quot;Product_Special_Access_Request__c&quot;,&quot;Product_Special_Access__c&quot;,&quot;ProgramRebateTypPayoutSrc&quot;,&quot;ProgramRebateType&quot;,&quot;ProgramRebateTypeBenefit&quot;,&quot;ProgramRebateTypeFilter&quot;,&quot;ProgramRebateTypePayout&quot;,&quot;ProgramRebateTypeProduct&quot;,&quot;ProgramRebateTypeReference&quot;,&quot;Project_Contacts__c&quot;,&quot;Project_Stakeholder__c&quot;,&quot;Promotion&quot;,&quot;PromotionChannel&quot;,&quot;PromotionLoyaltyPtnrProdt&quot;,&quot;PromotionMarketSegment&quot;,&quot;PromotionProduct&quot;,&quot;PromotionProductCategory&quot;,&quot;PromotionQualifier&quot;,&quot;PromotionSegment&quot;,&quot;PromotionSegmentBuyerGroup&quot;,&quot;PromotionSegmentSalesStore&quot;,&quot;PromotionTarget&quot;,&quot;Proposal_Line_Item_Billing_Term__c&quot;,&quot;ProrationPolicy&quot;,&quot;ProviderNetworkContract&quot;,&quot;ProviderNetworkTier&quot;,&quot;ProviderSearchSyncLog&quot;,&quot;ProvisioningRun&quot;,&quot;ProvisioningRunEvent&quot;,&quot;PublicComplaint&quot;,&quot;PublicProgram&quot;,&quot;PurchaseQuantityRule&quot;,&quot;PurchaserPlan&quot;,&quot;PurchaserPlanAssn&quot;,&quot;QuickText&quot;,&quot;Quote&quot;,&quot;QuoteExtension__c&quot;,&quot;QuoteItemTaxItem&quot;,&quot;QuoteLineItem&quot;,&quot;QuoteStatusDetails__c&quot;,&quot;Quote_Contact_Role__c&quot;,&quot;Quote_Defaults__c&quot;,&quot;Quote_Remediate1__c&quot;,&quot;Quote_Remediate2__c&quot;,&quot;Quote_Remediate__c&quot;,&quot;RR_from_Task_Custom_Setting__c&quot;,&quot;RTSInterfaceCS__c&quot;,&quot;RTS_Enhancement__c&quot;,&quot;RebateMemberProductAggregate&quot;,&quot;RebatePayment&quot;,&quot;RebatePayoutAdjustment&quot;,&quot;RebateProgram&quot;,&quot;RebateProgramMember&quot;,&quot;RebateProgramMemberPayout&quot;,&quot;RebateProgramPayoutPeriod&quot;,&quot;RecalcDateUpdate__c&quot;,&quot;ReceivedDocument&quot;,&quot;Recommendation&quot;,&quot;RecordAction&quot;,&quot;RecordAlert&quot;,&quot;RecordMergeHistory&quot;,&quot;RecordType&quot;,&quot;RecordsetFilterCriteria&quot;,&quot;RecordsetFilterCriteriaRule&quot;,&quot;RefrigerantEmssnFctr&quot;,&quot;Refund&quot;,&quot;RefundLinePayment&quot;,&quot;RegAuthorizationTypeProduct&quot;,&quot;Region_For_VSA_Finish__c&quot;,&quot;Region_List__c&quot;,&quot;Region_Listing__c&quot;,&quot;Region_Settings__c&quot;,&quot;Regions_For_Eset_Link__c&quot;,&quot;RegulatoryAuthority&quot;,&quot;RegulatoryAuthorizationType&quot;,&quot;RegulatoryCode&quot;,&quot;RegulatoryCodeAssessmentInd&quot;,&quot;RegulatoryCodeViolation&quot;,&quot;RegulatoryTrxnFee&quot;,&quot;RegulatoryTrxnFeeItem&quot;,&quot;RegulatoryTrxnFeePayment&quot;,&quot;Reltio_Attribute_Data_type_mapping__c&quot;,&quot;Reltio_Country_Attributes__c&quot;,&quot;Reminder_Time_List__c&quot;,&quot;RentalCarEmssnFctr&quot;,&quot;RentalCarEnrgyUse&quot;,&quot;ReplyText&quot;,&quot;Report&quot;,&quot;ReportAnomalyEventStore&quot;,&quot;Reservation_buffer_days__c&quot;,&quot;ResidentialLoanApplication&quot;,&quot;ResourceAbsence&quot;,&quot;ResourcePreference&quot;,&quot;Resource_Request_Record_Types__c&quot;,&quot;RetailLocationGroup&quot;,&quot;RetailStore&quot;,&quot;RetailStoreGroupAssignment&quot;,&quot;RetailStoreKpi&quot;,&quot;RetailVisitKpi&quot;,&quot;ReturnOrder&quot;,&quot;ReturnOrderItemAdjustment&quot;,&quot;ReturnOrderItemTax&quot;,&quot;ReturnOrderLineItem&quot;,&quot;RevRecogTreatmentItemGroup&quot;,&quot;RevenueDistributionMethod&quot;,&quot;RevenueElement&quot;,&quot;RevenueElementDistribution&quot;,&quot;RevenueRecogTreatmentItem&quot;,&quot;RevenueRecognitionPolicy&quot;,&quot;RevenueRecognitionTreatment&quot;,&quot;RevenueTransactionErrorLog&quot;,&quot;Revenue__c&quot;,&quot;ReviewRequests__c&quot;,&quot;SCORE_Approval_Threshold_Matrix__c&quot;,&quot;SCORE_Policy_6_0__c&quot;,&quot;SCORE_Product_Portfolio_Matrix__c&quot;,&quot;SDI_Business_Type__c&quot;,&quot;SFDCFieldTranslations__c&quot;,&quot;SFDC_Siebel_Integration__c&quot;,&quot;SF_License_Costs__c&quot;,&quot;SMAXAttributeSettings__c&quot;,&quot;SSO_API__c&quot;,&quot;SSO_ID__c&quot;,&quot;SVMXC__Batch_Lot_Master__c&quot;,&quot;SVMXC__Config_Change_Detail__c&quot;,&quot;SVMXC__Field_Default_Rules__c&quot;,&quot;SVMXC__SM_Application_Feature__c&quot;,&quot;SVMXC__SM_Appointment_Status__c&quot;,&quot;SVMXC__SM_Batch_Lot__c&quot;,&quot;SVMXC__SM_Change_Order_Configuration__c&quot;,&quot;SVMXC__SM_Change_Order_Criteria__c&quot;,&quot;SVMXC__SM_Change_Order_Line__c&quot;,&quot;SVMXC__SM_Change_Order_Log__c&quot;,&quot;SVMXC__SM_Change_Order_Parts__c&quot;,&quot;SVMXC__SM_Change_Order__c&quot;,&quot;SVMXC__SM_Crew_Resource__c&quot;,&quot;SVMXC__SM_Crew__c&quot;,&quot;SVMXC__SM_Feature_Permission__c&quot;,&quot;SVMXC__SM_IG_Job_Child__c&quot;,&quot;SVMXC__SM_IG_Job_Request__c&quot;,&quot;SVMXC__SM_IoT_Field_Mapping__c&quot;,&quot;SVMXC__SM_Recent_Items__c&quot;,&quot;SVMXC__SM_SB_Queue_Inbound__c&quot;,&quot;SVMXC__SM_SB_Queue_Outbound__c&quot;,&quot;SVMXC__SM_SFA_Process__c&quot;,&quot;SVMXC__SM_SFMTransactionSync__c&quot;,&quot;SVMXC__SPM_Mean_Time_Between_Failure__c&quot;,&quot;SWB_General_Settings__c&quot;,&quot;SalesAgreement&quot;,&quot;SalesAgreementProduct&quot;,&quot;SalesAgreementProductSchedule&quot;,&quot;SalesChannel&quot;,&quot;Sales_Coach_Activity__c&quot;,&quot;Sales_Coach_Admin__c&quot;,&quot;Sales_Coach_Role__c&quot;,&quot;Sales_Coach_Section_Item__c&quot;,&quot;Sales_Coach_Section__c&quot;,&quot;Sales_Coach_Stage__c&quot;,&quot;Salesforce_General_Setting__c&quot;,&quot;Schedule__c&quot;,&quot;SchedulingConstraint&quot;,&quot;Scope3CrbnFtprnt&quot;,&quot;Scope3EmssnSrc&quot;,&quot;Scope3PcmtItem&quot;,&quot;Scope3PcmtSummary&quot;,&quot;Score_Global_Flag_Help_Menu_Settings__c&quot;,&quot;Scorecard&quot;,&quot;ScorecardAssociation&quot;,&quot;ScorecardMetric&quot;,&quot;ScratchOrgInfo&quot;,&quot;SearchPromotionRule&quot;,&quot;SecuritiesHolding&quot;,&quot;Seller&quot;,&quot;Send_Email_to_Users_Settings__c&quot;,&quot;Send_Welcome_Email_to_Users__c&quot;,&quot;SerializedProduct&quot;,&quot;SerializedProductTransaction&quot;,&quot;ServiceAppointment&quot;,&quot;ServiceAppointmentCapacityUsage&quot;,&quot;ServiceContract&quot;,&quot;ServiceCrew&quot;,&quot;ServiceCrewMember&quot;,&quot;ServiceReport&quot;,&quot;ServiceResource&quot;,&quot;ServiceResourceCapacity&quot;,&quot;ServiceResourcePreference&quot;,&quot;ServiceResourceSkill&quot;,&quot;ServiceTerritory&quot;,&quot;ServiceTerritoryLocation&quot;,&quot;ServiceTerritoryMember&quot;,&quot;ServiceTerritoryWorkType&quot;,&quot;Service_CPQ_General_Setting__c&quot;,&quot;Service_Contract_Schedule_Detail__c&quot;,&quot;Service_Oppty_Country_with_USD__c&quot;,&quot;Service_Region_Country_List__c&quot;,&quot;Service_Request__c&quot;,&quot;Service_Staging_Object__c&quot;,&quot;SessionHijackingEventStore&quot;,&quot;SettingUsageDefinition&quot;,&quot;SettingUsageMap&quot;,&quot;SetupAssistantStep&quot;,&quot;Shadow_Activity_Detail__c&quot;,&quot;Shadow_Activity__c&quot;,&quot;SharingRecordCollection&quot;,&quot;SharingRecordCollectionItem&quot;,&quot;Shift&quot;,&quot;ShiftPattern&quot;,&quot;ShiftPatternEntry&quot;,&quot;ShiftSchedulingOperation&quot;,&quot;ShiftTemplate&quot;,&quot;Shipment&quot;,&quot;ShipmentItem&quot;,&quot;Shipment_Detail__c&quot;,&quot;Siebel_General_Settings__c&quot;,&quot;SignatureTask&quot;,&quot;SignatureTaskLineItem&quot;,&quot;SiqExchangeConnection&quot;,&quot;Site_Ready_Risk__c&quot;,&quot;SkillLevelDefinition&quot;,&quot;SkillRequirement&quot;,&quot;Skip_Validation_for_Lead_Conversion__c&quot;,&quot;Snippet&quot;,&quot;SnippetAssignment&quot;,&quot;SocialPersona&quot;,&quot;SocialPost&quot;,&quot;SpreadCallback_Criteria__c&quot;,&quot;Stakeholder_Relationship_Map_Settings__c&quot;,&quot;Stakeholder__c&quot;,&quot;StandardPermissionSet&quot;,&quot;State_List__c&quot;,&quot;StnryAssetCrbnFtprnt&quot;,&quot;StnryAssetCrbnFtprntItm&quot;,&quot;StnryAssetEnrgyUse&quot;,&quot;StnryAssetEnvrSrc&quot;,&quot;StoreActionPlanTemplate&quot;,&quot;StoreAssortment&quot;,&quot;StoreProduct&quot;,&quot;StreamingChannel&quot;,&quot;StreamingChannel__c&quot;,&quot;SubTotalCFD__c&quot;,&quot;SubTotalValues__c&quot;,&quot;Sub_Region_Settings__c&quot;,&quot;SubmITO_P_L_Mapping__c&quot;,&quot;Subtotal_Map__c&quot;,&quot;SupportPageSection__c&quot;,&quot;SupportSettings__c&quot;,&quot;Survey&quot;,&quot;SurveyEmailBranding&quot;,&quot;SurveyInvitation&quot;,&quot;SurveyQuestion&quot;,&quot;SurveyQuestionChoice&quot;,&quot;SurveyQuestionResponse&quot;,&quot;SurveyResponse&quot;,&quot;SurveyVersion&quot;,&quot;SvcCatalogReqRelatedItem&quot;,&quot;SvcCatalogRequest&quot;,&quot;Swarm&quot;,&quot;SwarmMember&quot;,&quot;System_Component__c&quot;,&quot;TASKRAY_LTNG__trLTNGGlobalSettings__c&quot;,&quot;TASKRAY__Project_Task_PublicAttrs__c&quot;,&quot;TASKRAY__Project_Task__c&quot;,&quot;TASKRAY__Project__c&quot;,&quot;TASKRAY__ViewProjectTasks__c&quot;,&quot;TASKRAY__trBaseline_Project__c&quot;,&quot;TASKRAY__trBaseline_Task_Group__c&quot;,&quot;TASKRAY__trBaseline_Task__c&quot;,&quot;TASKRAY__trBoardFilterDetails__c&quot;,&quot;TASKRAY__trBoardFilterShareJunction__c&quot;,&quot;TASKRAY__trBoardFilterUserJunction__c&quot;,&quot;TASKRAY__trBoardFilter__c&quot;,&quot;TASKRAY__trBoardPowerFilter__c&quot;,&quot;TASKRAY__trChecklistGroup__c&quot;,&quot;TASKRAY__trChecklistItem__c&quot;,&quot;TASKRAY__trContributor__c&quot;,&quot;TASKRAY__trDependency__c&quot;,&quot;TASKRAY__trGlobalSettings__c&quot;,&quot;TASKRAY__trHistory__c&quot;,&quot;TASKRAY__trMetadataCache__c&quot;,&quot;TASKRAY__trPendingInterview__c&quot;,&quot;TASKRAY__trProjectInboxNotification__c&quot;,&quot;TASKRAY__trProjectNotification__c&quot;,&quot;TASKRAY__trRecordTypeMapping__c&quot;,&quot;TASKRAY__trSettings__c&quot;,&quot;TASKRAY__trTaskGroup__c&quot;,&quot;TASKRAY__trTaskInboxNotification__c&quot;,&quot;TASKRAY__trTaskNotification__c&quot;,&quot;TASKRAY__trTaskTime__c&quot;,&quot;TCO_Cost_Data__c&quot;,&quot;TabDefinition&quot;,&quot;Task&quot;,&quot;TaskRay_CustomerContact__c&quot;,&quot;TaskRay_Helium_Information__c&quot;,&quot;TaskRay_Install_Cost__c&quot;,&quot;TaskRay_Pre_Install_Items__c&quot;,&quot;TaskRay_Stakeholder__c&quot;,&quot;Task_Types_For_Eset_Link__c&quot;,&quot;Task_Types_for_Date_Update__c&quot;,&quot;Taskray_Change_Order__c&quot;,&quot;Taskray_Construction_Rev_Quote_PO__c&quot;,&quot;Taskray_DCR__c&quot;,&quot;Taskray_Eset_Link__c&quot;,&quot;Taskray_Magnetic_Containment__c&quot;,&quot;Taskray_Order_Shortage_Detail__c&quot;,&quot;Taskray_Project_Settings__c&quot;,&quot;Taskray_REST_Project_Status__c&quot;,&quot;Taskray_Site_Ready_Risk__c&quot;,&quot;Taskray_Survey_Languages_Mapping__c&quot;,&quot;Taskray_Task_Types_For_Project__c&quot;,&quot;Taskray_Task_Types_For_RR__c&quot;,&quot;Taskray_eOMRegions__c&quot;,&quot;Taskray_eOM_event_log__c&quot;,&quot;TaxCertificate&quot;,&quot;TaxEngine&quot;,&quot;TaxEngineInteractionLog&quot;,&quot;TaxPolicy&quot;,&quot;TaxTreatment&quot;,&quot;TempCareAreaRemediation__c&quot;,&quot;Template_Product_Information__c&quot;,&quot;Template_Tender_Term_Information__c&quot;,&quot;Tenant&quot;,&quot;TenantParameterMap&quot;,&quot;Term_Exceptions__c&quot;,&quot;TermsFieldEditableProfiles__c&quot;,&quot;Territory_Account__c&quot;,&quot;Territory__c&quot;,&quot;TestCustom__c&quot;,&quot;Test_Classes_Settings__c&quot;,&quot;ThreatDetectionFeedback&quot;,&quot;Tiba_Custom_Settings__c&quot;,&quot;Tier1_Level_Thresholds__c&quot;,&quot;TimeSheet&quot;,&quot;TimeSheetEntry&quot;,&quot;TimeSheetTemplate&quot;,&quot;TimeSlot&quot;,&quot;Top_X_Designation__c&quot;,&quot;Topic&quot;,&quot;Trade_In_Valuation_Settings__c&quot;,&quot;TrainingCourseParticipant&quot;,&quot;TransactionJournal&quot;,&quot;TravelMode&quot;,&quot;TrialEnvironmentSignup&quot;,&quot;Trigger_For_Box__c&quot;,&quot;TrnCourse&quot;,&quot;USERLocale__c&quot;,&quot;UnifiedEmail&quot;,&quot;UnitOfMeasure&quot;,&quot;UnitOfMeasureConversion&quot;,&quot;UsageEntitlement&quot;,&quot;UsageEntitlementPeriod&quot;,&quot;UsageEntitlementUsage&quot;,&quot;UsageFactor&quot;,&quot;User&quot;,&quot;UserAppMenuItem&quot;,&quot;UserLicenseDefinition&quot;,&quot;User_Action__c&quot;,&quot;User_Link__c&quot;,&quot;User_Log_Setting__c&quot;,&quot;VCP_All_Region_BU__c&quot;,&quot;VCP_Setting__c&quot;,&quot;Validate_VAT_Country__c&quot;,&quot;VehicleAssetCrbnFtprnt&quot;,&quot;VehicleAssetEmssnSrc&quot;,&quot;VehicleAssetEnrgyUse&quot;,&quot;VehicleUserAssignment&quot;,&quot;Vendor_Cost_Matrix__c&quot;,&quot;Vendor__c&quot;,&quot;VideoCall&quot;,&quot;ViolationEnforcementAction&quot;,&quot;ViolationInspAssessmentInd&quot;,&quot;ViolationType&quot;,&quot;ViolationTypeAssessmentInd&quot;,&quot;VisionPredictionSettings&quot;,&quot;Visit&quot;,&quot;VisitOps__Agenda_Survey__c&quot;,&quot;VisitOps__Agenda__c&quot;,&quot;VisitOps__AttendeeImportInstructions__c&quot;,&quot;VisitOps__Attendee__c&quot;,&quot;VisitOps__CSVHeaderForAttendees__c&quot;,&quot;VisitOps__Caterer__c&quot;,&quot;VisitOps__CateringProductsAndServices__c&quot;,&quot;VisitOps__Company__c&quot;,&quot;VisitOps__Content_Custom_Setting__c&quot;,&quot;VisitOps__Expense__c&quot;,&quot;VisitOps__Expertise_Area__c&quot;,&quot;VisitOps__Innovation_Board__c&quot;,&quot;VisitOps__LocationTypeLink__c&quot;,&quot;VisitOps__Location_Product_Category__c&quot;,&quot;VisitOps__Location_Product_Link__c&quot;,&quot;VisitOps__Location_Product__c&quot;,&quot;VisitOps__Location__c&quot;,&quot;VisitOps__Logistics_Supplier_Link__c&quot;,&quot;VisitOps__Mobile_Visit_Roles__c&quot;,&quot;VisitOps__Place__c&quot;,&quot;VisitOps__Presenter_Agenda_Link__c&quot;,&quot;VisitOps__Presenter_Expertise_Link__c&quot;,&quot;VisitOps__Presenter_Survey__c&quot;,&quot;VisitOps__Presenter__c&quot;,&quot;VisitOps__Products_and_Services__c&quot;,&quot;VisitOps__Program_Location_Link__c&quot;,&quot;VisitOps__Program_Type_Link__c&quot;,&quot;VisitOps__Program__c&quot;,&quot;VisitOps__Room_Schedule__c&quot;,&quot;VisitOps__Room__c&quot;,&quot;VisitOps__Status_Mapping__c&quot;,&quot;VisitOps__Status__c&quot;,&quot;VisitOps__Supplier__c&quot;,&quot;VisitOps__Survey__c&quot;,&quot;VisitOps__Topic_Category__c&quot;,&quot;VisitOps__Topic__c&quot;,&quot;VisitOps__VisitBundle__c&quot;,&quot;VisitOps__VisitType__c&quot;,&quot;VisitOps__Visit_Content__c&quot;,&quot;VisitOps__Visit_Control__c&quot;,&quot;VisitOps__Visit_Logistics__c&quot;,&quot;VisitOps__Visit__c&quot;,&quot;VisitTask&quot;,&quot;VisitTaskContext&quot;,&quot;VisitTaskContextRelation&quot;,&quot;VisitedParty&quot;,&quot;Visitor&quot;,&quot;VoiceCall&quot;,&quot;VolunteerProject&quot;,&quot;Voucher&quot;,&quot;VoucherDefinition&quot;,&quot;W2CGlobRegionSvcSubRegionMapping__c&quot;,&quot;WM4SF3__WalkMeExtension__c&quot;,&quot;WM4SF3__WalkMeLicense__c&quot;,&quot;WarrantyTerm&quot;,&quot;WasteFootprint&quot;,&quot;WasteFootprintItem&quot;,&quot;WaveAutoInstallRequest&quot;,&quot;WebCart&quot;,&quot;WebStore&quot;,&quot;WebStoreBuyerGroup&quot;,&quot;WebStoreCatalog&quot;,&quot;WebStorePricebook&quot;,&quot;WebStoreSearchProdSettings&quot;,&quot;WebserviceIntegration__c&quot;,&quot;WorkCapacityLimit&quot;,&quot;WorkCapacityUsage&quot;,&quot;WorkContract&quot;,&quot;WorkForecastRun&quot;,&quot;WorkOrder&quot;,&quot;WorkOrderLineItem&quot;,&quot;WorkPlan&quot;,&quot;WorkPlanSelectionRule&quot;,&quot;WorkPlanTemplate&quot;,&quot;WorkPlanTemplateEntry&quot;,&quot;WorkSkillRouting&quot;,&quot;WorkStep&quot;,&quot;WorkStepTemplate&quot;,&quot;WorkType&quot;,&quot;WorkTypeCareSpecialty&quot;,&quot;WorkTypeCodeSetBundle&quot;,&quot;WorkTypeGroup&quot;,&quot;WorkTypeGroupMember&quot;,&quot;WorkerCompCoverageClass&quot;,&quot;Workflow_Master_Deactivation__c&quot;,&quot;WorkforceCapacityPlan&quot;,&quot;WstDispoEmssnFctrSet&quot;,&quot;WstDispoEmssnFctrSetItm&quot;,&quot;Zone_List__c&quot;,&quot;Zone_Settings__c&quot;,&quot;Zone__c&quot;,&quot;analyticsadopt__DatasetDetails__c&quot;,&quot;analyticsadopt__DatasetSpecs__c&quot;,&quot;box__BOSS_Exception__c&quot;,&quot;box__FRUP__c&quot;,&quot;box__Folder_Details__c&quot;,&quot;box__Folder_Meta__c&quot;,&quot;box__ItemMoveQueue__c&quot;,&quot;box__LeadConvertQueue__c&quot;,&quot;box__Lead_Setting__c&quot;,&quot;box__SSO_Setting__c&quot;,&quot;catalogitems__c&quot;,&quot;ctcoach__CT_Coach_Assessment__c&quot;,&quot;ctcoach__CT_Coach_Score__c&quot;,&quot;dfsle__EOS_Type__c&quot;,&quot;eBluebook_TradeIn_application__c&quot;,&quot;eContacts__Queue_Item__c&quot;,&quot;eContacts__Settings__c&quot;,&quot;eOMRegions__c&quot;,&quot;eOM_Auth__c&quot;,&quot;eOM_Batch_Audit__c&quot;,&quot;eOM_CountryCode_Region_Mapping__c&quot;,&quot;eOM_Disabled_Modalities__c&quot;,&quot;eOM_Integration_Configuration__c&quot;,&quot;eOM_OU_Region_Mapping__c&quot;,&quot;eOM_Status_Mapping__c&quot;,&quot;email_alert__c&quot;,&quot;footprint__footprint_Listview__c&quot;,&quot;galigeo__Category__c&quot;,&quot;galigeo__Dashboard__c&quot;,&quot;galigeo__Data_Source__c&quot;,&quot;galigeo__GGO_Custom_Object__c&quot;,&quot;galigeo__GeoFilter_Condition__c&quot;,&quot;galigeo__GeoFilter_Definition__c&quot;,&quot;galigeo__Geographic_Layer__c&quot;,&quot;galigeo__Map_Object_Action__c&quot;,&quot;galigeo__Map_Object_Field__c&quot;,&quot;galigeo__Query_Field__c&quot;,&quot;galigeo__Query_Layer__c&quot;,&quot;galigeo__SW_Map_Object__c&quot;,&quot;galigeo__SellWhereConfig__c&quot;,&quot;galigeo__SellWhereConfiguration__c&quot;,&quot;galigeo__SellWhereImages__c&quot;,&quot;galigeo__SellWhereMapConfig__c&quot;,&quot;galigeo__Symbology__c&quot;,&quot;galigeo__Thematic__c&quot;,&quot;galigeo__Visual_Analytic__c&quot;,&quot;galigeo__Visual_DataSet__c&quot;,&quot;galigeo__Visual_Object__c&quot;,&quot;gecorpcoebox__Box_Administrator__c&quot;,&quot;gecorpcoebox__Device_Name__c&quot;,&quot;gecorpcoebox__GE_Box_Permission_Set__c&quot;,&quot;ltngsharing__PrivateTestObject__c&quot;,&quot;ltngsharing__ReadOnlyTestObject__c&quot;,&quot;maps__MapsSetting__c&quot;,&quot;mkto_si__MarketoSettings__c&quot;,&quot;mkto_si__UserPreferences__c&quot;,&quot;quote_hub_user_preference__c&quot;,&quot;refedge__Advanced_Routing__c&quot;,&quot;refedge__POR_App_Configuration__c&quot;,&quot;refedge__User_Profile__c&quot;,&quot;rtsync__LoggerSettings__c&quot;,&quot;rtsync__Reltio_Sbc_Filter_Setting__c&quot;,&quot;rtsync__Reltio_Sync_Settings__c&quot;,&quot;taskRay_resource_request__c&quot;,&quot;taskray_Customer_Event__c&quot;,&quot;tinderbox__Document__c&quot;,&quot;tinderbox__Proposal__c&quot;,&quot;tinderbox__TinderBox_Accounts__c&quot;,&quot;tinderbox__TinderBox_Log__c&quot;,&quot;tinderbox__TinderBox__c&quot;,&quot;tinderbox__content__c&quot;]},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=60&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getActionOverrides=1&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getIsLWCFlexipageEnabled=1&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getKeyPrefixesWithRecordTypes=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">7999800000013c4d3d</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/QuoteEmbedded-510" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1633063192254</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Id</stringProp>
                  <stringProp name="Argument.value">${c_recordId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/QuoteEmbedded</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="GE_CloneToSameOpp_07_ClickOnCloneToSameOpportunity" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=62&amp;other.CloneWithLineItemsLightning.getQuoteRecord=1-522" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2493;a&quot;,&quot;descriptor&quot;:&quot;apex://CloneWithLineItemsLightningController/ACTION$getQuoteRecord&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:ClonewithLineItems_SameOppty&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=62&amp;other.CloneWithLineItemsLightning.getQuoteRecord=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">10325000000063da39</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=63&amp;aura.NavEventManager.getClassicNonSetupPageReferenceMappings=1-523" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2495;a&quot;,&quot;descriptor&quot;:&quot;aura://NavEventManagerController/ACTION$getClassicNonSetupPageReferenceMappings&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=63&amp;aura.NavEventManager.getClassicNonSetupPageReferenceMappings=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">1053200000005bbabd</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/CloneWithLineitemsNew-524" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Id</stringProp>
                  <stringProp name="Argument.value">${c_recordId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="oppid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">oppid</stringProp>
                  <stringProp name="Argument.value">${c_oppId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toSameOppty" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toSameOppty</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tour" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tour</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isdtp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isdtp</stringProp>
                  <stringProp name="Argument.value">p1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sfdcIFrameOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sfdcIFrameOrigin</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName5}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sfdcIFrameHost" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sfdcIFrameHost</stringProp>
                  <stringProp name="Argument.value">web</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="nonce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">${c_nonceId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ltn_app_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ltn_app_id</stringProp>
                  <stringProp name="Argument.value">06m0c0000014dgDAAQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clc</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/CloneWithLineitemsNew</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/CloneWithLineitemsNew-525" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Id</stringProp>
                  <stringProp name="Argument.value">${c_recordId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="oppid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">oppid</stringProp>
                  <stringProp name="Argument.value">${c_oppId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="toSameOppty" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toSameOppty</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tour" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tour</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isdtp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isdtp</stringProp>
                  <stringProp name="Argument.value">p1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sfdcIFrameOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sfdcIFrameOrigin</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName5}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sfdcIFrameHost" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sfdcIFrameHost</stringProp>
                  <stringProp name="Argument.value">web</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nonce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">${c_nonceId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ltn_app_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ltn_app_id</stringProp>
                  <stringProp name="Argument.value">06m0c0000014dgDAAQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="clc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clc</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/CloneWithLineitemsNew</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/CloneWithLineitemsNew-526" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ltn_app_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ltn_app_id</stringProp>
                  <stringProp name="Argument.value">06m0c0000014dgDAAQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sfdcIFrameHost" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sfdcIFrameHost</stringProp>
                  <stringProp name="Argument.value">web</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="oppid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">oppid</stringProp>
                  <stringProp name="Argument.value">${c_oppId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="toSameOppty" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toSameOppty</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Id</stringProp>
                  <stringProp name="Argument.value">${c_recordId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isdtp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isdtp</stringProp>
                  <stringProp name="Argument.value">p1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="clc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clc</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sfdcIFrameOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sfdcIFrameOrigin</stringProp>
                  <stringProp name="Argument.value">https://${p_ServerName5}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nonce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">${c_nonceId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tour" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tour</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/CloneWithLineitemsNew</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_viewStateMAC" enabled="true">
              <stringProp name="TestPlan.comments">AGV5SnViMjVqWlNJNkltUlhTazVXY0hSWWEycGFSVzFCWVRaT04wWlRVWG8yWWpkV1ltRlZNRnBsVDNoM01GQlZUak5HUjJOY2RUQXdNMlFpTENKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6STFOaUlzSW10cFpDSTZJbnRjSW5SY0lqcGNJakF3UkRka01EQXdNREEzTjJ0V1Ixd2lMRndpZGx3aU9sd2lNREpITUdNd01EQXdNREJyVVhSMVhDSXNYQ0poWENJNlhDSjJabk5wWjI1cGJtZHJaWGxjSWl4Y0luVmNJanBjSWpBd05UZGtNREF3TURBMGVUQnFkMXdpZlNJc0ltTnlhWFFpT2xzaWFXRjBJbDBzSW1saGRDSTZNVFl6TXpBMk16RTBPRFU1TWl3aVpYaHdJam93ZlE9PS4uZC1LeGZ4ZF9CV3RjQWFfTUkyZm9abE1ZUW8wcHVBeVJsaW9FcEg2djlEUT0=</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_viewStateMAC</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot;  id=&quot;com.salesforce.visualforce.ViewStateMAC&quot; name=&quot;com.salesforce.visualforce.ViewStateMAC&quot; value=&quot;(.*?)&quot; /&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_viewStateMACNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_viewState" enabled="true">
              <stringProp name="TestPlan.comments">i:</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_viewState</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot;  id=&quot;com.salesforce.visualforce.ViewState&quot; name=&quot;com.salesforce.visualforce.ViewState&quot; value=&quot;(.*?)&quot; /&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_viewStateNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_viewStateVersion" enabled="true">
              <stringProp name="TestPlan.comments">202109301915500830</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_viewStateVersion</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot;  id=&quot;com.salesforce.visualforce.ViewStateVersion&quot; name=&quot;com.salesforce.visualforce.ViewStateVersion&quot; value=&quot;(.*?)&quot; /&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_viewStateVersionNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_viewStateCSRF" enabled="true">
              <stringProp name="TestPlan.comments">VmpFPSxNakF5TVMweE1DMHdORlF3TkRvek9Ub3dPQzQxT1ROYSxoWTFuMjdWZ19RRFFKYW80d3M0ZW00LFpqazRPR1pt</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_viewStateCSRF</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot;  id=&quot;com.salesforce.visualforce.ViewStateCSRF&quot; name=&quot;com.salesforce.visualforce.ViewStateCSRF&quot; value=&quot;(.*?)&quot; /&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_viewStateCSRFNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/faces/a4j/g/3_3_3.Finalorg.ajax4jsf.javascript.AjaxScript-527" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rel" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rel</stringProp>
                  <stringProp name="Argument.value">1633029350000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/faces/a4j/g/3_3_3.Finalorg.ajax4jsf.javascript.AjaxScript</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/apex/CloneWithLineitemsNew?ltn_app_id=06m0c0000014dgDAAQ&amp;sfdcIFrameHost=web&amp;oppid=${c_oppId}&amp;toSameOppty=true&amp;Id=${c_recordId}&amp;isdtp=p1&amp;clc=0&amp;sfdcIFrameOrigin=https%3A%2F%2F${p_ServerName5}&amp;nonce=${c_nonceId}&amp;tour=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1429698273000/apttus_config2__ConfigJSLib-532" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1429698273000/apttus_config2__ConfigJSLib</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/apex/CloneWithLineitemsNew?ltn_app_id=06m0c0000014dgDAAQ&amp;sfdcIFrameHost=web&amp;oppid=${c_oppId}&amp;toSameOppty=true&amp;Id=${c_recordId}&amp;isdtp=p1&amp;clc=0&amp;sfdcIFrameOrigin=https%3A%2F%2F${p_ServerName5}&amp;nonce=${c_nonceId}&amp;tour=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1625895452000/apttus_config2__ConfigStyles-536" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1625895452000/apttus_config2__ConfigStyles</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/apex/CloneWithLineitemsNew?ltn_app_id=06m0c0000014dgDAAQ&amp;sfdcIFrameHost=web&amp;oppid=${c_oppId}&amp;toSameOppty=true&amp;Id=${c_recordId}&amp;isdtp=p1&amp;clc=0&amp;sfdcIFrameOrigin=https%3A%2F%2F${p_ServerName5}&amp;nonce=${c_nonceId}&amp;tour=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1429698273000/apttus_config2__ConfigJSLib-544" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName7}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1429698273000/apttus_config2__ConfigJSLib</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1625895452000/apttus_config2__ConfigStyles-545" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName7}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1625895452000/apttus_config2__ConfigStyles</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=64&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1-549" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2737;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.instrumentation.components.beacon.InstrumentationBeaconController/ACTION$sendData&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;batch&quot;:[{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:106801,\&quot;duration\&quot;:44803,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;navex:standardManager\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;pageTracker\&quot;,\&quot;attributes\&quot;:{\&quot;pageId\&quot;:2,\&quot;phase\&quot;:\&quot;END\&quot;,\&quot;defaultCmp\&quot;:[\&quot;force:highlightsPanel\&quot;,\&quot;c:quotechevronlexnew\&quot;,\&quot;flexipage:tabset\&quot;,\&quot;flexipage:tabset\&quot;,\&quot;c:ConfigureProductsEqPropButton\&quot;,\&quot;c:DealOverviewEqPropButton\&quot;,\&quot;c:GenerateCFDPropButton\&quot;,\&quot;c:DemoteToDraftLWCContainer\&quot;,\&quot;c:UpdateOptyAdhocPropButton\&quot;,\&quot;c:TermsAndConditionsEqPropButton\&quot;,\&quot;c:EmailQuoteToOptyTeamEqPropButton\&quot;,\&quot;c:EmailContractualEqPropButton\&quot;,\&quot;c:MakePrimaryEqPropButton\&quot;,\&quot;c:DeactivateProposalLWCContainer\&quot;,\&quot;c:ViewOrderChangeEqPropButton\&quot;,\&quot;c:InformOtrEqPropButton\&quot;,\&quot;c:ImplementApprovedReqEqPropButton\&quot;,\&quot;c:ClonewithLineItems_diffOpty\&quot;,\&quot;c:AddressSearchPropButton\&quot;,\&quot;c:SubmitForApprovalEqPropButton\&quot;,\&quot;c:GoToAgreementEqPropButton\&quot;,\&quot;c:ClonewithLineItems_SameOppty\&quot;,\&quot;c:quoteEquipmentDetailLayout\&quot;],\&quot;nonDefaultCmp\&quot;:[],\&quot;backgroundTime\&quot;:0,\&quot;trxDeleted\&quot;:{},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:103246,\&quot;duration\&quot;:19099,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;scenarioTime\&quot;,\&quot;attributes\&quot;:{\&quot;target\&quot;:\&quot;slds-button slds-button_brand act-button\&quot;,\&quot;scope\&quot;:\&quot;actionbtn cClonewithLineItems_SameOppty\&quot;,\&quot;notInstrumented\&quot;:true,\&quot;pageContext\&quot;:\&quot;one:alohaPage\&quot;,\&quot;pageUrl\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJvbmU6YWxvaGFQYWdlIiwiYXR0cmlidXRlcyI6eyJhZGRyZXNzIjoiaHR0cHM6Ly9nZWhlYWx0aGNhcmUtYW1lci0tc3VtbWVyLmxpZ2h0bmluZy5mb3JjZS5jb20vYXBleC9DbG9uZVdpdGhMaW5laXRlbXNOZXc%2FSWQ9YTZSN2QwMDAwMDBMMUxiRUFLJm9wcGlkPTAwNjdkMDAwMDBKYXZabUFBSiZ0b1NhbWVPcHB0eT10cnVlIn0sInN0YXRlIjp7fX0%3D\&quot;,\&quot;entityType\&quot;:\&quot;unknown\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false,\&quot;scenarioTrackerMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPageView&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:pageView\&quot;,\&quot;ts\&quot;:106801,\&quot;duration\&quot;:15546,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;singlePaneWindowManager:contentSelected\&quot;,\&quot;ts\&quot;:106837,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:singlePaneWindowManager\&quot;,\&quot;duration\&quot;:15},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;pageHost:loadContent\&quot;,\&quot;ts\&quot;:106870,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:pageHost\&quot;,\&quot;duration\&quot;:15},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;force-aloha-pageVF_1\&quot;,\&quot;ts\&quot;:106897,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;force:alohaPage\&quot;,\&quot;duration\&quot;:15382},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;force:alohaPageLoad-vfFrameId_1633063224431\&quot;,\&quot;ts\&quot;:106907,\&quot;context\&quot;:{\&quot;componentId\&quot;:\&quot;vfFrameId_1633063224431\&quot;},\&quot;duration\&quot;:15389},{\&quot;ns\&quot;:\&quot;navigateToComponent\&quot;,\&quot;name\&quot;:\&quot;usage\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:106802,\&quot;context\&quot;:{\&quot;targetComponent\&quot;:\&quot;one:alohaPage\&quot;},\&quot;owner\&quot;:\&quot;laf:platformPageResolver\&quot;},{\&quot;ns\&quot;:\&quot;newRouting\&quot;,\&quot;name\&quot;:\&quot;generateRoute: platform\&quot;,\&quot;ts\&quot;:106803,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:platformRouter\&quot;,\&quot;duration\&quot;:14},{\&quot;ns\&quot;:\&quot;newRouting\&quot;,\&quot;name\&quot;:\&quot;generateRoute: platform\&quot;,\&quot;ts\&quot;:106819,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:platformRouter\&quot;,\&quot;duration\&quot;:114}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:28,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;laf:pageHost\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:15},{\&quot;name\&quot;:\&quot;one:alohaPage\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:13}]}]},\&quot;owner\&quot;:\&quot;navex:standardManager\&quot;,\&quot;unixTS\&quot;:false,\&quot;ept\&quot;:15545,\&quot;previousPage\&quot;:{\&quot;entity\&quot;:\&quot;${c_recordId}\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;}},\&quot;attributes\&quot;:{\&quot;layoutContainer\&quot;:\&quot;DLC\&quot;,\&quot;navStyle\&quot;:\&quot;Standard\&quot;,\&quot;splitViewMode\&quot;:\&quot;none\&quot;,\&quot;darkModeEnabled\&quot;:false,\&quot;network\&quot;:{\&quot;maxAllowedParallelXHRs\&quot;:6},\&quot;cores\&quot;:8,\&quot;eptDeviation\&quot;:false,\&quot;density\&quot;:\&quot;COMFY\&quot;,\&quot;totalEpt\&quot;:15545,\&quot;defaultCmp\&quot;:[],\&quot;gates\&quot;:{\&quot;lds.useNewTrackedFieldBehavior\&quot;:false,\&quot;scenarioTrackerEnabled.instrumentation.ltng\&quot;:true,\&quot;scenarioTrackerMarksEnabled.instrumentation.ltng\&quot;:false,\&quot;ui.services.PageScopedCache.enabled\&quot;:false,\&quot;browserIdleTime.instrumentation.ltng\&quot;:false,\&quot;clientTelemetry.instrumentation.ltng\&quot;:true,\&quot;lwcff_ENABLE_INNER_OUTER_TEXT_PATCH.lwc.ltng\&quot;:false,\&quot;lwcff_ENABLE_NON_COMPOSED_EVENTS_LEAKAGE.lwc.ltng\&quot;:false,\&quot;componentProfiler.instrumentation.ltng\&quot;:false,\&quot;versionedFlexipagesDescriptor.lwcFlexipages.uip\&quot;:false,\&quot;rrh.useLWCRelatedLists.__test__\&quot;:false,\&quot;relatedList.lwcDrillin\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true},\&quot;cacheStats\&quot;:{\&quot;total\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:0}},\&quot;complexity\&quot;:null,\&quot;sequence\&quot;:3,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;one:alohaPage\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJvbmU6YWxvaGFQYWdlIiwiYXR0cmlidXRlcyI6eyJhZGRyZXNzIjoiaHR0cHM6Ly9nZWhlYWx0aGNhcmUtYW1lci0tc3VtbWVyLmxpZ2h0bmluZy5mb3JjZS5jb20vYXBleC9DbG9uZVdpdGhMaW5laXRlbXNOZXc%2FSWQ9YTZSN2QwMDAwMDBMMUxiRUFLJm9wcGlkPTAwNjdkMDAwMDBKYXZabUFBSiZ0b1NhbWVPcHB0eT10cnVlIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:122349,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;defsUsage\&quot;,\&quot;attributes\&quot;:{\&quot;defs\&quot;:[\&quot;markup://one:alohaPage\&quot;,\&quot;markup://lightning:workspaceAPI\&quot;,\&quot;markup://force:alohaPage\&quot;],\&quot;pageCounter\&quot;:3,\&quot;phase\&quot;:\&quot;EPT\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;defsUsage\&quot;,\&quot;scope\&quot;:\&quot;defsUsage\&quot;},\&quot;sequence\&quot;:30,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;one:alohaPage\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJvbmU6YWxvaGFQYWdlIiwiYXR0cmlidXRlcyI6eyJhZGRyZXNzIjoiaHR0cHM6Ly9nZWhlYWx0aGNhcmUtYW1lci0tc3VtbWVyLmxpZ2h0bmluZy5mb3JjZS5jb20vYXBleC9DbG9uZVdpdGhMaW5laXRlbXNOZXc%2FSWQ9YTZSN2QwMDAwMDBMMUxiRUFLJm9wcGlkPTAwNjdkMDAwMDBKYXZabUFBSiZ0b1NhbWVPcHB0eT10cnVlIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;}],&quot;traces&quot;:&quot;[]&quot;,&quot;metrics&quot;:&quot;[{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-size-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063239889,\&quot;value\&quot;:[460,460]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-watch-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063239889,\&quot;value\&quot;:[2,2]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-snapshot-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063239889,\&quot;value\&quot;:[17,16]},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063224480,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.UiApi.getObjectInfo\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063224480,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.UiApi.getRecord\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063224480,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;scenarioTime.ms\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063239883,\&quot;value\&quot;:[19099]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageReceived.afterEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063224340,\&quot;value\&quot;:[185820]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageSent.afterEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063224340,\&quot;value\&quot;:[293894]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsage.instrSizePct\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063224340,\&quot;value\&quot;:[1]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;pageview.ept.ms\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063239887,\&quot;value\&quot;:[15545]}]&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app#eyJjb21wb25lbnREZWYiOiJvbmU6YWxvaGFQYWdlIiwiYXR0cmlidXRlcyI6eyJhZGRyZXNzIjoiaHR0cHM6Ly9nZWhlYWx0aGNhcmUtYW1lci0tc3VtbWVyLmxpZ2h0bmluZy5mb3JjZS5jb20vYXBleC9DbG9uZVdpdGhMaW5laXRlbXNOZXc%2FSWQ9YTZSN2QwMDAwMDBMMUxiRUFLJm9wcGlkPTAwNjdkMDAwMDBKYXZabUFBSiZ0b1NhbWVPcHB0eT10cnVlIn0sInN0YXRlIjp7fX0%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=64&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">12235200000018ae3c</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/CloneWithLineitemsNew?isdtp=p1&amp;sfdcIFrameOrigin=https://gehealthcare-amer--summer.lightning.force.com-548" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AJAXREQUEST" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AJAXREQUEST</stringProp>
                  <stringProp name="Argument.value">_viewRoot</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="j_id0:idProductConfigurationForm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j_id0:idProductConfigurationForm</stringProp>
                  <stringProp name="Argument.value">j_id0:idProductConfigurationForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="j_id0:idProductConfigurationForm:detailBlock:j_id52:DualCurrencyRetainFlagValue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j_id0:idProductConfigurationForm:detailBlock:j_id52:DualCurrencyRetainFlagValue</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="com.salesforce.visualforce.ViewState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">com.salesforce.visualforce.ViewState</stringProp>
                  <stringProp name="Argument.value">${c_viewState}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="com.salesforce.visualforce.ViewStateVersion" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">com.salesforce.visualforce.ViewStateVersion</stringProp>
                  <stringProp name="Argument.value">${c_viewStateVersion}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="com.salesforce.visualforce.ViewStateMAC" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">com.salesforce.visualforce.ViewStateMAC</stringProp>
                  <stringProp name="Argument.value">${c_viewStateMAC}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="com.salesforce.visualforce.ViewStateCSRF" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">com.salesforce.visualforce.ViewStateCSRF</stringProp>
                  <stringProp name="Argument.value">${c_viewStateCSRF}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="j_id0:idProductConfigurationForm:detailBlock:j_id45" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j_id0:idProductConfigurationForm:detailBlock:j_id45</stringProp>
                  <stringProp name="Argument.value">j_id0:idProductConfigurationForm:detailBlock:j_id45</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/CloneWithLineitemsNew?isdtp=p1&amp;sfdcIFrameOrigin=https://${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/apex/CloneWithLineitemsNew?ltn_app_id=06m0c0000014dgDAAQ&amp;sfdcIFrameHost=web&amp;oppid=${c_oppId}&amp;toSameOppty=true&amp;Id=${c_recordId}&amp;isdtp=p1&amp;clc=0&amp;sfdcIFrameOrigin=https%3A%2F%2F${p_ServerName5}&amp;nonce=${c_nonceId}&amp;tour=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_viewState01" enabled="true">
              <stringProp name="TestPlan.comments">i:</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_viewState01</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; id=&quot;com.salesforce.visualforce.ViewState&quot; name=&quot;com.salesforce.visualforce.ViewState&quot; value=&quot;(.*?)&quot; /&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_viewState01NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_viewStateMAC01" enabled="true">
              <stringProp name="TestPlan.comments">AGV5SnViMjVqWlNJNklsVndkWGxwYUdoUmMyeFdWbVJoZEMxd1JXdFNSbkp1VEhCMFYyWTJYMjVrVjBsMWVGcGtYek5sUXpSY2RUQXdNMlFpTENKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6STFOaUlzSW10cFpDSTZJbnRjSW5SY0lqcGNJakF3UkRka01EQXdNREEzTjJ0V1Ixd2lMRndpZGx3aU9sd2lNREpITUdNd01EQXdNREJyVVhSMVhDSXNYQ0poWENJNlhDSjJabk5wWjI1cGJtZHJaWGxjSWl4Y0luVmNJanBjSWpBd05UZGtNREF3TURBMGVUQnFkMXdpZlNJc0ltTnlhWFFpT2xzaWFXRjBJbDBzSW1saGRDSTZNVFl6TXpBMk16RTJORGMyTVN3aVpYaHdJam93ZlE9PS4uajExRWFzZ1VaSzRWY3hoM0JDX3hEOUxOMVg3SkEtNkFtZWN4RVA5Q2lZZz0=</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_viewStateMAC01</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; id=&quot;com.salesforce.visualforce.ViewStateMAC&quot; name=&quot;com.salesforce.visualforce.ViewStateMAC&quot; value=&quot;(.*?)&quot; /&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_viewStateMAC01NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_viewStateCSRF01" enabled="true">
              <stringProp name="TestPlan.comments">VmpFPSxNakF5TVMweE1DMHdORlF3TkRvek9Ub3lOQzQzTmpGYSxQbTRfRTFLZXdBemttb0FmUFRMbHVaLFpqazRPR1pt</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_viewStateCSRF01</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; id=&quot;com.salesforce.visualforce.ViewStateCSRF&quot; name=&quot;com.salesforce.visualforce.ViewStateCSRF&quot; value=&quot;(.*?)&quot; /&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_viewStateCSRF01NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/CloneWithLineitemsNew?isdtp=p1&amp;sfdcIFrameOrigin=https://gehealthcare-amer--summer.lightning.force.com-551" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AJAXREQUEST" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AJAXREQUEST</stringProp>
                  <stringProp name="Argument.value">_viewRoot</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="j_id0:idProductConfigurationForm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j_id0:idProductConfigurationForm</stringProp>
                  <stringProp name="Argument.value">j_id0:idProductConfigurationForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="j_id0:idProductConfigurationForm:detailBlock:j_id52:DualCurrencyRetainFlagValue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j_id0:idProductConfigurationForm:detailBlock:j_id52:DualCurrencyRetainFlagValue</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="com.salesforce.visualforce.ViewState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">com.salesforce.visualforce.ViewState</stringProp>
                  <stringProp name="Argument.value">${c_viewState01}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="com.salesforce.visualforce.ViewStateVersion" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">com.salesforce.visualforce.ViewStateVersion</stringProp>
                  <stringProp name="Argument.value">${c_viewStateVersion}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="com.salesforce.visualforce.ViewStateMAC" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">com.salesforce.visualforce.ViewStateMAC</stringProp>
                  <stringProp name="Argument.value">${c_viewStateMAC01}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="com.salesforce.visualforce.ViewStateCSRF" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">com.salesforce.visualforce.ViewStateCSRF</stringProp>
                  <stringProp name="Argument.value">${c_viewStateCSRF01}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="j_id0:idProductConfigurationForm:detailBlock:j_id46" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j_id0:idProductConfigurationForm:detailBlock:j_id46</stringProp>
                  <stringProp name="Argument.value">j_id0:idProductConfigurationForm:detailBlock:j_id46</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/CloneWithLineitemsNew?isdtp=p1&amp;sfdcIFrameOrigin=https://${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/apex/CloneWithLineitemsNew?ltn_app_id=06m0c0000014dgDAAQ&amp;sfdcIFrameHost=web&amp;oppid=${c_oppId}&amp;toSameOppty=true&amp;Id=${c_recordId}&amp;isdtp=p1&amp;clc=0&amp;sfdcIFrameOrigin=https%3A%2F%2F${p_ServerName5}&amp;nonce=${c_nonceId}&amp;tour=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_viewState02" enabled="true">
              <stringProp name="TestPlan.comments">i:</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_viewState02</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; id=&quot;com.salesforce.visualforce.ViewState&quot; name=&quot;com.salesforce.visualforce.ViewState&quot; value=&quot;(.*?)&quot; /&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_viewState02NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_viewStateMAC02" enabled="true">
              <stringProp name="TestPlan.comments">AGV5SnViMjVqWlNJNkltZExWVXhtU2psMVZrYzRYMFZ6UW5GMFdHSmhZaTEyV1VJd1dIcE1jMUk1UmpKaGQyWlJNelZ5TXpCY2RUQXdNMlFpTENKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6STFOaUlzSW10cFpDSTZJbnRjSW5SY0lqcGNJakF3UkRka01EQXdNREEzTjJ0V1Ixd2lMRndpZGx3aU9sd2lNREpITUdNd01EQXdNREJyVVhSMVhDSXNYQ0poWENJNlhDSjJabk5wWjI1cGJtZHJaWGxjSWl4Y0luVmNJanBjSWpBd05UZGtNREF3TURBMGVUQnFkMXdpZlNJc0ltTnlhWFFpT2xzaWFXRjBJbDBzSW1saGRDSTZNVFl6TXpBMk16SXdNelF6TVN3aVpYaHdJam93ZlE9PS4uTVIyTXJpNWJjY2hTb05CZERJQzk3ZGFvaWJMOGJ6VUl4alUwRlhWV1hQbz0=</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_viewStateMAC02</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; id=&quot;com.salesforce.visualforce.ViewStateMAC&quot; name=&quot;com.salesforce.visualforce.ViewStateMAC&quot; value=&quot;(.*?)&quot; /&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_viewStateMAC02NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_viewStateCSRF02" enabled="true">
              <stringProp name="TestPlan.comments">VmpFPSxNakF5TVMweE1DMHdORlF3TkRvME1Eb3dNeTQwTXpKYSxEU2ZNZHI5WlpXU2JhdW0ycEwwMGdLLFpqazRPR1pt</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_viewStateCSRF02</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; id=&quot;com.salesforce.visualforce.ViewStateCSRF&quot; name=&quot;com.salesforce.visualforce.ViewStateCSRF&quot; value=&quot;(.*?)&quot; /&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_viewStateCSRF02NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-554" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/marketing/survey/survey1/1384-560" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/marketing/survey/survey1/1384</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/marketing/survey/survey4/1384-558" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/marketing/survey/survey4/1384</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/login/sessionserver212.html-566" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName2}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/login/sessionserver212.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/login-messages/promos.html-572" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName3}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/login-messages/promos.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/enterprise/salesforce/prod/6140/v14/oneTrust/consent/742a15b9-6aa4-4c2f-99c1-ad4ca220cf96/742a15b9-6aa4-4c2f-99c1-ad4ca220cf96.json-586" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">a.sfdcstatic.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/enterprise/salesforce/prod/6140/v14/oneTrust/consent/742a15b9-6aa4-4c2f-99c1-ad4ca220cf96/742a15b9-6aa4-4c2f-99c1-ad4ca220cf96.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName3}/login-messages/promos.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName3}</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/login-messages/promos/_jcr_content.personalization.pagemetadata.json-595" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/login-messages/promos/_jcr_content.personalization.pagemetadata.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName3}/login-messages/promos.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName3}</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/CloneWithLineitemsNew?isdtp=p1&amp;sfdcIFrameOrigin=https://gehealthcare-amer--summer.lightning.force.com-553" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AJAXREQUEST" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AJAXREQUEST</stringProp>
                  <stringProp name="Argument.value">_viewRoot</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="j_id0:idProductConfigurationForm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j_id0:idProductConfigurationForm</stringProp>
                  <stringProp name="Argument.value">j_id0:idProductConfigurationForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="j_id0:idProductConfigurationForm:detailBlock:j_id52:DualCurrencyRetainFlagValue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j_id0:idProductConfigurationForm:detailBlock:j_id52:DualCurrencyRetainFlagValue</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="com.salesforce.visualforce.ViewState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">com.salesforce.visualforce.ViewState</stringProp>
                  <stringProp name="Argument.value">${c_viewState02}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="com.salesforce.visualforce.ViewStateVersion" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">com.salesforce.visualforce.ViewStateVersion</stringProp>
                  <stringProp name="Argument.value">${c_viewStateVersion}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="com.salesforce.visualforce.ViewStateMAC" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">com.salesforce.visualforce.ViewStateMAC</stringProp>
                  <stringProp name="Argument.value">${c_viewStateMAC02}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="com.salesforce.visualforce.ViewStateCSRF" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">com.salesforce.visualforce.ViewStateCSRF</stringProp>
                  <stringProp name="Argument.value">${c_viewStateCSRF02}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="j_id0:idProductConfigurationForm:detailBlock:j_id47" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j_id0:idProductConfigurationForm:detailBlock:j_id47</stringProp>
                  <stringProp name="Argument.value">j_id0:idProductConfigurationForm:detailBlock:j_id47</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/CloneWithLineitemsNew?isdtp=p1&amp;sfdcIFrameOrigin=https://${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/apex/CloneWithLineitemsNew?ltn_app_id=06m0c0000014dgDAAQ&amp;sfdcIFrameHost=web&amp;oppid=${c_oppId}&amp;toSameOppty=true&amp;Id=${c_recordId}&amp;isdtp=p1&amp;clc=0&amp;sfdcIFrameOrigin=https%3A%2F%2F${p_ServerName5}&amp;nonce=${c_nonceId}&amp;tour=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_viewState03" enabled="true">
              <stringProp name="TestPlan.comments">i:</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_viewState03</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; id=&quot;com.salesforce.visualforce.ViewState&quot; name=&quot;com.salesforce.visualforce.ViewState&quot; value=&quot;(.*?)&quot; /&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_viewState03NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_viewStateMAC03" enabled="true">
              <stringProp name="TestPlan.comments">AGV5SnViMjVqWlNJNklqRjZaMkpvTm5aYVQwSnJkbGxrTWxJM2FsVXlWakJmT0ZSVlJIbHpWV0V5VkV4NVVraG5WRFY2VWtWY2RUQXdNMlFpTENKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6STFOaUlzSW10cFpDSTZJbnRjSW5SY0lqcGNJakF3UkRka01EQXdNREEzTjJ0V1Ixd2lMRndpZGx3aU9sd2lNREpITUdNd01EQXdNREJyVVhSMVhDSXNYQ0poWENJNlhDSjJabk5wWjI1cGJtZHJaWGxjSWl4Y0luVmNJanBjSWpBd05UZGtNREF3TURBMGVUQnFkMXdpZlNJc0ltTnlhWFFpT2xzaWFXRjBJbDBzSW1saGRDSTZNVFl6TXpBMk16SXhPVFk1TlN3aVpYaHdJam93ZlE9PS4uN2hJeWV1WEJkZXBlNVZKa25iTWxPV3NuTHZnZFNQSFhEQ1hFNUkwYTlIWT0=</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_viewStateMAC03</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; id=&quot;com.salesforce.visualforce.ViewStateMAC&quot; name=&quot;com.salesforce.visualforce.ViewStateMAC&quot; value=&quot;(.*?)&quot; /&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_viewStateMAC03NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_viewStateCSRF03" enabled="true">
              <stringProp name="TestPlan.comments">VmpFPSxNakF5TVMweE1DMHdORlF3TkRvME1Eb3hPUzQyT1RaYSxOUHhZTTVIcGU2VG9YTmxxblZSWG5NLFpqazRPR1pt</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_viewStateCSRF03</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; id=&quot;com.salesforce.visualforce.ViewStateCSRF&quot; name=&quot;com.salesforce.visualforce.ViewStateCSRF&quot; value=&quot;(.*?)&quot; /&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_viewStateCSRF03NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/CloneWithLineitemsNew?isdtp=p1&amp;sfdcIFrameOrigin=https://gehealthcare-amer--summer.lightning.force.com-604" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="j_id0:idProductConfigurationForm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j_id0:idProductConfigurationForm</stringProp>
                  <stringProp name="Argument.value">j_id0:idProductConfigurationForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="j_id0:idProductConfigurationForm:detailBlock:j_id52:DualCurrencyRetainFlagValue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j_id0:idProductConfigurationForm:detailBlock:j_id52:DualCurrencyRetainFlagValue</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="j_id0:idProductConfigurationForm:detailBlock:j_id48" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j_id0:idProductConfigurationForm:detailBlock:j_id48</stringProp>
                  <stringProp name="Argument.value">j_id0:idProductConfigurationForm:detailBlock:j_id48</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="com.salesforce.visualforce.ViewState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">com.salesforce.visualforce.ViewState</stringProp>
                  <stringProp name="Argument.value">${c_viewState03}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="com.salesforce.visualforce.ViewStateVersion" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">com.salesforce.visualforce.ViewStateVersion</stringProp>
                  <stringProp name="Argument.value">${c_viewStateVersion}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="com.salesforce.visualforce.ViewStateMAC" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">com.salesforce.visualforce.ViewStateMAC</stringProp>
                  <stringProp name="Argument.value">${c_viewStateMAC03}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="com.salesforce.visualforce.ViewStateCSRF" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">com.salesforce.visualforce.ViewStateCSRF</stringProp>
                  <stringProp name="Argument.value">${c_viewStateCSRF03}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/CloneWithLineitemsNew?isdtp=p1&amp;sfdcIFrameOrigin=https://${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/apex/CloneWithLineitemsNew?ltn_app_id=06m0c0000014dgDAAQ&amp;sfdcIFrameHost=web&amp;oppid=${c_oppId}&amp;toSameOppty=true&amp;Id=${c_recordId}&amp;isdtp=p1&amp;clc=0&amp;sfdcIFrameOrigin=https%3A%2F%2F${p_ServerName5}&amp;nonce=${c_nonceId}&amp;tour=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_recordId01" enabled="true">
              <stringProp name="TestPlan.comments">a6R7d000000L1N3EAK</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_recordId01</stringProp>
              <stringProp name="RegexExtractor.regex">SfdcApp\.projectOneNavigator\.handleRedirect\(&apos;https:\/\/gehealthcare-amer--summer\.my\.salesforce\.com\/(.*?)\?</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_recordId01NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import java.time.LocalDateTime;

String time=LocalDateTime.now();

String output = prev.getResponseDataAsString();

String responseCode=prev.getResponseCode();

String requestHeaders=prev.getRequestHeaders();

String responseHeaders=prev.getResponseHeaders();

String requestInfo=prev.getSamplerData();

String api_name = prev.toString();

String c_recordId01=vars.get(&quot;c_recordId01&quot;);

String FailureMessage = &quot;&quot;;

if((c_recordId01.equals(&quot;NotFound&quot;)))
{
	AssertionResult.setFailure(true);
	if(c_recordId01.equals(&quot;NotFound&quot;))
		FailureMessage += &quot;c_recordId01 : NotFound\t&quot;;
	FailureMessage += &quot;Incorrect Response Data&quot;;
 	FileWriter f= new FileWriter(&quot;${p_ErrorLogPath}&quot;,true);
	BufferedWriter b= new BufferedWriter(f);
	b.write(&quot;_______________________________Non-200 Code Returned_________________________________&quot;);
	b.newLine();
	b.write(&quot;For User : &quot;+vars.get(&quot;p_UserName&quot;));
	b.newLine();
	b.write(&quot;FailureMessage: &quot;+FailureMessage);
	b.newLine();
	b.write(&quot;Transaction Name : &quot;+api_name);
	b.newLine();
	b.write(&quot;SampleInfo &quot;+requestInfo);
	b.newLine();
	b.write(&quot;requestHeaders &quot;+requestHeaders);
	b.newLine();
	b.write(&quot;responseHeaders &quot;+responseHeaders);
	b.newLine();
	b.write(&quot;\t/api/negotiate/register,&quot; + time + &quot;,&quot; + &quot; Response Code:&quot; + responseCode + &quot;,&quot; + &quot;Response: &quot; + output);
	b.newLine();
	b.write(&quot;________________________________________________________________&quot;);
	b.newLine();
	b.flush();
	b.close();
 }</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=65&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1-605" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2758;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordDescriptor&quot;:&quot;${c_recordId01}.undefined.null.null.null.Id,RecordTypeId.VIEW.true.null.null.null&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app#eyJjb21wb25lbnREZWYiOiJvbmU6YWxvaGFQYWdlIiwiYXR0cmlidXRlcyI6eyJhZGRyZXNzIjoiaHR0cHM6Ly9nZWhlYWx0aGNhcmUtYW1lci0tc3VtbWVyLmxpZ2h0bmluZy5mb3JjZS5jb20vYXBleC9DbG9uZVdpdGhMaW5laXRlbXNOZXc%2FSWQ9YTZSN2QwMDAwMDBMMUxiRUFLJm9wcGlkPTAwNjdkMDAwMDBKYXZabUFBSiZ0b1NhbWVPcHB0eT10cnVlIn0sInN0YXRlIjp7fX0%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=65&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">188311000000485483</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="c_recordId01" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">c_recordId01</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.context.globalValueProviders..values.records..record..Id.value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">c_recordId01NotFound</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=66&amp;aura.RecordUi.getRecordWithFields=1-606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2854;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getRecordWithFields&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;${c_recordId01}&quot;,&quot;optionalFields&quot;:[&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Channel__c&quot;,&quot;Apttus_Proposal__Proposal__c.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__c&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Reference_ID__c&quot;,&quot;Apttus_Proposal__Proposal__c.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.SystemModstamp&quot;,&quot;Apttus_Proposal__Proposal__c.Total_amount_with_VAT__c&quot;,&quot;Apttus_Proposal__Proposal__c.Total_amount_without_VAT__c&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=66&amp;aura.RecordUi.getRecordWithFields=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">190160000000c11822</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_newQuoteNumber" enabled="true">
              <stringProp name="TestPlan.comments">Q-02281749</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_newQuoteNumber</stringProp>
              <stringProp name="RegexExtractor.regex">value&quot;:&quot;${c_recordId01}&quot;\},&quot;Name&quot;:\{&quot;displayValue&quot;:null,&quot;value&quot;:&quot;(.*?)&quot;\}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_newQuoteNumberNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_newQuoteRefId" enabled="true">
              <stringProp name="TestPlan.comments">2008363083.2</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_newQuoteRefId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;Quote_Reference_ID__c&quot;:\{&quot;displayValue&quot;:null,&quot;value&quot;:&quot;(.*?)&quot;\}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_newQuoteRefIdNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2066214197">&quot;Channel__c&quot;:{&quot;displayValue&quot;:&quot;Direct&quot;,&quot;value&quot;:&quot;Direct&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Transaction - GE_CloneToSameOpp_07_ClickOnCloneToSameOpportunity
API Name - /aura?r=66&amp;aura.RecordUi.getRecordWithFields=1-606
Assertion_NotFound</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import java.time.LocalDateTime;

String time=LocalDateTime.now();

String output = prev.getResponseDataAsString();

String responseCode=prev.getResponseCode();

String requestHeaders=prev.getRequestHeaders();

String responseHeaders=prev.getResponseHeaders();

String requestInfo=prev.getSamplerData();

String api_name = prev.toString();

String c_newQuoteNumber=vars.get(&quot;c_newQuoteNumber&quot;);

String c_newQuoteRefId=vars.get(&quot;c_newQuoteRefId&quot;);

String FailureMessage = &quot;&quot;;

if((c_newQuoteNumber.equals(&quot;NotFound&quot;)) || (c_newQuoteRefId.equals(&quot;Not Found&quot;)))
{
	AssertionResult.setFailure(true);
	if(c_newQuoteNumber.equals(&quot;NotFound&quot;))
		FailureMessage += &quot;c_newQuoteNumber : NotFound\t&quot;;
	if(c_newQuoteRefId.equals(&quot;NotFound&quot;))
		FailureMessage += &quot;c_newQuoteRefId : NotFound\t&quot;;
	FailureMessage += &quot;Incorrect Response Data&quot;;
 	FileWriter f= new FileWriter(&quot;${p_ErrorLogPath}&quot;,true);
	BufferedWriter b= new BufferedWriter(f);
	b.write(&quot;_______________________________Non-200 Code Returned_________________________________&quot;);
	b.newLine();
	b.write(&quot;For User : &quot;+vars.get(&quot;p_UserName&quot;));
	b.newLine();
	b.write(&quot;FailureMessage: &quot;+FailureMessage);
	b.newLine();
	b.write(&quot;Transaction Name : &quot;+api_name);
	b.newLine();
	b.write(&quot;SampleInfo &quot;+requestInfo);
	b.newLine();
	b.write(&quot;requestHeaders &quot;+requestHeaders);
	b.newLine();
	b.write(&quot;responseHeaders &quot;+responseHeaders);
	b.newLine();
	b.write(&quot;\t/api/negotiate/register,&quot; + time + &quot;,&quot; + &quot; Response Code:&quot; + responseCode + &quot;,&quot; + &quot;Response: &quot; + output);
	b.newLine();
	b.write(&quot;________________________________________________________________&quot;);
	b.newLine();
	b.flush();
	b.close();
 }</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=69&amp;aura.RecordUi.getRecordWithFields=1-609" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2857;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getRecordWithFields&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;${c_recordId01}&quot;,&quot;fields&quot;:[&quot;Apttus_Proposal__Proposal__c.APTPS_Quote_Type__c&quot;,&quot;Apttus_Proposal__Proposal__c.Previous_Quote_Status__c&quot;,&quot;Apttus_Proposal__Proposal__c.Proposal_Type__c&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Stage__c&quot;,&quot;Apttus_Proposal__Proposal__c.RecordType.Name&quot;],&quot;optionalFields&quot;:[&quot;Apttus_Proposal__Proposal__c.Id&quot;,&quot;Apttus_Proposal__Proposal__c.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.SystemModstamp&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=69&amp;aura.RecordUi.getRecordWithFields=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">190198000000d5c852</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-761132964">&quot;value&quot;:&quot;Draft&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Transaction - GE_CloneToSameOpp_07_ClickOnCloneToSameOpportunity
API Name - /aura?r=69&amp;aura.RecordUi.getRecordWithFields=1-609
Assertion_NotFound</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=68&amp;aura.RecordUi.getRecordWithFields=1-608" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2856;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getRecordWithFields&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;${c_recordId01}&quot;,&quot;optionalFields&quot;:[&quot;Apttus_Proposal__Proposal__c.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Stage__c&quot;,&quot;Apttus_Proposal__Proposal__c.RecordType.Name&quot;,&quot;Apttus_Proposal__Proposal__c.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.SystemModstamp&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=68&amp;aura.RecordUi.getRecordWithFields=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">190195000000682e71</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=70&amp;other.ConfigureProductsEqProp.getRecordDetails=1-610" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2864;a&quot;,&quot;descriptor&quot;:&quot;apex://ConfigureProductsEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:ConfigureProductsEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId01}&quot;},&quot;version&quot;:null}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=70&amp;other.ConfigureProductsEqProp.getRecordDetails=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">1902850000004d1fec</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=67&amp;aura.Actions.getRecordActions=1-607" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2855;a&quot;,&quot;descriptor&quot;:&quot;aura://ActionsController/ACTION$getRecordActions&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordIds&quot;:[&quot;${c_recordId01}&quot;],&quot;sections&quot;:[&quot;PAGE&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=67&amp;aura.Actions.getRecordActions=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">190162000000d04ef0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=71&amp;other.DealOverviewEqProp.getRecordDetails=1-611" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2871;a&quot;,&quot;descriptor&quot;:&quot;apex://DealOverviewEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:DealOverviewEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId01}&quot;},&quot;version&quot;:null}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=71&amp;other.DealOverviewEqProp.getRecordDetails=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">1902950000000fb22b</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/APTS_ProposalSubmitForApproval_LCS-614" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">${c_recordId01}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isLex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isLex</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="1633063307902" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">1633063307902</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/APTS_ProposalSubmitForApproval_LCS</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=73&amp;aura.RecordUi.getRecordWithFields=1-613" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2965;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getRecordWithFields&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;001a000001dLchaAAC&quot;,&quot;optionalFields&quot;:[&quot;Account.Id&quot;,&quot;Account.Name&quot;,&quot;Account.RecordTypeId&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=73&amp;aura.RecordUi.getRecordWithFields=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">1917660000003f8861</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=72&amp;aura.RecordUi.getRecordWithFields=2&amp;other.EmailContractualEqProp.getRecordDetails=1&amp;other.EmailQuoteToOptyTeamEqProp.getRecordDetails=1&amp;other.GenerateCFDProp.getRecordDetails=1&amp;other.ImplementApprovedReqEqProp.getRecordDetails=1&amp;other.InformOtrEqProp.getRecordDetails=1&amp;other.MakePrimaryEqProp.getRecordDetails=1&amp;other.TermsAndConditionsEqProp.getRecordDetails=1&amp;other.UpdateOptyAdhocProp.getRecordDetails=1&amp;other.ViewOrderChangeEqProp.getRecordDetails=1-612" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2878;a&quot;,&quot;descriptor&quot;:&quot;apex://GenerateCFDPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:GenerateCFDPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId01}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;2886;a&quot;,&quot;descriptor&quot;:&quot;apex://UpdateOptyAdhocPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:UpdateOptyAdhocPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId01}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;2893;a&quot;,&quot;descriptor&quot;:&quot;apex://TermsAndConditionsEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:TermsAndConditionsEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId01}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;2900;a&quot;,&quot;descriptor&quot;:&quot;apex://EmailQuoteToOptyTeamEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:EmailQuoteToOptyTeamEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId01}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;2907;a&quot;,&quot;descriptor&quot;:&quot;apex://EmailContractualEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:EmailContractualEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId01}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;2914;a&quot;,&quot;descriptor&quot;:&quot;apex://MakePrimaryEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:MakePrimaryEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId01}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;2922;a&quot;,&quot;descriptor&quot;:&quot;apex://ViewOrderChangeEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:ViewOrderChangeEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId01}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;2929;a&quot;,&quot;descriptor&quot;:&quot;apex://InformOtrEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:InformOtrEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId01}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;2936;a&quot;,&quot;descriptor&quot;:&quot;apex://ImplementApprovedReqEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:ImplementApprovedReqEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId01}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;2951;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getRecordWithFields&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;${c_recordId01}&quot;,&quot;fields&quot;:[&quot;Apttus_Proposal__Proposal__c.APTPS_Quote_Type__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Description__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Opp_Global_Region__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Opp_Sub_Region__c&quot;,&quot;Apttus_Proposal__Proposal__c.Country__c&quot;,&quot;Apttus_Proposal__Proposal__c.Global_Region__c&quot;,&quot;Apttus_Proposal__Proposal__c.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__c&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Agreement_Status__c&quot;,&quot;Apttus_Proposal__Proposal__c.Proposal_Type__c&quot;,&quot;Apttus_Proposal__Proposal__c.QuoteType__c&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Stage__c&quot;,&quot;Apttus_Proposal__Proposal__c.RecordType.Id&quot;,&quot;Apttus_Proposal__Proposal__c.RecordType.Name&quot;],&quot;optionalFields&quot;:[&quot;Apttus_Proposal__Proposal__c.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.SystemModstamp&quot;]}},{&quot;id&quot;:&quot;2952;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getRecordWithFields&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;${c_recordId01}&quot;,&quot;fields&quot;:[&quot;Apttus_Proposal__Proposal__c.APTPS_Deal_Approval_Status__c&quot;,&quot;Apttus_Proposal__Proposal__c.APTPS_Quote_Type__c&quot;,&quot;Apttus_Proposal__Proposal__c.Account_Credit_on_Hold__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Description__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Opp_Sub_Region__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Payment_Term__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__ReadyToGenerate__c&quot;,&quot;Apttus_Proposal__Proposal__c.Global_Region__c&quot;,&quot;Apttus_Proposal__Proposal__c.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Proposal_Type__c&quot;,&quot;Apttus_Proposal__Proposal__c.QuoteType__c&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Stage__c&quot;,&quot;Apttus_Proposal__Proposal__c.RecordType.Id&quot;,&quot;Apttus_Proposal__Proposal__c.RecordType.Name&quot;,&quot;Apttus_Proposal__Proposal__c.eOM_Order_Status__c&quot;],&quot;optionalFields&quot;:[&quot;Apttus_Proposal__Proposal__c.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.SystemModstamp&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=72&amp;aura.RecordUi.getRecordWithFields=2&amp;other.EmailContractualEqProp.getRecordDetails=1&amp;other.EmailQuoteToOptyTeamEqProp.getRecordDetails=1&amp;other.GenerateCFDProp.getRecordDetails=1&amp;other.ImplementApprovedReqEqProp.getRecordDetails=1&amp;other.InformOtrEqProp.getRecordDetails=1&amp;other.MakePrimaryEqProp.getRecordDetails=1&amp;other.TermsAndConditionsEqProp.getRecordDetails=1&amp;other.UpdateOptyAdhocProp.getRecordDetails=1&amp;other.ViewOrderChangeEqProp.getRecordDetails=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">191455000000fef84a</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=74&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1-615" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2985;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord&quot;,&quot;callingDescriptor&quot;:&quot;markup://force:record&quot;,&quot;params&quot;:{&quot;recordDescriptor&quot;:&quot;${c_recordId01}.012a0000000AW7OAAW.FULL.null.null.null.EDIT.true.null.Id,RecordTypeId.null&quot;},&quot;version&quot;:&quot;43.0&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=74&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">1918580000007aee12</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/APTS_ProposalSubmitForApproval_LCS-618" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">${c_recordId01}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isLex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isLex</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="1633063307902" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">1633063307902</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/APTS_ProposalSubmitForApproval_LCS</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=75&amp;other.quoteDetailLayout.getQuoteDetailRecord=1-616" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;3063;a&quot;,&quot;descriptor&quot;:&quot;apex://quoteDetailLayoutController/ACTION$getQuoteDetailRecord&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:quoteEquipmentDetailLayout&quot;,&quot;params&quot;:{&quot;quoteId&quot;:&quot;${c_recordId01}&quot;},&quot;version&quot;:null}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=75&amp;other.quoteDetailLayout.getQuoteDetailRecord=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">19206600000090a57d</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=77&amp;aura.DynamicComponent.getTemplateDescriptorWithExpansionBundle=1-619" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;3090;a&quot;,&quot;descriptor&quot;:&quot;aura://DynamicComponentController/ACTION$getTemplateDescriptorWithExpansionBundle&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;type&quot;:&quot;Bundle&quot;,&quot;templateReferences&quot;:[{&quot;type&quot;:&quot;AdgRollup&quot;,&quot;attributes&quot;:{&quot;targetModule&quot;:&quot;forceGenerated__action_RECORD_DETAIL___Apttus_Proposal__Proposal__c___Edit___EFFICIENT___EFFICIENT&quot;,&quot;adgModuleType&quot;:&quot;component&quot;}},{&quot;type&quot;:&quot;AdgRollup&quot;,&quot;attributes&quot;:{&quot;targetModule&quot;:&quot;forceGenerated__action_RECORD_DETAIL___Apttus_Proposal__Proposal__c___ChangeOwnerOne___${c_recordId01}___1633063218000&quot;,&quot;adgModuleType&quot;:&quot;component&quot;}}]},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=77&amp;aura.DynamicComponent.getTemplateDescriptorWithExpansionBundle=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">19286300000031c0d4</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=78&amp;ui-global-components-one-navigation.GlobalNavDropdown.getDetailTabTitle=1-620" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2949;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.navigation.GlobalNavDropdownController/ACTION$getDetailTabTitle&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;entityType&quot;:&quot;Apttus_Proposal__Proposal__c&quot;,&quot;recordId&quot;:&quot;${c_recordId01}&quot;},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=78&amp;ui-global-components-one-navigation.GlobalNavDropdown.getDetailTabTitle=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">193566000000500e12</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=79&amp;ui-global-components-one-actionsManager.ActionsManager.handleAction=1-621" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2972;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.actionsManager.ActionsManagerController/ACTION$handleAction&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;batch&quot;:[{&quot;recordId&quot;:&quot;${c_recordId01}&quot;,&quot;context&quot;:&quot;CHATTER&quot;,&quot;entityApiName&quot;:&quot;Apttus_Proposal__Proposal__c&quot;,&quot;record&quot;:{&quot;sobjectType&quot;:&quot;Apttus_Proposal__Proposal__c&quot;,&quot;Id&quot;:&quot;${c_recordId01}&quot;,&quot;Apttus_Proposal__Account__c&quot;:&quot;001a000001dLchaAAC&quot;,&quot;Apttus_Proposal__Account__r&quot;:{&quot;sobjectType&quot;:&quot;Account&quot;,&quot;Id&quot;:&quot;001a000001dLchaAAC&quot;,&quot;Name&quot;:&quot;${p_AccountName}&quot;,&quot;RecordType&quot;:{&quot;sobjectType&quot;:&quot;RecordType&quot;,&quot;Id&quot;:&quot;01230000000rrnKAAQ&quot;,&quot;Name&quot;:&quot;Validated Account&quot;},&quot;RecordTypeId&quot;:&quot;01230000000rrnKAAQ&quot;},&quot;Apttus_Proposal__Account__r__f&quot;:&quot;${p_AccountName}&quot;,&quot;Apttus_Proposal__Account__r__l&quot;:&quot;${p_AccountName}&quot;,&quot;Channel__c&quot;:&quot;Direct&quot;,&quot;Channel__c__f&quot;:&quot;Direct&quot;,&quot;Channel__c__l&quot;:&quot;Direct&quot;,&quot;Name&quot;:&quot;${c_newQuoteNumber}&quot;,&quot;Price_List_GE__c&quot;:&quot;${c_priceListId}&quot;,&quot;Price_List_GE__r&quot;:{&quot;sobjectType&quot;:&quot;Apttus_Config2__PriceList__c&quot;,&quot;Id&quot;:&quot;${c_priceListId}&quot;,&quot;Name&quot;:&quot;USA Ultrasound&quot;},&quot;Price_List_GE__r__f&quot;:&quot;USA Ultrasound&quot;,&quot;Price_List_GE__r__l&quot;:&quot;USA Ultrasound&quot;,&quot;Quote_Reference_ID__c&quot;:&quot;${c_newQuoteRefId}&quot;,&quot;Total_amount_with_VAT__c&quot;:${c_UpdatedtotalAmountWithVATC},&quot;Total_amount_with_VAT__c__f&quot;:&quot;${c_totalAmountWithVATCF}&quot;,&quot;Total_amount_with_VAT__c__l&quot;:&quot;${c_totalAmountWithVATCF}&quot;,&quot;Total_amount_without_VAT__c&quot;:${c_UpdatedtotalAmountWithoutVATC},&quot;Total_amount_without_VAT__c__f&quot;:&quot;${c_totalAmountWithoutVATCF}&quot;,&quot;Total_amount_without_VAT__c__l&quot;:&quot;${c_totalAmountWithoutVATCF}&quot;,&quot;RecordType&quot;:{&quot;sobjectType&quot;:&quot;RecordType&quot;,&quot;Id&quot;:&quot;012a0000000AW7OAAW&quot;,&quot;Name&quot;:&quot;Proposal&quot;},&quot;RecordTypeId&quot;:&quot;012a0000000AW7OAAW&quot;},&quot;section&quot;:&quot;SINGLE_ACTION_LINKS&quot;,&quot;inContextOfComponent&quot;:&quot;highlightsStencilDesktop&quot;,&quot;size&quot;:3,&quot;maxWidth&quot;:-1,&quot;actionTypes&quot;:[],&quot;bulkedAction&quot;:false,&quot;actionNames&quot;:[],&quot;enableActionsConfiguration&quot;:false,&quot;isLABPreview&quot;:false,&quot;actionsRequestId&quot;:3}]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=79&amp;ui-global-components-one-actionsManager.ActionsManager.handleAction=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">19388600000098081a</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="false">
              <stringProp name="TestPlan.comments">c_totalAmountWithVATC</stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.lang.*;
import java.lang.Math;

String ctotalAmountWithVATC = null;

ctotalAmountWithVATC = vars.get(&quot;c_totalAmountWithVATC&quot;);

float var1 = Float.parseFloat(ctotalAmountWithVATC);

int c_UpdatedtotalAmountWithVATC = (int)var1;

log.info(&quot;Changed Value: &quot; + c_UpdatedtotalAmountWithVATC);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=76&amp;aura.RecordUi.getRecordUis=1-617" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;3085;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getRecordUis&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordIds&quot;:[&quot;${c_recordId01}&quot;],&quot;layoutTypes&quot;:[&quot;Full&quot;],&quot;modes&quot;:[&quot;Edit&quot;],&quot;optionalFields&quot;:[&quot;Apttus_Proposal__Proposal__c.APTPS_Quote_Type__c&quot;,&quot;Apttus_Proposal__Proposal__c.Ancestor__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Description__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Primary__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_QPConfig__BillToAccountId__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_QPConfig__ShipToAccountId__c&quot;,&quot;Apttus_Proposal__Proposal__c.Bill_To_Precise_Address__c&quot;,&quot;Apttus_Proposal__Proposal__c.Channel__c&quot;,&quot;Apttus_Proposal__Proposal__c.Country__c&quot;,&quot;Apttus_Proposal__Proposal__c.Covid19_Optout__c&quot;,&quot;Apttus_Proposal__Proposal__c.Customer_Primary_Address__c&quot;,&quot;Apttus_Proposal__Proposal__c.Parent_Opportunity__c&quot;,&quot;Apttus_Proposal__Proposal__c.Parent__c&quot;,&quot;Apttus_Proposal__Proposal__c.Partner_Name__c&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__c&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Stage__c&quot;,&quot;Apttus_Proposal__Proposal__c.Ship_To_Precise_Address__c&quot;,&quot;Apttus_Proposal__Proposal__c.Total_VAT_Amount__c&quot;,&quot;Apttus_Proposal__Proposal__c.Total_amount_with_VAT__c&quot;,&quot;Apttus_Proposal__Proposal__c.Total_amount_without_VAT__c&quot;,&quot;Apttus_Proposal__Proposal__c.VAT__c&quot;,&quot;Apttus_Proposal__Proposal__c.eOM_Order_Number__c&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=76&amp;aura.RecordUi.getRecordUis=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">1922900000007924b4</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-455469691">&quot;Ancestor__r&quot;:{&quot;displayValue&quot;:&quot;${p_QuoteNumber}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Transaction - GE_CloneToSameOpp_07_ClickOnCloneToSameOpportunity
API Name - /aura?r=76&amp;aura.RecordUi.getRecordUis=1-617
Assertion_NotFound</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/QuoteEmbedded-623" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Id</stringProp>
                  <stringProp name="Argument.value">${c_recordId01}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1633063312052</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/QuoteEmbedded</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/APTS_ProposalSubmitForApproval_LCS-622" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="isLex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isLex</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">${c_recordId01}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="1633063307902" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">1633063307902</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/APTS_ProposalSubmitForApproval_LCS</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_bearerToken" enabled="true">
              <stringProp name="TestPlan.comments">00D7d0000077kVG!ARsAQLYRtg88EP8t1web5ERNQQoDFcKnxjq6foSXdDm3dQ.KgClJRp1YgvNginjJXFc9i4jlgXtvk65sJZfcz4FnjN1eIAg5</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_bearerToken</stringProp>
              <stringProp name="RegexExtractor.regex">&apos;SESSION_ID&apos;, &apos;(.*?)&apos;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_bearerTokenNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_csrfToken01" enabled="true">
              <stringProp name="TestPlan.comments">VmpFPSxNakF5TVMweE1DMHdORlF3TkRvME1Eb3pNQzQ1T0ROYSxnSzZRYm8tcC15b0x6eGY3UUpPampvLFpEWTVNR1F6</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_csrfToken01</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;name&quot;:&quot;callApprovalRequired&quot;,&quot;len&quot;:1,&quot;ns&quot;:&quot;&quot;,&quot;ver&quot;:40.0,&quot;csrf&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_csrfToken01NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_authorizationId" enabled="false">
              <stringProp name="TestPlan.comments">eyJub25jZSI6IllYeTJpYnpPMzc1T0RIM1RqdDBSeTNMaUxvRHJ1RV9lWURnQ09WWVBOVUVcdTAwM2QiLCJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IntcInRcIjpcIjAwRDdkMDAwMDA3N2tWR1wiLFwidlwiOlwiMDJHMGMwMDAwMDBrUXR1XCIsXCJhXCI6XCJ2ZnJlbW90aW5nc2lnbmluZ2tleVwiLFwidVwiOlwiMDA1N2QwMDAwMDR5MGp3XCJ9IiwiY3JpdCI6WyJpYXQiXSwiaWF0IjoxNjMzMDYzMjMwOTg2LCJleHAiOjB9.Q2lwQmNIQnliM1poYkVobGJIQmxjbFYwYVd4cGRIa3VZMkZzYkVGd2NISnZkbUZzVW1WeGRXbHlaV1E9.RpS67LhJV514sdZXAKGGlLT5MqIzsL6WbMV5D_kzcao=</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_authorizationId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;name&quot;:&quot;callApprovalRequired&quot;,&quot;len&quot;:1,&quot;ns&quot;:&quot;&quot;,&quot;ver&quot;:40.0,&quot;csrf&quot;:&quot;(.*?)&quot;,&quot;authorization&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default">c_authorizationIdNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import java.time.LocalDateTime;

String time=LocalDateTime.now();

String output = prev.getResponseDataAsString();

String responseCode=prev.getResponseCode();

String requestHeaders=prev.getRequestHeaders();

String responseHeaders=prev.getResponseHeaders();

String requestInfo=prev.getSamplerData();

String api_name = prev.toString();

String c_bearerToken=vars.get(&quot;c_bearerToken&quot;);

String c_csrfToken01=vars.get(&quot;c_csrfToken01&quot;);

String FailureMessage = &quot;&quot;;

if((c_bearerToken.equals(&quot;NotFound&quot;)) || (c_csrfToken01.equals(&quot;Not Found&quot;)))
{
	AssertionResult.setFailure(true);
	if(c_bearerToken.equals(&quot;NotFound&quot;))
		FailureMessage += &quot;c_bearerToken : NotFound\t&quot;;
	if(c_csrfToken01.equals(&quot;NotFound&quot;))
		FailureMessage += &quot;c_csrfToken01 : NotFound\t&quot;;
	FailureMessage += &quot;Incorrect Response Data&quot;;
 	FileWriter f= new FileWriter(&quot;${p_ErrorLogPath}&quot;,true);
	BufferedWriter b= new BufferedWriter(f);
	b.write(&quot;_______________________________Non-200 Code Returned_________________________________&quot;);
	b.newLine();
	b.write(&quot;For User : &quot;+vars.get(&quot;p_UserName&quot;));
	b.newLine();
	b.write(&quot;FailureMessage: &quot;+FailureMessage);
	b.newLine();
	b.write(&quot;Transaction Name : &quot;+api_name);
	b.newLine();
	b.write(&quot;SampleInfo &quot;+requestInfo);
	b.newLine();
	b.write(&quot;requestHeaders &quot;+requestHeaders);
	b.newLine();
	b.write(&quot;responseHeaders &quot;+responseHeaders);
	b.newLine();
	b.write(&quot;\t/api/negotiate/register,&quot; + time + &quot;,&quot; + &quot; Response Code:&quot; + responseCode + &quot;,&quot; + &quot;Response: &quot; + output);
	b.newLine();
	b.write(&quot;________________________________________________________________&quot;);
	b.newLine();
	b.flush();
	b.close();
 }</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/QuoteEmbedded-624" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Id</stringProp>
                  <stringProp name="Argument.value">${c_recordId01}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1633063312052</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/QuoteEmbedded</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/QuoteEmbedded-655" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1633063312052</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="Id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Id</stringProp>
                  <stringProp name="Argument.value">${c_recordId01}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/QuoteEmbedded</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1480120257000/WaitingButtonIcon-656" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1480120257000/WaitingButtonIcon</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/apex/APTS_ProposalSubmitForApproval_LCS?isLex=true&amp;id=${c_recordId01}&amp;1633063307902=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/services/data/v33.0/query-657" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">SELECT Id, Name,Apttus_Proposal__Account__c, Quote_Stage__c, Proposal_Type__c, IsApprovalRequired__c,GPO_MPA_MSA_SAA_Agreement_Id__c,GPO_MPA_MSA_SAA_Agreement__c,Partner_Contract__c,GPO_MPA_MSA_SAA_Agreement__r.Agreement__r.Active__c,GPO_MPA_MSA_SAA_Agreement__r.Agreement__r.Parent_Contract__c,GPO_MPA_MSA_SAA_Agreement__r.Agreement_Active__c,Partner_Contract__r.Active__c,RecordType.Name, is_Contract_Changed__c, Global_Region__c, Apttus_QPConfig__ConfigurationFinalizedDate__c, Apttus_QPConfig__PriceListId__r.Tier_1_P_L__c, Apttus_QPConfig__PriceListId__r.Tier_2_P_L__c, Apttus_QPConfig__PriceListId__r.Apttus_Config2__Active__c,Apttus_QPConfig__BillToAccountId__c,Apttus_Proposal__Opportunity__r.Primary_Agreement__c, Apttus_Proposal__ExpectedEndDate__c,QuoteExtension__r.Group_Invoices_By__c FROM Apttus_Proposal__Proposal__c WHERE Id =&apos;${c_recordId01}&apos;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/services/data/v33.0/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/apex/APTS_ProposalSubmitForApproval_LCS?isLex=true&amp;id=${c_recordId01}&amp;1633063307902=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${c_bearerToken}</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_configurationFinalizedDate" enabled="false">
              <stringProp name="TestPlan.comments">2021-10-01T04:40:01.000+0000</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_configurationFinalizedDate</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;Apttus_QPConfig__ConfigurationFinalizedDate__c&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_configurationFinalizedDateNotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/services/data/v33.0/query-658" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">select id,Agreement__c from Account_Agreement_Association__c where Primary__c=true and Account__c=&apos;001a000001dLchaAAC&apos;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/services/data/v33.0/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/apex/APTS_ProposalSubmitForApproval_LCS?isLex=true&amp;id=${c_recordId01}&amp;1633063307902=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${c_bearerToken}</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/services/data/v33.0/query-659" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">SELECT Id, Type_Of_subtotal__c,FieldSubType__c,Createddate FROM SubTotalValues__c WHERE Quote_Proposal__c=&apos;${c_recordId01}&apos; AND Createddate &gt;= ${c_configurationFinalizedDate}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/services/data/v33.0/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/apex/APTS_ProposalSubmitForApproval_LCS?isLex=true&amp;id=${c_recordId01}&amp;1633063307902=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${c_bearerToken}</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/services/data/v33.0/query-660" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">select id,Apttus_Config2__Status__c from Apttus_Config2__ProductConfiguration__c where Apttus_Config2__Status__c=&apos;Finalized&apos; and Apttus_QPConfig__Proposald__c=&apos;${c_recordId01}&apos;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/services/data/v33.0/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/apex/APTS_ProposalSubmitForApproval_LCS?isLex=true&amp;id=${c_recordId01}&amp;1633063307902=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${c_bearerToken}</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/services/data/v33.0/query-661" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">Select NewValue,OldValue,CreatedDate FROM Apttus_Proposal__Proposal__History WHERE ParentId=&apos;${c_recordId01}&apos; AND (Field=&apos;GPO_MPA_MSA_SAA_Agreement__c&apos; OR Field=&apos;Partner_Contract__c&apos;) Order by CreatedDate DESC Limit 1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/services/data/v33.0/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/apex/APTS_ProposalSubmitForApproval_LCS?isLex=true&amp;id=${c_recordId01}&amp;1633063307902=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${c_bearerToken}</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/services/data/v33.0/query-662" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">SELECT Id FROM Apttus_Proposal__Proposal_Line_Item__c WHERE Apttus_Proposal__Proposal__c =&apos;${c_recordId01}&apos;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/services/data/v33.0/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/apex/APTS_ProposalSubmitForApproval_LCS?isLex=true&amp;id=${c_recordId01}&amp;1633063307902=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${c_bearerToken}</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="GE_CloneToSameOpp_08_ClickOnOriginalQuoteNumber" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apexremote-663" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;action&quot;:&quot;ApprovalHelperUtility&quot;,&quot;method&quot;:&quot;callApprovalRequired&quot;,&quot;data&quot;:[&quot;${c_recordId01}&quot;],&quot;type&quot;:&quot;rpc&quot;,&quot;tid&quot;:2,&quot;ctx&quot;:{&quot;csrf&quot;:&quot;${c_csrfToken01}&quot;,&quot;vid&quot;:&quot;066a0000001ciKy&quot;,&quot;ns&quot;:&quot;&quot;,&quot;ver&quot;:40,&quot;authorization&quot;:&quot;${c_authorizationId}&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apexremote</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/apex/APTS_ProposalSubmitForApproval_LCS?isLex=true&amp;id=${c_recordId01}&amp;1633063307902=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}</stringProp>
                </elementProp>
                <elementProp name="X-User-Agent" elementType="Header">
                  <stringProp name="Header.name">X-User-Agent</stringProp>
                  <stringProp name="Header.value">Visualforce-Remoting</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=83&amp;other.DealOverviewEqProp.getRecordDetails=1-667" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;3260;a&quot;,&quot;descriptor&quot;:&quot;apex://DealOverviewEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:DealOverviewEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=83&amp;other.DealOverviewEqProp.getRecordDetails=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">2179470000009adf10</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=84&amp;other.GenerateCFDProp.getRecordDetails=1-668" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;3267;a&quot;,&quot;descriptor&quot;:&quot;apex://GenerateCFDPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:GenerateCFDPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=84&amp;other.GenerateCFDProp.getRecordDetails=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">217958000000db6acf</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=85&amp;other.UpdateOptyAdhocProp.getRecordDetails=1-669" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;3275;a&quot;,&quot;descriptor&quot;:&quot;apex://UpdateOptyAdhocPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:UpdateOptyAdhocPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=85&amp;other.UpdateOptyAdhocProp.getRecordDetails=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">217970000000f5ee0d</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=82&amp;other.ConfigureProductsEqProp.getRecordDetails=1-666" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;3253;a&quot;,&quot;descriptor&quot;:&quot;apex://ConfigureProductsEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:ConfigureProductsEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=82&amp;other.ConfigureProductsEqProp.getRecordDetails=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">2179360000004ec750</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=80&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1-664" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;3169;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordDescriptor&quot;:&quot;${c_recordId}.012a0000000AW7OAAW.null.null.null.Id,RecordTypeId.VIEW.true.null.Id,RecordTypeId,Name,Quote_Hub_ID__c,Quote_Reference_ID__c,Apttus_Proposal__Proposal_Name__c,Apttus_Proposal__Opportunity__r;2Name,Apttus_Proposal__Account__r;2Name,Primary_Agreement__r;2Name,Quote_Stage__c,CreatedDate,Total_amount_without_VAT__c,LastModifiedDate,Owner;2Id,Parent_Opportunity__r;2Id,Parent_Opportunity__c,Apttus_QPConfig__BillToAccountId__c,Apttus_QPConfig__ShipToAccountId__r;2Id,CreatedById,Parent_Opportunity__r;2Name,Ancestor__r;2RecordTypeId,Apttus_QPConfig__BillToAccountId__r;2Id,CreatedBy;2Name,Price_List_GE__c,Partner_Name__r;2Name,Parent__r;2Id,Apttus_Proposal__Opportunity__c,Price_List_GE__r;2Id,Parent__c,Total_amount_with_VAT__c,Apttus_QPConfig__BillToAccountId__r;2Name,Partner_Name__r;2Id,VAT__c,Apttus_Proposal__Account__r;2RecordTypeId,CurrencyIsoCode,Ancestor__c,Apttus_QPConfig__BillToAccountId__r;2RecordTypeId,Bill_To_Precise_Address__r;2Name,Partner_Name__r;2RecordTypeId,Parent__r;2Name,Apttus_QPConfig__ShipToAccountId__r;2Name,Apttus_QPConfig__ShipToAccountId__c,Ancestor__r;2Name,Parent__r;2RecordTypeId,LastModifiedBy;2Id,Apttus_Proposal__Opportunity__r;2RecordTypeId,CreatedBy;2Id,OwnerId,Total_VAT_Amount__c,Apttus_Proposal__Account__r;2Id,Apttus_Proposal__Opportunity__r;2Id,Price_List_GE__r;2Name,Ship_To_Precise_Address__r;2Id,Parent_Opportunity__r;2RecordTypeId,Apttus_Proposal__Description__c,Owner;2Name,Apttus_Proposal__Primary__c,Ship_To_Precise_Address__r;2Name,APTPS_Quote_Type__c,LastModifiedBy;2Name,SystemModstamp,Customer_Primary_Address__c,Bill_To_Precise_Address__c,Partner_Name__c,Ancestor__r;2Id,Bill_To_Precise_Address__r;2Id,Ship_To_Precise_Address__c,eOM_Order_Number__c,Apttus_Proposal__Account__c,Channel__c,LastModifiedById,Apttus_QPConfig__ShipToAccountId__r;2RecordTypeId.null&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=80&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId01}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">2176380000003eaa11</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - Approved State" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="913247577">&quot;Quote_Stage__c&quot;:{&quot;displayValue&quot;:&quot;Approved&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Transaction - GE_CloneToSameOpp_08_ClickOnOriginalQuoteNumber
API Name - /aura?r=80&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1-664
Assertion_NotFound</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2058175082">&quot;Quote_Stage__c&quot;:{&quot;displayValue&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Transaction - GE_CloneToSameOpp_08_ClickOnOriginalQuoteNumber
API Name - /aura?r=80&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1-664
Assertion_NotFound</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=81&amp;aura.RecordUi.getRecordWithFields=1-665" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;3246;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getRecordWithFields&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;${c_recordId}&quot;,&quot;optionalFields&quot;:[&quot;Apttus_Proposal__Proposal__c.APTPS_Deal_Approval_Status__c&quot;,&quot;Apttus_Proposal__Proposal__c.APTPS_Quote_Type__c&quot;,&quot;Apttus_Proposal__Proposal__c.Account_Credit_on_Hold__c&quot;,&quot;Apttus_Proposal__Proposal__c.Ancestor__c&quot;,&quot;Apttus_Proposal__Proposal__c.Ancestor__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Ancestor__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__r.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Description__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Opp_Global_Region__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Opp_Sub_Region__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Payment_Term__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Primary__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Proposal_Name__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__ReadyToGenerate__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_QPConfig__BillToAccountId__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_QPConfig__BillToAccountId__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_QPConfig__BillToAccountId__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_QPConfig__BillToAccountId__r.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_QPConfig__ShipToAccountId__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_QPConfig__ShipToAccountId__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_QPConfig__ShipToAccountId__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_QPConfig__ShipToAccountId__r.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.Bill_To_Precise_Address__c&quot;,&quot;Apttus_Proposal__Proposal__c.Bill_To_Precise_Address__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Bill_To_Precise_Address__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Channel__c&quot;,&quot;Apttus_Proposal__Proposal__c.Country__c&quot;,&quot;Apttus_Proposal__Proposal__c.Covid19_Optout__c&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedBy.Global_Region__c&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedBy.Id&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedBy.Name&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedBy.Profile.Id&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedBy.Profile.Name&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedBy.ProfileId&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedBy.SystemModstamp&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedById&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedDate&quot;,&quot;Apttus_Proposal__Proposal__c.CurrencyIsoCode&quot;,&quot;Apttus_Proposal__Proposal__c.Customer_Primary_Address__c&quot;,&quot;Apttus_Proposal__Proposal__c.Global_Region__c&quot;,&quot;Apttus_Proposal__Proposal__c.Id&quot;,&quot;Apttus_Proposal__Proposal__c.LastModifiedBy.Global_Region__c&quot;,&quot;Apttus_Proposal__Proposal__c.LastModifiedBy.Id&quot;,&quot;Apttus_Proposal__Proposal__c.LastModifiedBy.Name&quot;,&quot;Apttus_Proposal__Proposal__c.LastModifiedBy.Profile.Id&quot;,&quot;Apttus_Proposal__Proposal__c.LastModifiedBy.Profile.Name&quot;,&quot;Apttus_Proposal__Proposal__c.LastModifiedBy.ProfileId&quot;,&quot;Apttus_Proposal__Proposal__c.LastModifiedBy.SystemModstamp&quot;,&quot;Apttus_Proposal__Proposal__c.LastModifiedById&quot;,&quot;Apttus_Proposal__Proposal__c.LastModifiedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Owner.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Owner.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Owner.NameOrAlias&quot;,&quot;Apttus_Proposal__Proposal__c.OwnerId&quot;,&quot;Apttus_Proposal__Proposal__c.Parent_Opportunity__c&quot;,&quot;Apttus_Proposal__Proposal__c.Parent_Opportunity__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Parent_Opportunity__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Parent__c&quot;,&quot;Apttus_Proposal__Proposal__c.Parent__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Parent__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Partner_Name__c&quot;,&quot;Apttus_Proposal__Proposal__c.Partner_Name__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Partner_Name__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Previous_Quote_Status__c&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__c&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.CreatedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.CurrencyIsoCode&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.LastModifiedById&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.LastModifiedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.SystemModstamp&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__c&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Agreement_Status__c&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Apttus_QPComply__RelatedProposalId__c&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Apttus__FF_Agreement_Number__c&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.CreatedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.CurrencyIsoCode&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.LastModifiedById&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.LastModifiedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Quote_Configuraiton_Version__c&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.SystemModstamp&quot;,&quot;Apttus_Proposal__Proposal__c.Proposal_Type__c&quot;,&quot;Apttus_Proposal__Proposal__c.QuoteType__c&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Hub_ID__c&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Reference_ID__c&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Stage__c&quot;,&quot;Apttus_Proposal__Proposal__c.RecordType.Id&quot;,&quot;Apttus_Proposal__Proposal__c.RecordType.Name&quot;,&quot;Apttus_Proposal__Proposal__c.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.Ship_To_Precise_Address__c&quot;,&quot;Apttus_Proposal__Proposal__c.Ship_To_Precise_Address__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Ship_To_Precise_Address__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.SystemModstamp&quot;,&quot;Apttus_Proposal__Proposal__c.Total_VAT_Amount__c&quot;,&quot;Apttus_Proposal__Proposal__c.Total_amount_with_VAT__c&quot;,&quot;Apttus_Proposal__Proposal__c.Total_amount_without_VAT__c&quot;,&quot;Apttus_Proposal__Proposal__c.VAT__c&quot;,&quot;Apttus_Proposal__Proposal__c.eOM_Order_Number__c&quot;,&quot;Apttus_Proposal__Proposal__c.eOM_Order_Status__c&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=81&amp;aura.RecordUi.getRecordWithFields=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">2178220000001f1890</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/APTS_ProposalSubmitForApproval_LCS-671" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">${c_recordId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isLex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isLex</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="1633063335569" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">1633063335569</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/APTS_ProposalSubmitForApproval_LCS</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=87&amp;other.GoToAgreementEqProp.getRecordDetails=1-672" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;3387;a&quot;,&quot;descriptor&quot;:&quot;apex://GoToAgreementEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:GoToAgreementEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=87&amp;other.GoToAgreementEqProp.getRecordDetails=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">220154000000309429</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=86&amp;aura.RecordUi.getRecordWithFields=1&amp;other.EmailContractualEqProp.getRecordDetails=1&amp;other.EmailQuoteToOptyTeamEqProp.getRecordDetails=1&amp;other.ImplementApprovedReqEqProp.getRecordDetails=1&amp;other.InformOtrEqProp.getRecordDetails=1&amp;other.MakePrimaryEqProp.getRecordDetails=1&amp;other.TermsAndConditionsEqProp.getRecordDetails=1&amp;other.ViewOrderChangeEqProp.getRecordDetails=1-670" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;3282;a&quot;,&quot;descriptor&quot;:&quot;apex://TermsAndConditionsEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:TermsAndConditionsEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;3289;a&quot;,&quot;descriptor&quot;:&quot;apex://EmailQuoteToOptyTeamEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:EmailQuoteToOptyTeamEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;3296;a&quot;,&quot;descriptor&quot;:&quot;apex://EmailContractualEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:EmailContractualEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;3303;a&quot;,&quot;descriptor&quot;:&quot;apex://MakePrimaryEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:MakePrimaryEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;3311;a&quot;,&quot;descriptor&quot;:&quot;apex://ViewOrderChangeEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:ViewOrderChangeEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;3318;a&quot;,&quot;descriptor&quot;:&quot;apex://InformOtrEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:InformOtrEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;3325;a&quot;,&quot;descriptor&quot;:&quot;apex://ImplementApprovedReqEqPropController/ACTION$getRecordDetails&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:ImplementApprovedReqEqPropButton&quot;,&quot;params&quot;:{&quot;objId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null},{&quot;id&quot;:&quot;3356;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getRecordWithFields&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;${c_recordId}&quot;,&quot;fields&quot;:[&quot;Apttus_Proposal__Proposal__c.APTPS_Quote_Type__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Description__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Opp_Global_Region__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Opp_Sub_Region__c&quot;,&quot;Apttus_Proposal__Proposal__c.Country__c&quot;,&quot;Apttus_Proposal__Proposal__c.Global_Region__c&quot;,&quot;Apttus_Proposal__Proposal__c.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__c&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Agreement_Status__c&quot;,&quot;Apttus_Proposal__Proposal__c.Proposal_Type__c&quot;,&quot;Apttus_Proposal__Proposal__c.QuoteType__c&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Stage__c&quot;,&quot;Apttus_Proposal__Proposal__c.RecordType.Id&quot;,&quot;Apttus_Proposal__Proposal__c.RecordType.Name&quot;],&quot;optionalFields&quot;:[&quot;Apttus_Proposal__Proposal__c.APTPS_Deal_Approval_Status__c&quot;,&quot;Apttus_Proposal__Proposal__c.Account_Credit_on_Hold__c&quot;,&quot;Apttus_Proposal__Proposal__c.Ancestor__c&quot;,&quot;Apttus_Proposal__Proposal__c.Ancestor__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Ancestor__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__r.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__r.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Payment_Term__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Primary__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__Proposal_Name__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_Proposal__ReadyToGenerate__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_QPConfig__BillToAccountId__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_QPConfig__BillToAccountId__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_QPConfig__BillToAccountId__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_QPConfig__BillToAccountId__r.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_QPConfig__ShipToAccountId__c&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_QPConfig__ShipToAccountId__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_QPConfig__ShipToAccountId__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Apttus_QPConfig__ShipToAccountId__r.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.Bill_To_Precise_Address__c&quot;,&quot;Apttus_Proposal__Proposal__c.Bill_To_Precise_Address__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Bill_To_Precise_Address__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Channel__c&quot;,&quot;Apttus_Proposal__Proposal__c.Covid19_Optout__c&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedBy.Global_Region__c&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedBy.Id&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedBy.Name&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedBy.Profile.Id&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedBy.Profile.Name&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedBy.ProfileId&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedBy.SystemModstamp&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedById&quot;,&quot;Apttus_Proposal__Proposal__c.CreatedDate&quot;,&quot;Apttus_Proposal__Proposal__c.CurrencyIsoCode&quot;,&quot;Apttus_Proposal__Proposal__c.Customer_Primary_Address__c&quot;,&quot;Apttus_Proposal__Proposal__c.LastModifiedBy.Global_Region__c&quot;,&quot;Apttus_Proposal__Proposal__c.LastModifiedBy.Id&quot;,&quot;Apttus_Proposal__Proposal__c.LastModifiedBy.Name&quot;,&quot;Apttus_Proposal__Proposal__c.LastModifiedBy.Profile.Id&quot;,&quot;Apttus_Proposal__Proposal__c.LastModifiedBy.Profile.Name&quot;,&quot;Apttus_Proposal__Proposal__c.LastModifiedBy.ProfileId&quot;,&quot;Apttus_Proposal__Proposal__c.LastModifiedBy.SystemModstamp&quot;,&quot;Apttus_Proposal__Proposal__c.LastModifiedById&quot;,&quot;Apttus_Proposal__Proposal__c.LastModifiedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Owner.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Owner.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Owner.NameOrAlias&quot;,&quot;Apttus_Proposal__Proposal__c.OwnerId&quot;,&quot;Apttus_Proposal__Proposal__c.Parent_Opportunity__c&quot;,&quot;Apttus_Proposal__Proposal__c.Parent_Opportunity__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Parent_Opportunity__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Parent__c&quot;,&quot;Apttus_Proposal__Proposal__c.Parent__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Parent__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Partner_Name__c&quot;,&quot;Apttus_Proposal__Proposal__c.Partner_Name__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Partner_Name__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Previous_Quote_Status__c&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__c&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.CreatedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.CurrencyIsoCode&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.LastModifiedById&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.LastModifiedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Price_List_GE__r.SystemModstamp&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Apttus_QPComply__RelatedProposalId__c&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Apttus__FF_Agreement_Number__c&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.CreatedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.CurrencyIsoCode&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.LastModifiedById&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.LastModifiedDate&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.Quote_Configuraiton_Version__c&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.Primary_Agreement__r.SystemModstamp&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Hub_ID__c&quot;,&quot;Apttus_Proposal__Proposal__c.Quote_Reference_ID__c&quot;,&quot;Apttus_Proposal__Proposal__c.RecordTypeId&quot;,&quot;Apttus_Proposal__Proposal__c.Ship_To_Precise_Address__c&quot;,&quot;Apttus_Proposal__Proposal__c.Ship_To_Precise_Address__r.Id&quot;,&quot;Apttus_Proposal__Proposal__c.Ship_To_Precise_Address__r.Name&quot;,&quot;Apttus_Proposal__Proposal__c.SystemModstamp&quot;,&quot;Apttus_Proposal__Proposal__c.Total_VAT_Amount__c&quot;,&quot;Apttus_Proposal__Proposal__c.Total_amount_with_VAT__c&quot;,&quot;Apttus_Proposal__Proposal__c.Total_amount_without_VAT__c&quot;,&quot;Apttus_Proposal__Proposal__c.VAT__c&quot;,&quot;Apttus_Proposal__Proposal__c.eOM_Order_Number__c&quot;,&quot;Apttus_Proposal__Proposal__c.eOM_Order_Status__c&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=86&amp;aura.RecordUi.getRecordWithFields=1&amp;other.EmailContractualEqProp.getRecordDetails=1&amp;other.EmailQuoteToOptyTeamEqProp.getRecordDetails=1&amp;other.ImplementApprovedReqEqProp.getRecordDetails=1&amp;other.InformOtrEqProp.getRecordDetails=1&amp;other.MakePrimaryEqProp.getRecordDetails=1&amp;other.TermsAndConditionsEqProp.getRecordDetails=1&amp;other.ViewOrderChangeEqProp.getRecordDetails=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">219622000000fb91e4</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=88&amp;other.quoteDetailLayout.getQuoteDetailRecord=1-673" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;3472;a&quot;,&quot;descriptor&quot;:&quot;apex://quoteDetailLayoutController/ACTION$getQuoteDetailRecord&quot;,&quot;callingDescriptor&quot;:&quot;markup://c:quoteEquipmentDetailLayout&quot;,&quot;params&quot;:{&quot;quoteId&quot;:&quot;${c_recordId}&quot;},&quot;version&quot;:null}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=88&amp;other.quoteDetailLayout.getQuoteDetailRecord=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">220233000000d39966</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/APTS_ProposalSubmitForApproval_LCS-674" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">${c_recordId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isLex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isLex</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="1633063335569" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">1633063335569</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/APTS_ProposalSubmitForApproval_LCS</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/QuoteEmbedded-675" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Id</stringProp>
                  <stringProp name="Argument.value">${c_recordId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1633063339486</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/QuoteEmbedded</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=89&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1-676" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;3550;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.instrumentation.components.beacon.InstrumentationBeaconController/ACTION$sendData&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;batch&quot;:[{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:190073,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;laf:platformPageResolver\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;readsSummary\&quot;,\&quot;attributes\&quot;:{\&quot;read\&quot;:{\&quot;${c_recordId}\&quot;:3},\&quot;reads\&quot;:{\&quot;a5k7d0000011KIIAA2\&quot;:1,\&quot;0177d0000E4OWuKAQW,0177d0000E4OWuLAQW,0177d0000E4OWuMAQW,0177d0000E4CgrQAQS,0177d0000E4CgrRAQS,0177d0000E4Ce7OAQS,0177d0000E4Ce7UAQS,0177d0000E4Ce7VAQS,0177d0000E4Ce7WAQS,0177d0000E4Ce7XAQS\&quot;:1,\&quot;a7w7d000000LCEHAA4\&quot;:1,\&quot;a6P7d000001QD5AEAW,a6P7d000001QD5BEAW,a6P7d000001QD5CEAW,a6P7d000001QD5DEAW\&quot;:1},\&quot;missedRecordType\&quot;:{},\&quot;shouldLog\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;},\&quot;sequence\&quot;:31,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;one:alohaPage\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJvbmU6YWxvaGFQYWdlIiwiYXR0cmlidXRlcyI6eyJhZGRyZXNzIjoiaHR0cHM6Ly9nZWhlYWx0aGNhcmUtYW1lci0tc3VtbWVyLmxpZ2h0bmluZy5mb3JjZS5jb20vYXBleC9DbG9uZVdpdGhMaW5laXRlbXNOZXc%2FSWQ9YTZSN2QwMDAwMDBMMUxiRUFLJm9wcGlkPTAwNjdkMDAwMDBKYXZabUFBSiZ0b1NhbWVPcHB0eT10cnVlIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:190074,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;laf:platformPageResolver\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;${c_recordId01}\&quot;,\&quot;recordType\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;recordTypeSetInClient\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;},\&quot;sequence\&quot;:32,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;one:alohaPage\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJvbmU6YWxvaGFQYWdlIiwiYXR0cmlidXRlcyI6eyJhZGRyZXNzIjoiaHR0cHM6Ly9nZWhlYWx0aGNhcmUtYW1lci0tc3VtbWVyLmxpZ2h0bmluZy5mb3JjZS5jb20vYXBleC9DbG9uZVdpdGhMaW5laXRlbXNOZXc%2FSWQ9YTZSN2QwMDAwMDBMMUxiRUFLJm9wcGlkPTAwNjdkMDAwMDBKYXZabUFBSiZ0b1NhbWVPcHB0eT10cnVlIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:191456,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;${c_recordId01}\&quot;,\&quot;recordType\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;,\&quot;context\&quot;:null},\&quot;sequence\&quot;:33,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;one:alohaPage\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJvbmU6YWxvaGFQYWdlIiwiYXR0cmlidXRlcyI6eyJhZGRyZXNzIjoiaHR0cHM6Ly9nZWhlYWx0aGNhcmUtYW1lci0tc3VtbWVyLmxpZ2h0bmluZy5mb3JjZS5jb20vYXBleC9DbG9uZVdpdGhMaW5laXRlbXNOZXc%2FSWQ9YTZSN2QwMDAwMDBMMUxiRUFLJm9wcGlkPTAwNjdkMDAwMDBKYXZabUFBSiZ0b1NhbWVPcHB0eT10cnVlIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:191767,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;${c_recordId01}\&quot;,\&quot;recordType\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;,\&quot;context\&quot;:null},\&quot;sequence\&quot;:34,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;one:alohaPage\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJvbmU6YWxvaGFQYWdlIiwiYXR0cmlidXRlcyI6eyJhZGRyZXNzIjoiaHR0cHM6Ly9nZWhlYWx0aGNhcmUtYW1lci0tc3VtbWVyLmxpZ2h0bmluZy5mb3JjZS5jb20vYXBleC9DbG9uZVdpdGhMaW5laXRlbXNOZXc%2FSWQ9YTZSN2QwMDAwMDBMMUxiRUFLJm9wcGlkPTAwNjdkMDAwMDBKYXZabUFBSiZ0b1NhbWVPcHB0eT10cnVlIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:191806,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;${c_recordId01}\&quot;,\&quot;recordType\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;,\&quot;context\&quot;:null},\&quot;sequence\&quot;:35,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;one:alohaPage\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJvbmU6YWxvaGFQYWdlIiwiYXR0cmlidXRlcyI6eyJhZGRyZXNzIjoiaHR0cHM6Ly9nZWhlYWx0aGNhcmUtYW1lci0tc3VtbWVyLmxpZ2h0bmluZy5mb3JjZS5jb20vYXBleC9DbG9uZVdpdGhMaW5laXRlbXNOZXc%2FSWQ9YTZSN2QwMDAwMDBMMUxiRUFLJm9wcGlkPTAwNjdkMDAwMDBKYXZabUFBSiZ0b1NhbWVPcHB0eT10cnVlIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:193225,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;001a000001dLchaAAC\&quot;,\&quot;recordType\&quot;:\&quot;Account\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;,\&quot;context\&quot;:null},\&quot;sequence\&quot;:36,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;one:alohaPage\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJvbmU6YWxvaGFQYWdlIiwiYXR0cmlidXRlcyI6eyJhZGRyZXNzIjoiaHR0cHM6Ly9nZWhlYWx0aGNhcmUtYW1lci0tc3VtbWVyLmxpZ2h0bmluZy5mb3JjZS5jb20vYXBleC9DbG9uZVdpdGhMaW5laXRlbXNOZXc%2FSWQ9YTZSN2QwMDAwMDBMMUxiRUFLJm9wcGlkPTAwNjdkMDAwMDBKYXZabUFBSiZ0b1NhbWVPcHB0eT10cnVlIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:193583,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;${c_recordId01}\&quot;,\&quot;recordType\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;,\&quot;context\&quot;:null},\&quot;sequence\&quot;:37,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;one:alohaPage\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJvbmU6YWxvaGFQYWdlIiwiYXR0cmlidXRlcyI6eyJhZGRyZXNzIjoiaHR0cHM6Ly9nZWhlYWx0aGNhcmUtYW1lci0tc3VtbWVyLmxpZ2h0bmluZy5mb3JjZS5jb20vYXBleC9DbG9uZVdpdGhMaW5laXRlbXNOZXc%2FSWQ9YTZSN2QwMDAwMDBMMUxiRUFLJm9wcGlkPTAwNjdkMDAwMDBKYXZabUFBSiZ0b1NhbWVPcHB0eT10cnVlIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:193583,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;${c_recordId01}\&quot;,\&quot;recordType\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;,\&quot;context\&quot;:null},\&quot;sequence\&quot;:38,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;one:alohaPage\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJvbmU6YWxvaGFQYWdlIiwiYXR0cmlidXRlcyI6eyJhZGRyZXNzIjoiaHR0cHM6Ly9nZWhlYWx0aGNhcmUtYW1lci0tc3VtbWVyLmxpZ2h0bmluZy5mb3JjZS5jb20vYXBleC9DbG9uZVdpdGhMaW5laXRlbXNOZXc%2FSWQ9YTZSN2QwMDAwMDBMMUxiRUFLJm9wcGlkPTAwNjdkMDAwMDBKYXZabUFBSiZ0b1NhbWVPcHB0eT10cnVlIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:194988,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;one:appNavContainer\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-click\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;global-nav-temporary-tab-created-automatically\&quot;,\&quot;scope\&quot;:\&quot;one-app-nav-container\&quot;,\&quot;context\&quot;:{\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appNavType\&quot;:\&quot;Standard\&quot;,\&quot;appUiType\&quot;:\&quot;Lightning\&quot;,\&quot;tabId\&quot;:\&quot;(temp)\&quot;,\&quot;tabContentType\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;tabIsCustom\&quot;:true,\&quot;tabIsGranular\&quot;:true}},\&quot;sequence\&quot;:39,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;one:alohaPage\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJvbmU6YWxvaGFQYWdlIiwiYXR0cmlidXRlcyI6eyJhZGRyZXNzIjoiaHR0cHM6Ly9nZWhlYWx0aGNhcmUtYW1lci0tc3VtbWVyLmxpZ2h0bmluZy5mb3JjZS5jb20vYXBleC9DbG9uZVdpdGhMaW5laXRlbXNOZXc%2FSWQ9YTZSN2QwMDAwMDBMMUxiRUFLJm9wcGlkPTAwNjdkMDAwMDBKYXZabUFBSiZ0b1NhbWVPcHB0eT10cnVlIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:195156,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-stats\&quot;,\&quot;attributes\&quot;:{\&quot;name\&quot;:\&quot;actionsManagerCache\&quot;,\&quot;adapter\&quot;:\&quot;memory\&quot;,\&quot;sizeKB\&quot;:-1,\&quot;maxSizeKB\&quot;:2048,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:217632,\&quot;duration\&quot;:110831,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;navex:standardManager\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;pageTracker\&quot;,\&quot;attributes\&quot;:{\&quot;pageId\&quot;:3,\&quot;phase\&quot;:\&quot;END\&quot;,\&quot;defaultCmp\&quot;:[],\&quot;nonDefaultCmp\&quot;:[\&quot;force:highlightsPanel\&quot;,\&quot;c:quotechevronlexnew\&quot;,\&quot;flexipage:tabset\&quot;,\&quot;flexipage:tabset\&quot;,\&quot;c:ConfigureProductsEqPropButton\&quot;,\&quot;c:DealOverviewEqPropButton\&quot;,\&quot;c:GenerateCFDPropButton\&quot;,\&quot;c:DemoteToDraftLWCContainer\&quot;,\&quot;c:UpdateOptyAdhocPropButton\&quot;,\&quot;c:TermsAndConditionsEqPropButton\&quot;,\&quot;c:EmailQuoteToOptyTeamEqPropButton\&quot;,\&quot;c:EmailContractualEqPropButton\&quot;,\&quot;c:MakePrimaryEqPropButton\&quot;,\&quot;c:DeactivateProposalLWCContainer\&quot;,\&quot;c:ViewOrderChangeEqPropButton\&quot;,\&quot;c:InformOtrEqPropButton\&quot;,\&quot;c:ImplementApprovedReqEqPropButton\&quot;,\&quot;c:ClonewithLineItems_diffOpty\&quot;,\&quot;c:AddressSearchPropButton\&quot;,\&quot;c:SubmitForApprovalEqPropButton\&quot;,\&quot;c:ClonewithLineItems_SameOppty\&quot;,\&quot;c:quoteEquipmentDetailLayout\&quot;],\&quot;backgroundTime\&quot;:0,\&quot;trxDeleted\&quot;:{},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:217632,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;navex:standardManager\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;bandwidthUsage\&quot;,\&quot;attributes\&quot;:{\&quot;txTotalSize\&quot;:43645,\&quot;txInstrSize\&quot;:13744,\&quot;txTotalCount\&quot;:16,\&quot;txInstrCount\&quot;:1,\&quot;rxTotalSize\&quot;:1981475,\&quot;rxInstrSize\&quot;:2027,\&quot;rxTotalCount\&quot;:16,\&quot;rxInstrCount\&quot;:1,\&quot;pageId\&quot;:3,\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJvbmU6YWxvaGFQYWdlIiwiYXR0cmlidXRlcyI6eyJhZGRyZXNzIjoiaHR0cHM6Ly9nZWhlYWx0aGNhcmUtYW1lci0tc3VtbWVyLmxpZ2h0bmluZy5mb3JjZS5jb20vYXBleC9DbG9uZVdpdGhMaW5laXRlbXNOZXc%2FSWQ9YTZSN2QwMDAwMDBMMUxiRUFLJm9wcGlkPTAwNjdkMDAwMDBKYXZabUFBSiZ0b1NhbWVPcHB0eT10cnVlIn0sInN0YXRlIjp7fX0%3D\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:217632,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;navex:standardManager\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;componentTracker\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;non-default\&quot;,\&quot;scope\&quot;:\&quot;component\&quot;,\&quot;context\&quot;:{\&quot;devNameOrId\&quot;:[\&quot;force:highlightsPanel\&quot;,\&quot;c:quotechevronlexnew\&quot;,\&quot;flexipage:tabset\&quot;,\&quot;flexipage:tabset\&quot;,\&quot;c:ConfigureProductsEqPropButton\&quot;,\&quot;c:DealOverviewEqPropButton\&quot;,\&quot;c:GenerateCFDPropButton\&quot;,\&quot;c:DemoteToDraftLWCContainer\&quot;,\&quot;c:UpdateOptyAdhocPropButton\&quot;,\&quot;c:TermsAndConditionsEqPropButton\&quot;,\&quot;c:EmailQuoteToOptyTeamEqPropButton\&quot;,\&quot;c:EmailContractualEqPropButton\&quot;,\&quot;c:MakePrimaryEqPropButton\&quot;,\&quot;c:DeactivateProposalLWCContainer\&quot;,\&quot;c:ViewOrderChangeEqPropButton\&quot;,\&quot;c:InformOtrEqPropButton\&quot;,\&quot;c:ImplementApprovedReqEqPropButton\&quot;,\&quot;c:ClonewithLineItems_diffOpty\&quot;,\&quot;c:AddressSearchPropButton\&quot;,\&quot;c:SubmitForApprovalEqPropButton\&quot;,\&quot;c:ClonewithLineItems_SameOppty\&quot;,\&quot;c:quoteEquipmentDetailLayout\&quot;]}},\&quot;sequence\&quot;:40,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;one:alohaPage\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJvbmU6YWxvaGFQYWdlIiwiYXR0cmlidXRlcyI6eyJhZGRyZXNzIjoiaHR0cHM6Ly9nZWhlYWx0aGNhcmUtYW1lci0tc3VtbWVyLmxpZ2h0bmluZy5mb3JjZS5jb20vYXBleC9DbG9uZVdpdGhMaW5laXRlbXNOZXc%2FSWQ9YTZSN2QwMDAwMDBMMUxiRUFLJm9wcGlkPTAwNjdkMDAwMDBKYXZabUFBSiZ0b1NhbWVPcHB0eT10cnVlIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:217638,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;laf:platformPageResolver\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;readsSummary\&quot;,\&quot;attributes\&quot;:{\&quot;read\&quot;:{\&quot;${c_recordId01}\&quot;:2},\&quot;reads\&quot;:{},\&quot;missedRecordType\&quot;:{},\&quot;shouldLog\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;},\&quot;sequence\&quot;:41,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;one:alohaPage\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJvbmU6YWxvaGFQYWdlIiwiYXR0cmlidXRlcyI6eyJhZGRyZXNzIjoiaHR0cHM6Ly9nZWhlYWx0aGNhcmUtYW1lci0tc3VtbWVyLmxpZ2h0bmluZy5mb3JjZS5jb20vYXBleC9DbG9uZVdpdGhMaW5laXRlbXNOZXc%2FSWQ9YTZSN2QwMDAwMDBMMUxiRUFLJm9wcGlkPTAwNjdkMDAwMDBKYXZabUFBSiZ0b1NhbWVPcHB0eT10cnVlIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:217638,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;laf:platformPageResolver\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;recordType\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;recordTypeSetInClient\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;},\&quot;sequence\&quot;:42,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;one:alohaPage\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJvbmU6YWxvaGFQYWdlIiwiYXR0cmlidXRlcyI6eyJhZGRyZXNzIjoiaHR0cHM6Ly9nZWhlYWx0aGNhcmUtYW1lci0tc3VtbWVyLmxpZ2h0bmluZy5mb3JjZS5jb20vYXBleC9DbG9uZVdpdGhMaW5laXRlbXNOZXc%2FSWQ9YTZSN2QwMDAwMDBMMUxiRUFLJm9wcGlkPTAwNjdkMDAwMDBKYXZabUFBSiZ0b1NhbWVPcHB0eT10cnVlIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:220128,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;recordType\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;,\&quot;context\&quot;:null},\&quot;sequence\&quot;:43,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;${c_recordId}\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:221879,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;recordType\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;,\&quot;context\&quot;:null},\&quot;sequence\&quot;:44,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;${c_recordId}\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:217620,\&quot;duration\&quot;:4483,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;scenarioTime\&quot;,\&quot;attributes\&quot;:{\&quot;target\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:\&quot;slds-form-element__static\&quot;,\&quot;notInstrumented\&quot;:true,\&quot;pageContext\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;pageUrl\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;,\&quot;entityType\&quot;:\&quot;unknown\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false,\&quot;scenarioTrackerMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:222106,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;componentTracker\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;default\&quot;,\&quot;scope\&quot;:\&quot;component\&quot;,\&quot;context\&quot;:{\&quot;devNameOrId\&quot;:[\&quot;force:highlightsPanel\&quot;,\&quot;c:quotechevronlexnew\&quot;,\&quot;flexipage:tabset\&quot;,\&quot;flexipage:tabset\&quot;,\&quot;c:ConfigureProductsEqPropButton\&quot;,\&quot;c:DealOverviewEqPropButton\&quot;,\&quot;c:GenerateCFDPropButton\&quot;,\&quot;c:DemoteToDraftLWCContainer\&quot;,\&quot;c:UpdateOptyAdhocPropButton\&quot;,\&quot;c:TermsAndConditionsEqPropButton\&quot;,\&quot;c:EmailQuoteToOptyTeamEqPropButton\&quot;,\&quot;c:EmailContractualEqPropButton\&quot;,\&quot;c:MakePrimaryEqPropButton\&quot;,\&quot;c:DeactivateProposalLWCContainer\&quot;,\&quot;c:ViewOrderChangeEqPropButton\&quot;,\&quot;c:InformOtrEqPropButton\&quot;,\&quot;c:ImplementApprovedReqEqPropButton\&quot;,\&quot;c:ClonewithLineItems_diffOpty\&quot;,\&quot;c:AddressSearchPropButton\&quot;,\&quot;c:SubmitForApprovalEqPropButton\&quot;,\&quot;c:GoToAgreementEqPropButton\&quot;,\&quot;c:ClonewithLineItems_SameOppty\&quot;,\&quot;c:quoteEquipmentDetailLayout\&quot;]}},\&quot;sequence\&quot;:45,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;${c_recordId}\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPageView&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:pageView\&quot;,\&quot;ts\&quot;:217633,\&quot;duration\&quot;:4473,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;singlePaneWindowManager:contentSelected\&quot;,\&quot;ts\&quot;:217679,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:singlePaneWindowManager\&quot;,\&quot;duration\&quot;:10},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;pageHost:loadContent\&quot;,\&quot;ts\&quot;:217691,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:pageHost\&quot;,\&quot;duration\&quot;:6},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;actions:CHATTER-SINGLE_ACTION_LINKS-Apttus_Proposal__Proposal__c\&quot;,\&quot;ts\&quot;:218051,\&quot;context\&quot;:{\&quot;context\&quot;:\&quot;CHATTER\&quot;,\&quot;section\&quot;:\&quot;SINGLE_ACTION_LINKS\&quot;,\&quot;entityApiName\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;inContextOfComponent\&quot;:\&quot;highlightsStencilDesktop\&quot;,\&quot;actionsNumber\&quot;:1,\&quot;standardActions\&quot;:[\&quot;Follow\&quot;],\&quot;quickActions\&quot;:[],\&quot;customButtons\&quot;:[],\&quot;otherActions\&quot;:[],\&quot;enableActionsConfiguration\&quot;:false,\&quot;StandardButton\&quot;:1},\&quot;owner\&quot;:\&quot;force:actionsContainer\&quot;,\&quot;duration\&quot;:1},{\&quot;ns\&quot;:\&quot;flexipageInfo\&quot;,\&quot;name\&quot;:\&quot;info\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:217841,\&quot;context\&quot;:{\&quot;flexipageName\&quot;:\&quot;0M00c000000CbKZCA0\&quot;,\&quot;flexipageType\&quot;:\&quot;RecordPage\&quot;,\&quot;isCustom\&quot;:true,\&quot;isCustomTemplate\&quot;:false,\&quot;templateName\&quot;:\&quot;flexipage:recordHomeWithSubheaderTemplateDesktop2\&quot;,\&quot;parentFlexipage\&quot;:\&quot;null\&quot;,\&quot;flexipageRenderer\&quot;:\&quot;LWC\&quot;,\&quot;numberOfFieldInstances\&quot;:0,\&quot;numberOfInteractions\&quot;:0,\&quot;Mode\&quot;:\&quot;View\&quot;,\&quot;uiRequestId\&quot;:\&quot;PkHdvZmTwVVJ\&quot;}},{\&quot;ns\&quot;:\&quot;formula\&quot;,\&quot;name\&quot;:\&quot;evaluate\&quot;,\&quot;ts\&quot;:220147,\&quot;context\&quot;:{\&quot;technology\&quot;:\&quot;LWC\&quot;,\&quot;formulaSize\&quot;:466,\&quot;feature\&quot;:\&quot;EXPRESSIONS\&quot;},\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;formula\&quot;,\&quot;name\&quot;:\&quot;evaluate\&quot;,\&quot;ts\&quot;:220147,\&quot;context\&quot;:{\&quot;technology\&quot;:\&quot;LWC\&quot;,\&quot;formulaSize\&quot;:302,\&quot;feature\&quot;:\&quot;EXPRESSIONS\&quot;},\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;formula\&quot;,\&quot;name\&quot;:\&quot;evaluate\&quot;,\&quot;ts\&quot;:220148,\&quot;context\&quot;:{\&quot;technology\&quot;:\&quot;LWC\&quot;,\&quot;formulaSize\&quot;:164,\&quot;feature\&quot;:\&quot;EXPRESSIONS\&quot;},\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;formula\&quot;,\&quot;name\&quot;:\&quot;evaluate\&quot;,\&quot;ts\&quot;:220148,\&quot;context\&quot;:{\&quot;technology\&quot;:\&quot;LWC\&quot;,\&quot;formulaSize\&quot;:182,\&quot;feature\&quot;:\&quot;EXPRESSIONS\&quot;},\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;formula\&quot;,\&quot;name\&quot;:\&quot;evaluate\&quot;,\&quot;ts\&quot;:220148,\&quot;context\&quot;:{\&quot;technology\&quot;:\&quot;LWC\&quot;,\&quot;formulaSize\&quot;:182,\&quot;feature\&quot;:\&quot;EXPRESSIONS\&quot;},\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;formula\&quot;,\&quot;name\&quot;:\&quot;evaluate\&quot;,\&quot;ts\&quot;:220148,\&quot;context\&quot;:{\&quot;technology\&quot;:\&quot;LWC\&quot;,\&quot;formulaSize\&quot;:164,\&quot;feature\&quot;:\&quot;EXPRESSIONS\&quot;},\&quot;duration\&quot;:0},{\&quot;ns\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-resolution-start\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:217785,\&quot;context\&quot;:{\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;objectApiName\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;mode\&quot;:\&quot;View\&quot;,\&quot;layoutType\&quot;:\&quot;Compact\&quot;,\&quot;dynamicComponentType\&quot;:\&quot;HighlightsPanel\&quot;}},{\&quot;ns\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-resolution-start\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:217795,\&quot;context\&quot;:{\&quot;objectApiName\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;recordTypeId\&quot;:\&quot;012a0000000AW7OAAW\&quot;}},{\&quot;ns\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-resolution-start\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:217904,\&quot;context\&quot;:{\&quot;recordId\&quot;:\&quot;${c_recordId}\&quot;,\&quot;objectApiName\&quot;:\&quot;Apttus_Proposal__Proposal__c\&quot;,\&quot;layoutType\&quot;:\&quot;Compact\&quot;,\&quot;mode\&quot;:\&quot;View\&quot;,\&quot;dynamicComponentType\&quot;:\&quot;HighlightsPanel\&quot;}},{\&quot;ns\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-resolution-start\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:218075,\&quot;context\&quot;:\&quot;RECORD_DETAIL\&quot;},{\&quot;ns\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-resolution-start\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:218075,\&quot;context\&quot;:\&quot;RECORD_DETAIL\&quot;},{\&quot;ns\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-resolution-end\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:218075,\&quot;context\&quot;:null},{\&quot;ns\&quot;:\&quot;actions_lwc\&quot;,\&quot;name\&quot;:\&quot;actions_container\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:218075,\&quot;context\&quot;:{\&quot;container\&quot;:\&quot;actions_in_highlights\&quot;,\&quot;context\&quot;:\&quot;Record\&quot;,\&quot;sourceObject\&quot;:\&quot;${c_recordId}\&quot;,\&quot;relatedSourceObject\&quot;:null,\&quot;relatedListRecordId\&quot;:null,\&quot;standardActions\&quot;:[\&quot;Edit\&quot;,\&quot;ChangeOwnerOne\&quot;],\&quot;quickActions\&quot;:[\&quot;Apttus_Proposal__Proposal__c.Sharing_new_US8196\&quot;,\&quot;Apttus_Proposal__Proposal__c.ATP_Lookup\&quot;,\&quot;Apttus_Proposal__Proposal__c.Delete_Lightning\&quot;],\&quot;customButtons\&quot;:[\&quot;Quote_Hub_Page\&quot;],\&quot;otherActions\&quot;:[],\&quot;actionCount\&quot;:6}},{\&quot;ns\&quot;:\&quot;actions_lwc\&quot;,\&quot;name\&quot;:\&quot;actions_rendering\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:218076,\&quot;context\&quot;:{\&quot;context\&quot;:\&quot;Record\&quot;,\&quot;sourceObject\&quot;:\&quot;${c_recordId}\&quot;,\&quot;relatedSourceObject\&quot;:null,\&quot;relatedListRecordId\&quot;:null,\&quot;actionFetchingTime\&quot;:null,\&quot;templateFetchingTime\&quot;:null,\&quot;numClientSideRenderedActions\&quot;:4,\&quot;numServerSideRenderedActions\&quot;:2}}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:217948,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:83,\&quot;requestLength\&quot;:1125,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;3260;a\&quot;],\&quot;requestId\&quot;:\&quot;2179470000009adf10\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1236,\&quot;xhrDuration\&quot;:1670,\&quot;xhrStall\&quot;:7,\&quot;startTime\&quot;:217948,\&quot;fetchStart\&quot;:217948,\&quot;requestStart\&quot;:217955,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:3,\&quot;ttfb\&quot;:7,\&quot;transfer\&quot;:1663,\&quot;transferSize\&quot;:1814,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:216,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1672},{\&quot;ts\&quot;:217958,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:84,\&quot;requestLength\&quot;:1119,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;3267;a\&quot;],\&quot;requestId\&quot;:\&quot;217958000000db6acf\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1222,\&quot;xhrDuration\&quot;:1713,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:217958,\&quot;fetchStart\&quot;:217958,\&quot;requestStart\&quot;:217962,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:1709,\&quot;transferSize\&quot;:1800,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:281,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1715},{\&quot;ts\&quot;:217970,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:85,\&quot;requestLength\&quot;:1127,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;3275;a\&quot;],\&quot;requestId\&quot;:\&quot;217970000000f5ee0d\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1259,\&quot;xhrDuration\&quot;:1718,\&quot;xhrStall\&quot;:7,\&quot;startTime\&quot;:217971,\&quot;fetchStart\&quot;:217971,\&quot;requestStart\&quot;:217978,\&quot;dns\&quot;:3,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:8,\&quot;transfer\&quot;:1710,\&quot;transferSize\&quot;:1837,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:304,\&quot;xhrDelay\&quot;:11},\&quot;duration\&quot;:1729},{\&quot;ts\&quot;:217936,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:82,\&quot;requestLength\&quot;:1135,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;3253;a\&quot;],\&quot;requestId\&quot;:\&quot;2179360000004ec750\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1165,\&quot;xhrDuration\&quot;:1876,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:217936,\&quot;fetchStart\&quot;:217936,\&quot;requestStart\&quot;:217939,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:1872,\&quot;transferSize\&quot;:1743,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:425,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:1879},{\&quot;ts\&quot;:217638,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:80,\&quot;requestLength\&quot;:3165,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;3169;a\&quot;],\&quot;requestId\&quot;:\&quot;2176380000003eaa11\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:11941,\&quot;xhrDuration\&quot;:2306,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:217638,\&quot;fetchStart\&quot;:217638,\&quot;requestStart\&quot;:217641,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:2302,\&quot;transferSize\&quot;:12520,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:1110,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:2308},{\&quot;ts\&quot;:217822,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:81,\&quot;requestLength\&quot;:8076,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;3246;a\&quot;],\&quot;requestId\&quot;:\&quot;2178220000001f1890\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:15393,\&quot;xhrDuration\&quot;:2303,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:217823,\&quot;fetchStart\&quot;:217823,\&quot;requestStart\&quot;:217826,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:3,\&quot;transfer\&quot;:2300,\&quot;transferSize\&quot;:15971,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:685,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:2306},{\&quot;ts\&quot;:220154,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:87,\&quot;requestLength\&quot;:1127,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;3387;a\&quot;],\&quot;requestId\&quot;:\&quot;220154000000309429\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1178,\&quot;xhrDuration\&quot;:1454,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:220154,\&quot;fetchStart\&quot;:220154,\&quot;requestStart\&quot;:220157,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:1450,\&quot;transferSize\&quot;:1755,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:79,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:1455},{\&quot;ts\&quot;:219622,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:86,\&quot;requestLength\&quot;:10205,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;3282;a\&quot;,\&quot;3289;a\&quot;,\&quot;3296;a\&quot;,\&quot;3303;a\&quot;,\&quot;3311;a\&quot;,\&quot;3318;a\&quot;,\&quot;3325;a\&quot;,\&quot;3356;a\&quot;],\&quot;requestId\&quot;:\&quot;219622000000fb91e4\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:16219,\&quot;xhrDuration\&quot;:2243,\&quot;xhrStall\&quot;:50,\&quot;startTime\&quot;:219623,\&quot;fetchStart\&quot;:219623,\&quot;requestStart\&quot;:219673,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:51,\&quot;transfer\&quot;:2192,\&quot;transferSize\&quot;:16797,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:620,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:2245},{\&quot;ts\&quot;:220233,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:88,\&quot;requestLength\&quot;:1132,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;3472;a\&quot;],\&quot;requestId\&quot;:\&quot;220233000000d39966\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:4351,\&quot;xhrDuration\&quot;:1672,\&quot;xhrStall\&quot;:2,\&quot;startTime\&quot;:220234,\&quot;fetchStart\&quot;:220234,\&quot;requestStart\&quot;:220236,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:3,\&quot;transfer\&quot;:1669,\&quot;transferSize\&quot;:4929,\&quot;nextHopProtocol\&quot;:\&quot;http/1.1\&quot;,\&quot;serverTime\&quot;:364,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:1675}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:217947,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3260;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:DealOverviewEqPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://DealOverviewEqPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:64,\&quot;db\&quot;:11,\&quot;xhrServerTime\&quot;:216,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:1675},{\&quot;ts\&quot;:217958,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3267;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:GenerateCFDPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://GenerateCFDPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:92,\&quot;db\&quot;:11,\&quot;xhrServerTime\&quot;:281,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:1717},{\&quot;ts\&quot;:217970,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3275;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:UpdateOptyAdhocPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://UpdateOptyAdhocPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:141,\&quot;db\&quot;:13,\&quot;xhrServerTime\&quot;:304,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:1732},{\&quot;ts\&quot;:217936,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3253;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:ConfigureProductsEqPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://ConfigureProductsEqPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:230,\&quot;db\&quot;:48,\&quot;xhrServerTime\&quot;:425,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:1881},{\&quot;ts\&quot;:217637,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3169;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordGlobalValueProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:905,\&quot;db\&quot;:44,\&quot;xhrServerTime\&quot;:1109,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2322},{\&quot;ts\&quot;:217821,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3246;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://RecordUiController/ACTION$getRecordWithFields\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:512,\&quot;db\&quot;:111,\&quot;xhrServerTime\&quot;:684,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2307},{\&quot;ts\&quot;:220154,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3387;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:GoToAgreementEqPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://GoToAgreementEqPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:25,\&quot;db\&quot;:8,\&quot;xhrServerTime\&quot;:79,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1456},{\&quot;ts\&quot;:217980,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3282;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:TermsAndConditionsEqPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://TermsAndConditionsEqPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1641,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:38,\&quot;db\&quot;:8,\&quot;xhrServerTime\&quot;:619,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:3888},{\&quot;ts\&quot;:217988,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3289;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:EmailQuoteToOptyTeamEqPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://EmailQuoteToOptyTeamEqPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1634,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:13,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:619,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:3881},{\&quot;ts\&quot;:217995,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3296;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:EmailContractualEqPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://EmailContractualEqPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1626,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:12,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:619,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:3875},{\&quot;ts\&quot;:218002,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3303;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:MakePrimaryEqPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://MakePrimaryEqPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1620,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:68,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:619,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3868},{\&quot;ts\&quot;:218010,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3311;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:ViewOrderChangeEqPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://ViewOrderChangeEqPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1612,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:11,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:619,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3860},{\&quot;ts\&quot;:218016,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3318;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:InformOtrEqPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://InformOtrEqPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1606,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:13,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:619,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:3855},{\&quot;ts\&quot;:218020,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3325;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:ImplementApprovedReqEqPropButton\&quot;,\&quot;def\&quot;:\&quot;apex://ImplementApprovedReqEqPropController/ACTION$getRecordDetails\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1601,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:14,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:619,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3851},{\&quot;ts\&quot;:218145,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3356;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://RecordUiController/ACTION$getRecordWithFields\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1477,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:326,\&quot;db\&quot;:31,\&quot;xhrServerTime\&quot;:619,\&quot;boxCarCount\&quot;:8},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3726},{\&quot;ts\&quot;:220233,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3472;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;c:quoteEquipmentDetailLayout\&quot;,\&quot;def\&quot;:\&quot;apex://quoteDetailLayoutController/ACTION$getQuoteDetailRecord\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:240,\&quot;db\&quot;:51,\&quot;xhrServerTime\&quot;:364,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:40,\&quot;duration\&quot;:1715}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:44398,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;c:DealOverviewEqPropButton\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:2212},{\&quot;name\&quot;:\&quot;force:highlightsPanel\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:2390},{\&quot;name\&quot;:\&quot;c:quotechevronlexnew\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:2385},{\&quot;name\&quot;:\&quot;flexipage:tabset\&quot;,\&quot;createCount\&quot;:2,\&quot;createTimeTotal\&quot;:4672},{\&quot;name\&quot;:\&quot;c:ConfigureProductsEqPropButton\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:2223}]}],\&quot;lds\&quot;:[{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;runtime-perf\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:222107,\&quot;context\&quot;:{\&quot;storeLookup\&quot;:20,\&quot;storeIngest\&quot;:12,\&quot;storeBroadcast\&quot;:11}}]},\&quot;owner\&quot;:\&quot;navex:standardManager\&quot;,\&quot;unixTS\&quot;:false,\&quot;ept\&quot;:4472,\&quot;previousPage\&quot;:{\&quot;context\&quot;:\&quot;one:alohaPage\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJvbmU6YWxvaGFQYWdlIiwiYXR0cmlidXRlcyI6eyJhZGRyZXNzIjoiaHR0cHM6Ly9nZWhlYWx0aGNhcmUtYW1lci0tc3VtbWVyLmxpZ2h0bmluZy5mb3JjZS5jb20vYXBleC9DbG9uZVdpdGhMaW5laXRlbXNOZXc%2FSWQ9YTZSN2QwMDAwMDBMMUxiRUFLJm9wcGlkPTAwNjdkMDAwMDBKYXZabUFBSiZ0b1NhbWVPcHB0eT10cnVlIn0sInN0YXRlIjp7fX0%3D\&quot;}},\&quot;attributes\&quot;:{\&quot;layoutContainer\&quot;:\&quot;DLC\&quot;,\&quot;navStyle\&quot;:\&quot;Standard\&quot;,\&quot;splitViewMode\&quot;:\&quot;none\&quot;,\&quot;darkModeEnabled\&quot;:false,\&quot;fieldInstancesEnabled\&quot;:true,\&quot;network\&quot;:{\&quot;maxAllowedParallelXHRs\&quot;:6},\&quot;cores\&quot;:8,\&quot;eptDeviation\&quot;:false,\&quot;density\&quot;:\&quot;COMFY\&quot;,\&quot;totalEpt\&quot;:4472,\&quot;defaultCmp\&quot;:[\&quot;force:highlightsPanel\&quot;,\&quot;c:quotechevronlexnew\&quot;,\&quot;flexipage:tabset\&quot;,\&quot;flexipage:tabset\&quot;,\&quot;c:ConfigureProductsEqPropButton\&quot;,\&quot;c:DealOverviewEqPropButton\&quot;,\&quot;c:GenerateCFDPropButton\&quot;,\&quot;c:DemoteToDraftLWCContainer\&quot;,\&quot;c:UpdateOptyAdhocPropButton\&quot;,\&quot;c:TermsAndConditionsEqPropButton\&quot;,\&quot;c:EmailQuoteToOptyTeamEqPropButton\&quot;,\&quot;c:EmailContractualEqPropButton\&quot;,\&quot;c:MakePrimaryEqPropButton\&quot;,\&quot;c:DeactivateProposalLWCContainer\&quot;,\&quot;c:ViewOrderChangeEqPropButton\&quot;,\&quot;c:InformOtrEqPropButton\&quot;,\&quot;c:ImplementApprovedReqEqPropButton\&quot;,\&quot;c:ClonewithLineItems_diffOpty\&quot;,\&quot;c:AddressSearchPropButton\&quot;,\&quot;c:SubmitForApprovalEqPropButton\&quot;,\&quot;c:GoToAgreementEqPropButton\&quot;,\&quot;c:ClonewithLineItems_SameOppty\&quot;,\&quot;c:quoteEquipmentDetailLayout\&quot;],\&quot;gates\&quot;:{\&quot;lds.useNewTrackedFieldBehavior\&quot;:false,\&quot;scenarioTrackerEnabled.instrumentation.ltng\&quot;:true,\&quot;scenarioTrackerMarksEnabled.instrumentation.ltng\&quot;:false,\&quot;ui.services.PageScopedCache.enabled\&quot;:false,\&quot;browserIdleTime.instrumentation.ltng\&quot;:false,\&quot;clientTelemetry.instrumentation.ltng\&quot;:true,\&quot;lwcff_ENABLE_INNER_OUTER_TEXT_PATCH.lwc.ltng\&quot;:false,\&quot;lwcff_ENABLE_NON_COMPOSED_EVENTS_LEAKAGE.lwc.ltng\&quot;:false,\&quot;componentProfiler.instrumentation.ltng\&quot;:false,\&quot;versionedFlexipagesDescriptor.lwcFlexipages.uip\&quot;:false,\&quot;rrh.useLWCRelatedLists.__test__\&quot;:false,\&quot;relatedList.lwcDrillin\&quot;:false,\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true},\&quot;cacheStats\&quot;:{\&quot;lds:Apex.getApex\&quot;:{\&quot;hits\&quot;:1,\&quot;misses\&quot;:0},\&quot;lds:UiApi.getObjectInfo\&quot;:{\&quot;hits\&quot;:6,\&quot;misses\&quot;:0},\&quot;lds:UiApi.getPicklistValuesByRecordType\&quot;:{\&quot;hits\&quot;:1,\&quot;misses\&quot;:0},\&quot;lds:UiApi.getRecord\&quot;:{\&quot;hits\&quot;:16,\&quot;misses\&quot;:3},\&quot;lds:UiApi.getRecord:out-of-ttl-miss\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:2},\&quot;lds:UiApi.getRecordActions\&quot;:{\&quot;hits\&quot;:5,\&quot;misses\&quot;:0},\&quot;lds:UiApi.getRecordAvatars\&quot;:{\&quot;hits\&quot;:1,\&quot;misses\&quot;:0},\&quot;lds:UiApi.getRecordUi\&quot;:{\&quot;hits\&quot;:3,\&quot;misses\&quot;:0},\&quot;lds:UiApi.getRelatedListsInfo\&quot;:{\&quot;hits\&quot;:13,\&quot;misses\&quot;:0},\&quot;AuraRecordStore\&quot;:{\&quot;hits\&quot;:2,\&quot;misses\&quot;:0},\&quot;AuraRecordStore_navexStandardManager\&quot;:{\&quot;hits\&quot;:1,\&quot;misses\&quot;:0},\&quot;AuraRecordStore_forceRecordData\&quot;:{\&quot;hits\&quot;:1,\&quot;misses\&quot;:0},\&quot;total\&quot;:{\&quot;hits\&quot;:50,\&quot;misses\&quot;:5}},\&quot;complexity\&quot;:{\&quot;fields\&quot;:9,\&quot;reference\&quot;:2,\&quot;picklist\&quot;:1,\&quot;string\&quot;:2,\&quot;currency\&quot;:2,\&quot;ADS_fields\&quot;:7},\&quot;sequence\&quot;:4,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;${c_recordId}\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;}}}&quot;}],&quot;traces&quot;:&quot;[]&quot;,&quot;metrics&quot;:&quot;[{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-count\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063339565,\&quot;value\&quot;:79},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-count\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335685,\&quot;value\&quot;:20},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;get-record-normal-invoke-count\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335684,\&quot;value\&quot;:8},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-size-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063339647,\&quot;value\&quot;:[534,534]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-watch-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063339647,\&quot;value\&quot;:[2,2]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-snapshot-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063339647,\&quot;value\&quot;:[33,33]},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.Apex.getApex\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335685,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-count.Apex.getApex\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335685,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-duration.Apex.getApex\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335685,\&quot;value\&quot;:[0,0]},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063339575,\&quot;value\&quot;:123},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-broadcast-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063339423,\&quot;value\&quot;:[0,14,0,0,8,0,10,0,0,0,0,0,0,18,6,8,3,7,0,0,2,7,0,0]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-ingest-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063339422,\&quot;value\&quot;:[0,4,1,0,1,1,1,1,0,0,0,1,0,1,1,1,2,13,11,8,2,5,3,3]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-lookup-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063339565,\&quot;value\&quot;:[0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,1,8,0,1,0,0,0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,8,0,1,0,0,1]},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.UiApi.getObjectInfo\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335461,\&quot;value\&quot;:14},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-count.UiApi.getObjectInfo\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335461,\&quot;value\&quot;:12},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-duration.UiApi.getObjectInfo\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335461,\&quot;value\&quot;:[0,1,1,0,0,0,1,0,1,1,0,0]},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.UiApi.getPicklistValuesByRecordType\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063337927,\&quot;value\&quot;:4},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-count.UiApi.getPicklistValuesByRecordType\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063337935,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-duration.UiApi.getPicklistValuesByRecordType\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063337935,\&quot;value\&quot;:[8,8]},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.UiApi.getRecord\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335685,\&quot;value\&quot;:46},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-count.UiApi.getRecord\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335686,\&quot;value\&quot;:26},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-duration.UiApi.getRecord\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335686,\&quot;value\&quot;:[0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,1,0,1,1,0,0,0,1,0,0,1]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-count.UiApi.getRecord\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335685,\&quot;value\&quot;:12},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-duration.UiApi.getRecord\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063339423,\&quot;value\&quot;:[1227,1215,1336,1512,1584,1558,1630,3169,3167,2244,2329,3741]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-out-of-ttl-duration.UiApi.getRecord\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335685,\&quot;value\&quot;:[149742,146773]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-out-of-ttl-count.UiApi.getRecord\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335685,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.UiApi.getRecordActions\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335606,\&quot;value\&quot;:10},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-count.UiApi.getRecordActions\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335607,\&quot;value\&quot;:5},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-duration.UiApi.getRecordActions\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335607,\&quot;value\&quot;:[1,0,1,0,1]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-count.UiApi.getRecordActions\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063309065,\&quot;value\&quot;:5},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-duration.UiApi.getRecordActions\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063309837,\&quot;value\&quot;:[2132,2031,2033,772,2138]},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.UiApi.getRecordAvatars\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335602,\&quot;value\&quot;:5},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-count.UiApi.getRecordAvatars\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335602,\&quot;value\&quot;:3},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-duration.UiApi.getRecordAvatars\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335602,\&quot;value\&quot;:[1,1,0]},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.UiApi.getRecordCreateDefaults\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063339575,\&quot;value\&quot;:8},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.UiApi.getRecordUi\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063339563,\&quot;value\&quot;:8},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-count.UiApi.getRecordUi\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063339565,\&quot;value\&quot;:3},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-duration.UiApi.getRecordUi\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063339565,\&quot;value\&quot;:[1,1,2]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-count.UiApi.getRecordUi\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063312126,\&quot;value\&quot;:3},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-duration.UiApi.getRecordUi\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063313275,\&quot;value\&quot;:[1839,1146,3627]},{\&quot;owner\&quot;:\&quot;LIGHTNING.lds.service\&quot;,\&quot;name\&quot;:\&quot;request.UiApi.getRelatedListsInfo\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335375,\&quot;value\&quot;:26},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-count.UiApi.getRelatedListsInfo\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335375,\&quot;value\&quot;:26},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-duration.UiApi.getRelatedListsInfo\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335375,\&quot;value\&quot;:[1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;scenarioTime.ms\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063339642,\&quot;value\&quot;:[4483]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageReceived.beforeEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063339644,\&quot;value\&quot;:[58770]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageSent.beforeEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063339644,\&quot;value\&quot;:[29399]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageReceived.afterEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335172,\&quot;value\&quot;:[1981475]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageSent.afterEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335172,\&quot;value\&quot;:[43645]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsage.instrSizePct\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335172,\&quot;value\&quot;:[0]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;pageview.ept.ms\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063339647,\&quot;value\&quot;:[4472]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;ads-bridge-add-records-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063337493,\&quot;value\&quot;:[0,5,4]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;ads-bridge-emit-record-changed-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063337680,\&quot;value\&quot;:[6,8,9,2,5,6,6,5]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-size\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335614,\&quot;value\&quot;:[89,594,89,2,1,89,594,89,2,1]},{\&quot;owner\&quot;:\&quot;adg-resolver\&quot;,\&quot;name\&quot;:\&quot;request\&quot;,\&quot;tags\&quot;:{\&quot;status\&quot;:\&quot;success\&quot;},\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335614,\&quot;value\&quot;:10},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-type.root-property-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335614,\&quot;value\&quot;:78},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-type.wire-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335614,\&quot;value\&quot;:1148},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-type.conditional-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335443,\&quot;value\&quot;:316},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.wire-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335614,\&quot;value\&quot;:268},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.conditional-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335443,\&quot;value\&quot;:94},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.conditional-node-stopped\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335443,\&quot;value\&quot;:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.conditional-node-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335443,\&quot;value\&quot;:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getObjectInfo-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335443,\&quot;value\&quot;:6},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getObjectInfo-wire-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335444,\&quot;value\&quot;:[1,1,0,1,1,1]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.wire-node-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063337685,\&quot;value\&quot;:[2,4,6,1,1,1,1,1,1,5,8,8,8,7,8,8,8,8,8,8,8,8,9,7,7,7,7,6,6,6,6,7,7,6,6,2,1,1,2,2,3,3,3,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,1227,1338,1589,1632,2138,0,1,0,0,0,2032,1,1,0,0,0,2034,0,0,0,0,0,2142,0,0,0,0,0,2,3,2,3,3,3,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,9,8,9,9,9,9,9,9,9,9,10,10,10,10,10,5,4,5,5,5,5,4,4,4,4,4,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,2331]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getRecord-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335446,\&quot;value\&quot;:18},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.b-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335444,\&quot;value\&quot;:6},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.b-wire-unresolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335444,\&quot;value\&quot;:[0,0,0,0,0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.v-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335444,\&quot;value\&quot;:6},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.v-wire-unresolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335444,\&quot;value\&quot;:[0,0,0,0,0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.unknown-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335447,\&quot;value\&quot;:136},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.unknown-wire-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335447,\&quot;value\&quot;:[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getRecordActions-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335445,\&quot;value\&quot;:8},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.c-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335614,\&quot;value\&quot;:50},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.c-wire-unresolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335614,\&quot;value\&quot;:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getRecord-wire-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063337685,\&quot;value\&quot;:[1,0,0,0,1,1227,1336,1584,1630,1,0,1,0,1,0,0,0,2329]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-type.iteration-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335337,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-type.multi-variate-conditional-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335337,\&quot;value\&quot;:6},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;extension-preprocess-time.ppr\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335348,\&quot;value\&quot;:[11,10]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;extension-preprocess-time.batching\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335354,\&quot;value\&quot;:[5,6]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-type.batch-wire-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335353,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.iteration-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335355,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.iteration-node-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335355,\&quot;value\&quot;:[0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.multi-variate-conditional-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335355,\&quot;value\&quot;:6},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.multi-variate-conditional-node-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335355,\&quot;value\&quot;:[0,0,0,0,0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.UiApi.getObjectCreateActions-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335363,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.UiApi.getObjectCreateActions-wire-unresolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335363,\&quot;value\&quot;:[0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.UiApi.getRecordEditActions-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335363,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.UiApi.getRecordEditActions-wire-unresolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335363,\&quot;value\&quot;:[0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.unknown-dependent-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335447,\&quot;value\&quot;:10},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.unknown-dependent-wire-unresolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335447,\&quot;value\&quot;:[0,0,0,0,0,0,0,0,0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.batch-wire-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335368,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.ProgressiveContext-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335372,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getRelatedListsInfo-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335375,\&quot;value\&quot;:24},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getRelatedListsInfo-wire-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335375,\&quot;value\&quot;:[1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},{\&quot;owner\&quot;:\&quot;RecordHome.LWCHighlightsPanel\&quot;,\&quot;name\&quot;:\&quot;lwcHighlightsDataLoaded\&quot;,\&quot;tags\&quot;:{\&quot;mode\&quot;:\&quot;View\&quot;,\&quot;status\&quot;:\&quot;success\&quot;},\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1633063335464,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;RecordHome.LWCHighlightsPanel\&quot;,\&quot;name\&quot;:\&quot;lwcHighlightsDataLoaded\&quot;,\&quot;tags\&quot;:{\&quot;mode\&quot;:\&quot;View\&quot;,\&quot;status\&quot;:\&quot;success\&quot;},\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335464,\&quot;value\&quot;:[1269,80]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getRecordActions-wire-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335445,\&quot;value\&quot;:[2132,2031,2033,2138,1,0,1,0]},{\&quot;owner\&quot;:\&quot;adg-resolver\&quot;,\&quot;name\&quot;:\&quot;duration\&quot;,\&quot;tags\&quot;:{\&quot;status\&quot;:\&quot;success\&quot;},\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063335614,\&quot;value\&quot;:[0,0]}]&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=89&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">222110000000c19ed5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/QuoteEmbedded-678" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Id</stringProp>
                  <stringProp name="Argument.value">${c_recordId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1633063339486</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/QuoteEmbedded</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/APTS_ProposalSubmitForApproval_LCS-677" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="isLex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isLex</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">${c_recordId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="1633063335569" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">1633063335569</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/APTS_ProposalSubmitForApproval_LCS</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/QuoteEmbedded-679" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1633063339486</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Id</stringProp>
                  <stringProp name="Argument.value">${c_recordId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/QuoteEmbedded</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/services/data/v33.0/query-680" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">SELECT Id, Name,Apttus_Proposal__Account__c, Quote_Stage__c, Proposal_Type__c, IsApprovalRequired__c,GPO_MPA_MSA_SAA_Agreement_Id__c,GPO_MPA_MSA_SAA_Agreement__c,Partner_Contract__c,GPO_MPA_MSA_SAA_Agreement__r.Agreement__r.Active__c,GPO_MPA_MSA_SAA_Agreement__r.Agreement__r.Parent_Contract__c,GPO_MPA_MSA_SAA_Agreement__r.Agreement_Active__c,Partner_Contract__r.Active__c,RecordType.Name, is_Contract_Changed__c, Global_Region__c, Apttus_QPConfig__ConfigurationFinalizedDate__c, Apttus_QPConfig__PriceListId__r.Tier_1_P_L__c, Apttus_QPConfig__PriceListId__r.Tier_2_P_L__c, Apttus_QPConfig__PriceListId__r.Apttus_Config2__Active__c,Apttus_QPConfig__BillToAccountId__c,Apttus_Proposal__Opportunity__r.Primary_Agreement__c, Apttus_Proposal__ExpectedEndDate__c,QuoteExtension__r.Group_Invoices_By__c FROM Apttus_Proposal__Proposal__c WHERE Id =&apos;${c_recordId}&apos;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/services/data/v33.0/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/apex/APTS_ProposalSubmitForApproval_LCS?isLex=true&amp;id=${c_recordId}&amp;1633063335569=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${c_bearerToken}</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_configurationFinalizedDate01" enabled="false">
              <stringProp name="TestPlan.comments">2021-09-30T12:29:05.000+0000</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_configurationFinalizedDate01</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;Apttus_QPConfig__ConfigurationFinalizedDate__c&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_configurationFinalizedDate01NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="false">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import java.time.LocalDateTime;

String time=LocalDateTime.now();

String output = prev.getResponseDataAsString();

String responseCode=prev.getResponseCode();

String requestHeaders=prev.getRequestHeaders();

String responseHeaders=prev.getResponseHeaders();

String requestInfo=prev.getSamplerData();

String api_name = prev.toString();

String c_configurationFinalizedDate01=vars.get(&quot;c_configurationFinalizedDate01&quot;);

String FailureMessage = &quot;&quot;;

if((c_configurationFinalizedDate01.equals(&quot;NotFound&quot;)))
{
	AssertionResult.setFailure(true);
	if(c_configurationFinalizedDate01.equals(&quot;NotFound&quot;))
		FailureMessage += &quot;c_configurationFinalizedDate01 : NotFound\t&quot;;
	FailureMessage += &quot;Incorrect Response Data&quot;;
 	FileWriter f= new FileWriter(&quot;${p_ErrorLogPath}&quot;,true);
	BufferedWriter b= new BufferedWriter(f);
	b.write(&quot;_______________________________Non-200 Code Returned_________________________________&quot;);
	b.newLine();
	b.write(&quot;For User : &quot;+vars.get(&quot;p_UserName&quot;));
	b.newLine();
	b.write(&quot;FailureMessage: &quot;+FailureMessage);
	b.newLine();
	b.write(&quot;Transaction Name : &quot;+api_name);
	b.newLine();
	b.write(&quot;SampleInfo &quot;+requestInfo);
	b.newLine();
	b.write(&quot;requestHeaders &quot;+requestHeaders);
	b.newLine();
	b.write(&quot;responseHeaders &quot;+responseHeaders);
	b.newLine();
	b.write(&quot;\t/api/negotiate/register,&quot; + time + &quot;,&quot; + &quot; Response Code:&quot; + responseCode + &quot;,&quot; + &quot;Response: &quot; + output);
	b.newLine();
	b.write(&quot;________________________________________________________________&quot;);
	b.newLine();
	b.flush();
	b.close();
 }</stringProp>
            </JSR223Assertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/services/data/v33.0/query-681" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">select id,Agreement__c from Account_Agreement_Association__c where Primary__c=true and Account__c=&apos;001a000001dLchaAAC&apos;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/services/data/v33.0/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/apex/APTS_ProposalSubmitForApproval_LCS?isLex=true&amp;id=${c_recordId}&amp;1633063335569=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${c_bearerToken}</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/services/data/v33.0/query-683" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">select id,Apttus_Config2__Status__c from Apttus_Config2__ProductConfiguration__c where Apttus_Config2__Status__c=&apos;Finalized&apos; and Apttus_QPConfig__Proposald__c=&apos;${c_recordId}&apos;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/services/data/v33.0/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/apex/APTS_ProposalSubmitForApproval_LCS?isLex=true&amp;id=${c_recordId}&amp;1633063335569=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${c_bearerToken}</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/services/data/v33.0/query-682" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">SELECT Id, Type_Of_subtotal__c,FieldSubType__c,Createddate FROM SubTotalValues__c WHERE Quote_Proposal__c=&apos;${c_recordId}&apos; AND Createddate &gt;= ${c_configurationFinalizedDate01}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/services/data/v33.0/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/apex/APTS_ProposalSubmitForApproval_LCS?isLex=true&amp;id=${c_recordId}&amp;1633063335569=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${c_bearerToken}</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/services/data/v33.0/query-684" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">Select NewValue,OldValue,CreatedDate FROM Apttus_Proposal__Proposal__History WHERE ParentId=&apos;${c_recordId}&apos; AND (Field=&apos;GPO_MPA_MSA_SAA_Agreement__c&apos; OR Field=&apos;Partner_Contract__c&apos;) Order by CreatedDate DESC Limit 1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName4}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/services/data/v33.0/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName4}/apex/APTS_ProposalSubmitForApproval_LCS?isLex=true&amp;id=${c_recordId}&amp;1633063335569=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${c_bearerToken}</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="GE_CloneToSameOpp_09_LogoutSalesRep" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/secur/logout.jsp-685" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/secur/logout.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/secur/logout.jsp-687" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/secur/logout.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraAnalytics-690" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;3570;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.instrumentation.components.beacon.InstrumentationBeaconController/ACTION$sendData&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;batch&quot;:[{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:240556,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;lds-network\&quot;,\&quot;attributes\&quot;:{\&quot;weaketag-0-Name\&quot;:{\&quot;existing-weaketag-0\&quot;:22,\&quot;incoming-weaketag-0\&quot;:22},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:243551,\&quot;pageStartTime\&quot;:1633063117538,\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;unload\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;close\&quot;,\&quot;scope\&quot;:\&quot;tab\&quot;,\&quot;context\&quot;:{\&quot;pageCounter\&quot;:4}},\&quot;sequence\&quot;:46,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;${c_recordId}\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;USCAN_Sales\&quot;,\&quot;appType\&quot;:\&quot;Standard\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:243551,\&quot;duration\&quot;:25918,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;pageTracker\&quot;,\&quot;attributes\&quot;:{\&quot;pageId\&quot;:4,\&quot;phase\&quot;:\&quot;END\&quot;,\&quot;defaultCmp\&quot;:[\&quot;force:highlightsPanel\&quot;,\&quot;c:quotechevronlexnew\&quot;,\&quot;flexipage:tabset\&quot;,\&quot;flexipage:tabset\&quot;,\&quot;c:ConfigureProductsEqPropButton\&quot;,\&quot;c:DealOverviewEqPropButton\&quot;,\&quot;c:GenerateCFDPropButton\&quot;,\&quot;c:DemoteToDraftLWCContainer\&quot;,\&quot;c:UpdateOptyAdhocPropButton\&quot;,\&quot;c:TermsAndConditionsEqPropButton\&quot;,\&quot;c:EmailQuoteToOptyTeamEqPropButton\&quot;,\&quot;c:EmailContractualEqPropButton\&quot;,\&quot;c:MakePrimaryEqPropButton\&quot;,\&quot;c:DeactivateProposalLWCContainer\&quot;,\&quot;c:ViewOrderChangeEqPropButton\&quot;,\&quot;c:InformOtrEqPropButton\&quot;,\&quot;c:ImplementApprovedReqEqPropButton\&quot;,\&quot;c:ClonewithLineItems_diffOpty\&quot;,\&quot;c:AddressSearchPropButton\&quot;,\&quot;c:SubmitForApprovalEqPropButton\&quot;,\&quot;c:GoToAgreementEqPropButton\&quot;,\&quot;c:ClonewithLineItems_SameOppty\&quot;,\&quot;c:quoteEquipmentDetailLayout\&quot;],\&quot;nonDefaultCmp\&quot;:[],\&quot;backgroundTime\&quot;:0,\&quot;trxDeleted\&quot;:{},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:usedDefs\&quot;,\&quot;ts\&quot;:243554,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;usedDefs\&quot;,\&quot;attributes\&quot;:{\&quot;lightning\&quot;:[\&quot;navigation\&quot;,\&quot;icon\&quot;,\&quot;messageDispatcher\&quot;,\&quot;button\&quot;,\&quot;primitiveIcon\&quot;,\&quot;spinner\&quot;,\&quot;groupedCombobox\&quot;,\&quot;input\&quot;,\&quot;iconSvgTemplatesUtility\&quot;,\&quot;auraDynamic\&quot;,\&quot;formattedText\&quot;,\&quot;formattedRichText\&quot;,\&quot;buttonGroup\&quot;,\&quot;recordEditForm\&quot;,\&quot;messages\&quot;,\&quot;accordion\&quot;,\&quot;accordionSection\&quot;,\&quot;outputField\&quot;,\&quot;formattedDateTime\&quot;,\&quot;auraFormViewEditWireBridge\&quot;,\&quot;iconSvgTemplatesCustom\&quot;,\&quot;iconSvgTemplatesStandard\&quot;,\&quot;workspaceAPI\&quot;],\&quot;ui\&quot;:[\&quot;virtualList\&quot;,\&quot;virtualDataGrid\&quot;,\&quot;virtualDataTable\&quot;,\&quot;image\&quot;,\&quot;datePickerManager\&quot;,\&quot;interactive\&quot;,\&quot;popupTrigger\&quot;,\&quot;menuTriggerLink\&quot;,\&quot;tooltip\&quot;,\&quot;containerManager\&quot;,\&quot;panelManager2\&quot;,\&quot;asyncComponentManager\&quot;,\&quot;popup\&quot;,\&quot;menu\&quot;,\&quot;popupTarget\&quot;,\&quot;menuList\&quot;,\&quot;dataProvider\&quot;,\&quot;button\&quot;,\&quot;abstractList\&quot;,\&quot;infiniteList\&quot;,\&quot;outputRichText\&quot;,\&quot;outputText\&quot;,\&quot;outputDate\&quot;,\&quot;infiniteListRow\&quot;,\&quot;menuItem\&quot;,\&quot;actionMenuItem\&quot;,\&quot;panel\&quot;,\&quot;resizeObserver\&quot;],\&quot;lockerMethods\&quot;:{},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:243554,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1633063117538,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;bandwidthUsageAggregate\&quot;,\&quot;attributes\&quot;:{\&quot;txTotalSize\&quot;:1049197,\&quot;txInstrSize\&quot;:572094,\&quot;txTotalCount\&quot;:90,\&quot;txInstrCount\&quot;:5,\&quot;rxTotalSize\&quot;:6291064,\&quot;rxInstrSize\&quot;:10229,\&quot;rxTotalCount\&quot;:91,\&quot;rxInstrCount\&quot;:5,\&quot;pageId\&quot;:5,\&quot;url\&quot;:\&quot;/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;}],&quot;traces&quot;:&quot;[]&quot;,&quot;metrics&quot;:&quot;[{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-size-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063361091,\&quot;value\&quot;:[534]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-watch-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063361091,\&quot;value\&quot;:[2]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-snapshot-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063361091,\&quot;value\&quot;:[33]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;scenarioTime.ms\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063358152,\&quot;value\&quot;:[59]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageReceived.beforeEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063361093,\&quot;value\&quot;:[6291064]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageSent.beforeEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063361093,\&quot;value\&quot;:[1049197]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageReceived.afterEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063361091,\&quot;value\&quot;:[2069]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageSent.afterEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063361091,\&quot;value\&quot;:[87832]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsage.instrSizePct\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1633063361091,\&quot;value\&quot;:[1]}]&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;${c_fwuid}&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;${c_au}&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m0c0000014dgDAAQ&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${c_auraToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName5}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">iso-8859-13</stringProp>
            <stringProp name="HTTPSampler.path">/auraAnalytics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}/lightning/r/Apttus_Proposal__Proposal__c/${c_recordId}/view</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=iso-8859-13</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/0057d000004y0jw-691" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="noredirect" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">noredirect</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isUserEntityOverride" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isUserEntityOverride</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/${c_clkRecordId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/secur/logout.jsp</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1544661154">title=&quot;Permission Set Assignments Help (New Window)&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Transaction - GE_CloneToSameOpp_09_LogoutSalesRep
API Name - /0057d000004y0jw-691
Assertion_NotFound</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="GE_CloneToSameOpp_10_LogoutUser" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/secur/logout.jsp-697" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/secur/logout.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/${c_clkRecordId}?noredirect=1&amp;isUserEntityOverride=1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-698" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${p_ServerName1}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${p_ServerName1}/secur/logout.jsp</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="50780126">&lt;label for=&quot;username&quot; class=&quot;label usernamelabel&quot;&gt;Username&lt;/label&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Transaction - GE_CloneToSameOpp_10_LogoutUser
API Name - /-698
Assertion_NotFound</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">import java.time.LocalDateTime;
String responseCode=prev.getResponseCode();
String output = prev.getResponseDataAsString();
if((responseCode != &apos;200&apos;) &amp;&amp; (responseCode != &apos;201&apos;) &amp;&amp; (responseCode != &apos;304&apos;)){
 	writeError();
}
def writeError(){
	
	String time=LocalDateTime.now();
	String output = prev.getResponseDataAsString();
	String responseCode=prev.getResponseCode();
	String requestHeaders=prev.getRequestHeaders();
	String responseHeaders=prev.getResponseHeaders();
	String requestInfo=prev.getSamplerData();
	String api_name = prev.toString()
	FileWriter f= new FileWriter(&quot;${p_ErrorLogPath}&quot;,true);
	BufferedWriter b= new BufferedWriter(f);
	b.write(&quot;Time:${time};&quot;);
 	b.write(&quot;SamplerInfo: ${api_name}\n&quot;);
 	b.write(&quot;Response Code: ${responseCode}\n&quot;);
	b.write(&quot;SamplerInfo: \n${requestInfo}\n&quot;);
	b.write(&quot;requestHeaders: \n${requestHeaders}\n&quot;);
	b.write(&quot;responseHeaders: \n${responseHeaders}\n&quot;);
	b.write(&quot;Response:\n ${output}\n&quot;);
	b.write(&quot;________________________________________________________________\n\n&quot;);
	b.flush();b.close();
}
</stringProp>
        </JSR223Assertion>
        <hashTree/>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="graphiteMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">graphiteMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.graphite.TextGraphiteMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="graphiteHost" elementType="Argument">
                <stringProp name="Argument.name">graphiteHost</stringProp>
                <stringProp name="Argument.value">localhost</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="graphitePort" elementType="Argument">
                <stringProp name="Argument.name">graphitePort</stringProp>
                <stringProp name="Argument.value">2003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="rootMetricsPrefix" elementType="Argument">
                <stringProp name="Argument.name">rootMetricsPrefix</stringProp>
                <stringProp name="Argument.value">jmeter.${project}.${suite}.S01_1U_R${rId}.</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersList" elementType="Argument">
                <stringProp name="Argument.name">samplersList</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="useRegexpForSamplersList" elementType="Argument">
                <stringProp name="Argument.name">useRegexpForSamplersList</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">90;95;99</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.graphite.GraphiteBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
